C:\Users\rania\source\repos\edusat\edusat\test\easy_cnf_instances\aim-100-1_6-no-2.cnf
This is edusat
vars: 100 clauses: 160
reset_iterators - where = 0
m_Score2Vars_it->first = 9
Read 160 clauses in 0.009 secs.
Solving...
BCP
qhead = 0 trail-size = 0
BCP is over
decide
-74 @ 1
BCP
qhead = 0 trail-size = 1
propagating -74
next_not_false
(-7 74 -91 ) now watched by -91
BCP is over
decide
-42 @ 2
BCP
qhead = 1 trail-size = 2
propagating -42
next_not_false
(-39 42 86 ) now watched by 86
next_not_false
(42 87 100 ) now watched by 100
BCP is over
decide
-26 @ 3
BCP
qhead = 2 trail-size = 3
propagating -26
next_not_false
(26 45 -51 ) now watched by -51
next_not_false
(26 60 -90 ) now watched by -90
next_not_false
(26 -40 -59 ) now watched by -59
next_not_false
(26 36 97 ) now watched by 97
BCP is over
decide
-67 @ 4
BCP
qhead = 3 trail-size = 4
propagating -67
next_not_false
(53 67 88 ) now watched by 88
next_not_false
(-41 67 -69 ) now watched by -69
next_not_false
(57 67 -69 ) now watched by -69
next_not_false
(-41 67 69 ) now watched by 69
BCP is over
decide
-33 @ 5
BCP
qhead = 4 trail-size = 5
propagating -33
next_not_false
(33 -42 -66 ) now watched by -66
next_not_false
(33 41 92 ) now watched by 92
BCP is over
decide
-46 @ 6
BCP
qhead = 5 trail-size = 6
propagating -46
next_not_false
(46 -71 97 ) now watched by 97
next_not_false
(46 -64 -84 ) now watched by -84
BCP is over
decide
-60 @ 7
BCP
qhead = 6 trail-size = 7
propagating -60
next_not_false
(-22 60 95 ) now watched by 95
next_not_false
propagating: 
Clause Index = 30 is antecedent for literal -60
-90 @ 7
antecedent[90] = 30
other_watch literal is-90
new implication <- -90
 updateLBDscore() clause = 00E50F70
propagating -90
BCP is over
decide
-36 @ 8
BCP
qhead = 8 trail-size = 9
propagating -36
next_not_false
(-26 36 -50 ) now watched by -50
next_not_false
(36 -49 59 ) now watched by 59
next_not_false
propagating: 
Clause Index = 10 is antecedent for literal -36
97 @ 8
antecedent[97] = 10
other_watch literal is97
new implication <- 97
 updateLBDscore() clause = 00E50FE0
propagating 97
BCP is over
decide
-58 @ 9
BCP
qhead = 10 trail-size = 11
propagating -58
next_not_false
(-32 58 93 ) now watched by 93
next_not_false
(20 58 93 ) now watched by 93
BCP is over
decide
-82 @ 10
BCP
qhead = 11 trail-size = 12
propagating -82
BCP is over
decide
-56 @ 11
BCP
qhead = 12 trail-size = 13
propagating -56
next_not_false
(30 56 65 ) now watched by 65
BCP is over
decide
-59 @ 12
BCP
qhead = 13 trail-size = 14
propagating -59
next_not_false
propagating: 
Clause Index = 14 is antecedent for literal -59
-49 @ 12
antecedent[49] = 14
other_watch literal is-49
new implication <- -49
 updateLBDscore() clause = 00E50DB0
propagating -49
next_not_false
(-28 49 51 ) now watched by 51
next_not_false
propagating: 
Clause Index = 11 is antecedent for literal -49
28 @ 12
antecedent[28] = 11
other_watch literal is28
new implication <- 28
 updateLBDscore() clause = 00E50F70
propagating 28
next_not_false
propagating: 
Clause Index = 13 is antecedent for literal 28
-51 @ 12
antecedent[51] = 13
other_watch literal is-51
new implication <- -51
 updateLBDscore() clause = 00E51050
next_not_false
(-28 49 51 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
28 
0 
0 
0 
0 
-33 
0 
0 
-36 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
-46 
0 
0 
-49 
0 
-51 
0 
0 
0 
0 
-56 
0 
-58 
-59 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
Antecedents: 
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  13;	rev_ant[ 13 ] 	= 	{51, }
ant[90] =  30;	rev_ant[ 30 ] 	= 	{90, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, }
clause 10 is antesedent for : (97,)
clause 11 is antesedent for : (28,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 30 is antesedent for : (90,)
u = -51
v = 51
antecedent num = 13
clause 13 = (-28 -51 59 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
u = 28
v = 28
antecedent num = 11
clause 11 = (28 49 -97 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
u = -49
v = 49
antecedent num = 14
clause 14 = (36 -49 59 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
Learned clause #161. (-97 36 59 )
 learnt clauses:  1 Backtracking to level 8
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
-36 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
97 
0 
0 
0 
59 @ 8
BCP
qhead = 10 trail-size = 11
propagating 59
next_not_false
propagating: 
Clause Index = 16 is antecedent for literal 59
-40 @ 8
antecedent[40] = 16
other_watch literal is-40
new implication <- -40
 updateLBDscore() clause = 00E538B8
next_not_false
(-59 68 81 ) now watched by 81
next_not_false
(2 -59 68 ) now watched by 68
propagating -40
next_not_false
(13 40 -46 ) now watched by -46
next_not_false
propagating: 
Clause Index = 15 is antecedent for literal -40
-1 @ 8
antecedent[1] = 15
other_watch literal is-1
new implication <- -1
 updateLBDscore() clause = 00E53CE0
propagating -1
next_not_false
(1 -33 56 ) now watched by 56
next_not_false
propagating: 
Clause Index = 2 is antecedent for literal -1
-4 @ 8
antecedent[4] = 2
other_watch literal is-4
new implication <- -4
 updateLBDscore() clause = 00E53960
propagating -4
next_not_false
propagating: 
Clause Index = 1 is antecedent for literal -4
8 @ 8
antecedent[8] = 1
other_watch literal is8
new implication <- 8
 updateLBDscore() clause = 00E53B20
next_not_false
(4 8 97 ) now watched by 97
propagating 8
next_not_false
(-8 21 -48 ) now watched by -48
next_not_false
(-8 -80 82 ) now watched by 82
BCP is over
decide
reset_iterators - where = 6
m_Score2Vars_it->first = 6
-58 @ 9
BCP
qhead = 15 trail-size = 16
propagating -58
BCP is over
decide
-82 @ 10
BCP
qhead = 16 trail-size = 17
propagating -82
next_not_false
propagating: 
Clause Index = 25 is antecedent for literal -82
-80 @ 10
antecedent[80] = 25
other_watch literal is-80
new implication <- -80
 updateLBDscore() clause = 00E53CE0
propagating -80
next_not_false
propagating: 
Clause Index = 22 is antecedent for literal -80
54 @ 10
antecedent[54] = 22
other_watch literal is54
new implication <- 54
 updateLBDscore() clause = 00E53CE0
propagating 54
next_not_false
propagating: 
Clause Index = 24 is antecedent for literal 54
-14 @ 10
antecedent[14] = 24
other_watch literal is-14
new implication <- -14
 updateLBDscore() clause = 00E538B8
next_not_false
(14 -54 80 ) is conflicting
State: -1 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
-14 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
-36 
0 
0 
0 
-40 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
0 
0 
54 
0 
0 
0 
-58 
59 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
-80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, }
ant[8] =  1;	rev_ant[ 1 ] 	= 	{8, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  13;	rev_ant[ 13 ] 	= 	{51, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[90] =  30;	rev_ant[ 30 ] 	= 	{90, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, }
clause 1 is antesedent for : (8,)
clause 2 is antesedent for : (4,)
clause 10 is antesedent for : (97,)
clause 11 is antesedent for : (28,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,)
clause 16 is antesedent for : (40,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 30 is antesedent for : (90,)
clause 160 is antesedent for : (59,)
u = -14
v = 14
antecedent num = 24
clause 24 = (-14 -54 82 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
u = 54
v = 54
antecedent num = 22
clause 22 = (54 80 82 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
u = -80
v = 80
antecedent num = 25
clause 25 = (-8 -80 82 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
Learned clause #162. (-8 82 )
 learnt clauses:  2 Backtracking to level 8
backtrack
State: -1 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
-36 
0 
0 
0 
-40 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
59 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
97 
0 
0 
0 
82 @ 8
BCP
qhead = 15 trail-size = 16
propagating 82
BCP is over
decide
reset_iterators - where = 6
m_Score2Vars_it->first = 6
-58 @ 9
BCP
qhead = 16 trail-size = 17
propagating -58
BCP is over
decide
-56 @ 10
BCP
qhead = 17 trail-size = 18
propagating -56
next_not_false
clause is sat
BCP is over
decide
-49 @ 11
BCP
qhead = 18 trail-size = 19
propagating -49
next_not_false
propagating: 
Clause Index = 11 is antecedent for literal -49
28 @ 11
antecedent[28] = 11
other_watch literal is28
clause 11is already antecedent of var 28
new implication <- 28
 updateLBDscore() clause = 00E53D18
propagating 28
next_not_false
(-28 -51 59 ) now watched by 59
next_not_false
propagating: 
Clause Index = 12 is antecedent for literal 28
51 @ 11
antecedent[51] = 12
other_watch literal is51
new implication <- 51
 updateLBDscore() clause = 00E53B58
propagating 51
next_not_false
propagating: 
Clause Index = 59 is antecedent for literal 51
45 @ 11
antecedent[45] = 59
other_watch literal is45
new implication <- 45
 updateLBDscore() clause = 00E53D18
next_not_false
(-42 -51 -74 ) now watched by -74
next_not_false
clause is sat
propagating 45
next_not_false
(-45 61 -71 ) now watched by -71
next_not_false
(-45 63 84 ) now watched by 84
next_not_false
(39 -45 -75 ) now watched by -75
BCP is over
decide
-7 @ 12
BCP
qhead = 22 trail-size = 23
propagating -7
next_not_false
(7 9 -80 ) now watched by -80
next_not_false
(7 -92 97 ) now watched by 97
BCP is over
decide
-5 @ 13
BCP
qhead = 23 trail-size = 24
propagating -5
next_not_false
(5 76 91 ) now watched by 91
next_not_false
(5 -42 -88 ) now watched by -88
BCP is over
decide
-23 @ 14
BCP
qhead = 24 trail-size = 25
propagating -23
next_not_false
propagating: 
Clause Index = 152 is antecedent for literal -23
2 @ 14
antecedent[2] = 152
other_watch literal is2
new implication <- 2
 updateLBDscore() clause = 00E54258
next_not_false
propagating: 
Clause Index = 144 is antecedent for literal -23
-38 @ 14
antecedent[38] = 144
other_watch literal is-38
new implication <- -38
 updateLBDscore() clause = 00E543A8
next_not_false
(23 -27 63 ) now watched by 63
propagating 2
next_not_false
(-2 -3 25 ) now watched by 25
next_not_false
(-2 -30 47 ) now watched by 47
propagating -38
next_not_false
(35 38 89 ) now watched by 89
next_not_false
(38 -67 72 ) now watched by 72
BCP is over
decide
-85 @ 15
BCP
qhead = 27 trail-size = 28
propagating -85
next_not_false
propagating: 
Clause Index = 153 is antecedent for literal -85
84 @ 15
antecedent[84] = 153
other_watch literal is84
new implication <- 84
 updateLBDscore() clause = 00E53E30
activity score += 5 for variable 84
 increaseVariableActivityScore() Var v = 84
propagating 84
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal 84
-64 @ 15
antecedent[64] = 79
other_watch literal is-64
new implication <- -64
 updateLBDscore() clause = 00E54290
propagating -64
BCP is over
decide
-75 @ 16
BCP
qhead = 30 trail-size = 31
propagating -75
next_not_false
(-29 75 81 ) now watched by 81
next_not_false
(-49 75 -91 ) now watched by -91
BCP is over
decide
-93 @ 17
BCP
qhead = 31 trail-size = 32
propagating -93
next_not_false
propagating: 
Clause Index = 36 is antecedent for literal -93
20 @ 17
antecedent[20] = 36
other_watch literal is20
new implication <- 20
 updateLBDscore() clause = 00E54450
next_not_false
propagating: 
Clause Index = 38 is antecedent for literal -93
-32 @ 17
antecedent[32] = 38
other_watch literal is-32
new implication <- -32
 updateLBDscore() clause = 00E54178
propagating 20
next_not_false
(-20 32 58 ) is conflicting
State: -1 
2 
0 
-4 
-5 
0 
-7 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
20 
0 
0 
-23 
0 
0 
-26 
0 
28 
0 
0 
0 
-32 
-33 
0 
0 
-36 
0 
-38 
0 
-40 
0 
-42 
0 
0 
45 
-46 
0 
0 
-49 
0 
51 
0 
0 
0 
0 
-56 
0 
-58 
59 
-60 
0 
0 
0 
-64 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
-75 
0 
0 
0 
0 
0 
0 
82 
0 
84 
-85 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, }
ant[8] =  1;	rev_ant[ 1 ] 	= 	{8, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  30;	rev_ant[ 30 ] 	= 	{90, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, }
clause 1 is antesedent for : (8,)
clause 2 is antesedent for : (4,)
clause 10 is antesedent for : (97,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,)
clause 16 is antesedent for : (40,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 30 is antesedent for : (90,)
clause 36 is antesedent for : (20,)
clause 38 is antesedent for : (32,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 144 is antesedent for : (38,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,)
u = -32
v = 32
antecedent num = 38
clause 38 = (-32 58 93 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
u = 20
v = 20
antecedent num = 36
clause 36 = (20 58 93 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
Learned clause #163. (58 93 )
 learnt clauses:  3 Backtracking to level 9
backtrack
State: -1 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
-36 
0 
0 
0 
-40 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-58 
59 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
97 
0 
0 
0 
93 @ 9
BCP
qhead = 17 trail-size = 18
propagating 93
next_not_false
(18 -93 -94 ) now watched by -94
next_not_false
(-47 -93 94 ) now watched by 94
BCP is over
decide
reset_iterators - where = 10
m_Score2Vars_it->first = 10
84 @ 10
BCP
qhead = 18 trail-size = 19
propagating 84
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal 84
-64 @ 10
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E53FB8
propagating -64
BCP is over
decide
-56 @ 11
BCP
qhead = 20 trail-size = 21
propagating -56
next_not_false
clause is sat
BCP is over
decide
-49 @ 12
BCP
qhead = 21 trail-size = 22
propagating -49
next_not_false
propagating: 
Clause Index = 11 is antecedent for literal -49
28 @ 12
antecedent[28] = 11
other_watch literal is28
clause 11is already antecedent of var 28
new implication <- 28
 updateLBDscore() clause = 00E54290
propagating 28
next_not_false
propagating: 
Clause Index = 12 is antecedent for literal 28
51 @ 12
antecedent[51] = 12
other_watch literal is51
clause 12is already antecedent of var 51
new implication <- 51
 updateLBDscore() clause = 00E54178
propagating 51
next_not_false
propagating: 
Clause Index = 59 is antecedent for literal 51
45 @ 12
antecedent[45] = 59
other_watch literal is45
clause 59is already antecedent of var 45
new implication <- 45
 updateLBDscore() clause = 00E53E68
next_not_false
clause is sat
propagating 45
BCP is over
decide
-7 @ 13
BCP
qhead = 25 trail-size = 26
propagating -7
BCP is over
decide
-5 @ 14
BCP
qhead = 26 trail-size = 27
propagating -5
BCP is over
decide
-23 @ 15
BCP
qhead = 27 trail-size = 28
propagating -23
next_not_false
propagating: 
Clause Index = 152 is antecedent for literal -23
2 @ 15
antecedent[2] = 152
other_watch literal is2
clause 152is already antecedent of var 2
new implication <- 2
 updateLBDscore() clause = 00E54178
next_not_false
propagating: 
Clause Index = 144 is antecedent for literal -23
-38 @ 15
antecedent[38] = 144
other_watch literal is-38
clause 144is already antecedent of var 38
new implication <- -38
 updateLBDscore() clause = 00E54178
propagating 2
propagating -38
BCP is over
decide
-85 @ 16
BCP
qhead = 30 trail-size = 31
propagating -85
next_not_false
clause is sat
BCP is over
decide
-75 @ 17
BCP
qhead = 31 trail-size = 32
propagating -75
BCP is over
decide
-48 @ 18
BCP
qhead = 32 trail-size = 33
propagating -48
next_not_false
(48 -55 -67 ) now watched by -67
next_not_false
(48 55 -67 ) now watched by -67
BCP is over
decide
-31 @ 19
BCP
qhead = 33 trail-size = 34
propagating -31
next_not_false
(31 34 37 ) now watched by 37
next_not_false
(31 -72 -85 ) now watched by -85
BCP is over
decide
-95 @ 20
BCP
qhead = 34 trail-size = 35
propagating -95
next_not_false
propagating: 
Clause Index = 32 is antecedent for literal -95
-22 @ 20
antecedent[22] = 32
other_watch literal is-22
new implication <- -22
 updateLBDscore() clause = 00E53FB8
next_not_false
(-60 95 -99 ) now watched by -99
next_not_false
(-60 95 99 ) now watched by 99
propagating -22
next_not_false
(22 -47 100 ) now watched by 100
next_not_false
clause is sat
BCP is over
decide
-77 @ 21
BCP
qhead = 36 trail-size = 37
propagating -77
next_not_false
clause is sat
next_not_false
(71 77 84 ) now watched by 84
BCP is over
decide
-13 @ 22
BCP
qhead = 37 trail-size = 38
propagating -13
next_not_false
clause is sat
next_not_false
(13 -21 -48 ) now watched by -48
next_not_false
propagating: 
Clause Index = 26 is antecedent for literal -13
52 @ 22
antecedent[52] = 26
other_watch literal is52
new implication <- 52
 updateLBDscore() clause = 00E50678
propagating 52
next_not_false
propagating: 
Clause Index = 29 is antecedent for literal 52
-34 @ 22
antecedent[34] = 29
other_watch literal is-34
new implication <- -34
 updateLBDscore() clause = 00E50678
next_not_false
(34 -52 -82 ) is conflicting
State: -1 
2 
0 
-4 
-5 
0 
-7 
8 
0 
0 
0 
0 
-13 
0 
0 
0 
0 
0 
0 
0 
0 
-22 
-23 
0 
0 
-26 
0 
28 
0 
0 
-31 
0 
-33 
-34 
0 
-36 
0 
-38 
0 
-40 
0 
-42 
0 
0 
45 
-46 
0 
-48 
-49 
0 
51 
52 
0 
0 
0 
-56 
0 
-58 
59 
-60 
0 
0 
0 
-64 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
-75 
0 
-77 
0 
0 
0 
0 
82 
0 
84 
-85 
0 
0 
0 
0 
-90 
0 
0 
93 
0 
-95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, }
ant[8] =  1;	rev_ant[ 1 ] 	= 	{8, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  26;	rev_ant[ 26 ] 	= 	{52, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  30;	rev_ant[ 30 ] 	= 	{90, }
ant[93] =  162;	rev_ant[ 162 ] 	= 	{93, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, }
clause 1 is antesedent for : (8,)
clause 2 is antesedent for : (4,)
clause 10 is antesedent for : (97,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,)
clause 16 is antesedent for : (40,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,)
clause 32 is antesedent for : (22,)
clause 36 is antesedent for : (20,)
clause 38 is antesedent for : (32,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 144 is antesedent for : (38,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (93,)
u = -34
v = 34
antecedent num = 29
clause 29 = (-34 -52 -82 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
Learned clause #164. (-82 -52 )
 learnt clauses:  4 Backtracking to level 8
backtrack
State: -1 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
-36 
0 
0 
0 
-40 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
59 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
97 
0 
0 
0 
-52 @ 8
BCP
qhead = 16 trail-size = 17
propagating -52
next_not_false
propagating: 
Clause Index = 27 is antecedent for literal -52
-13 @ 8
antecedent[13] = 27
other_watch literal is-13
new implication <- -13
 updateLBDscore() clause = 00E588A8
next_not_false
(13 52 90 ) is conflicting
State: -1 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
-13 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
-36 
0 
0 
0 
-40 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
0 
59 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, }
ant[8] =  1;	rev_ant[ 1 ] 	= 	{8, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  30;	rev_ant[ 30 ] 	= 	{90, }
ant[93] =  162;	rev_ant[ 162 ] 	= 	{93, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, }
clause 1 is antesedent for : (8,)
clause 2 is antesedent for : (4,)
clause 10 is antesedent for : (97,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,)
clause 16 is antesedent for : (40,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,)
clause 32 is antesedent for : (22,)
clause 36 is antesedent for : (20,)
clause 38 is antesedent for : (32,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 144 is antesedent for : (38,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (93,)
clause 163 is antesedent for : (52,)
u = -13
v = 13
antecedent num = 27
clause 27 = (-13 52 90 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
Learned clause #165. (90 52 )
 learnt clauses:  5 Backtracking to level 7
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 @ 7
BCP
qhead = 8 trail-size = 9
propagating 52
next_not_false
propagating: 
Clause Index = 163 is antecedent for literal 52
-82 @ 7
antecedent[82] = 163
other_watch literal is-82
new implication <- -82
 updateLBDscore() clause = 00E58790
activity score += 5 for variable 82
 increaseVariableActivityScore() Var v = 82
next_not_false
(-34 -52 -82 ) now watched by -82
next_not_false
(34 -52 -82 ) now watched by -82
propagating -82
next_not_false
propagating: 
Clause Index = 161 is antecedent for literal -82
-8 @ 7
antecedent[8] = 161
other_watch literal is-8
new implication <- -8
 updateLBDscore() clause = 00E591A0
activity score += 5 for variable 8
 increaseVariableActivityScore() Var v = 8
next_not_false
(-8 -80 82 ) now watched by -8
propagating -8
next_not_false
(4 8 -97 ) now watched by -97
next_not_false
(4 8 97 ) now watched by 4
BCP is over
decide
reset_iterators - where = 10
m_Score2Vars_it->first = 10
84 @ 8
BCP
qhead = 11 trail-size = 12
propagating 84
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal 84
-64 @ 8
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E592B8
propagating -64
BCP is over
decide
-58 @ 9
BCP
qhead = 13 trail-size = 14
propagating -58
next_not_false
propagating: 
Clause Index = 162 is antecedent for literal -58
93 @ 9
antecedent[93] = 162
other_watch literal is93
clause 162is already antecedent of var 93
new implication <- 93
 updateLBDscore() clause = 00E59210
activity score += 5 for variable 93
 increaseVariableActivityScore() Var v = 93
propagating 93
BCP is over
decide
97 @ 10
BCP
qhead = 15 trail-size = 16
propagating 97
next_not_false
propagating: 
Clause Index = 1 is antecedent for literal 97
4 @ 10
antecedent[4] = 1
other_watch literal is4
new implication <- 4
 updateLBDscore() clause = 00E59478
next_not_false
(-97 36 59 ) now watched by 36
propagating 4
next_not_false
(-1 -4 -36 ) now watched by -36
next_not_false
propagating: 
Clause Index = 2 is antecedent for literal 4
1 @ 10
antecedent[1] = 2
other_watch literal is1
new implication <- 1
 updateLBDscore() clause = 00E58FA8
propagating 1
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 1
-36 @ 10
antecedent[36] = 21
other_watch literal is-36
new implication <- -36
 updateLBDscore() clause = 00E592F0
next_not_false
(-1 40 -59 ) now watched by -59
next_not_false
propagating: 
Clause Index = 9 is antecedent for literal 1
20 @ 10
antecedent[20] = 9
other_watch literal is20
new implication <- 20
 updateLBDscore() clause = 00E593D0
propagating -36
next_not_false
propagating: 
Clause Index = 160 is antecedent for literal -36
59 @ 10
antecedent[59] = 160
other_watch literal is59
clause 160is already antecedent of var 59
new implication <- 59
 updateLBDscore() clause = 00E59248
next_not_false
clause is sat
propagating 20
next_not_false
propagating: 
Clause Index = 37 is antecedent for literal 20
32 @ 10
antecedent[32] = 37
other_watch literal is32
new implication <- 32
 updateLBDscore() clause = 00E58FE0
next_not_false
(-20 -57 73 ) now watched by 73
propagating 59
next_not_false
propagating: 
Clause Index = 15 is antecedent for literal 59
40 @ 10
antecedent[40] = 15
other_watch literal is40
new implication <- 40
 updateLBDscore() clause = 00E58F00
next_not_false
(26 -40 -59 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
20 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
32 
-33 
0 
0 
-36 
0 
0 
0 
40 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
52 
0 
0 
0 
0 
0 
-58 
59 
-60 
0 
0 
0 
-64 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
-82 
0 
84 
0 
0 
0 
0 
0 
-90 
0 
0 
93 
0 
0 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
Antecedents: 
ant[1] =  2;	rev_ant[ 2 ] 	= 	{4, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  1;	rev_ant[ 1 ] 	= 	{8, 4, }
ant[8] =  161;	rev_ant[ 161 ] 	= 	{82, 8, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  164;	rev_ant[ 164 ] 	= 	{52, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  163;	rev_ant[ 163 ] 	= 	{52, 82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  30;	rev_ant[ 30 ] 	= 	{90, }
ant[93] =  162;	rev_ant[ 162 ] 	= 	{93, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, }
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,)
clause 32 is antesedent for : (22,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 144 is antesedent for : (38,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,8,)
clause 162 is antesedent for : (93,)
clause 163 is antesedent for : (52,82,)
clause 164 is antesedent for : (52,)
u = 40
v = 40
antecedent num = 15
clause 15 = (-1 40 -59 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
u = 59
v = 59
antecedent num = 160
clause 160 = (-97 36 59 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
u = -36
v = 36
antecedent num = 21
clause 21 = (-1 -4 -36 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
u = 1
v = 1
antecedent num = 2
clause 2 = (1 -4 33 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
u = 4
v = 4
antecedent num = 1
clause 1 = (4 8 -97 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
Learned clause #166. (26 33 8 -97 )
 learnt clauses:  6 Backtracking to level 7
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
52 
0 
0 
0 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-97 @ 7
BCP
qhead = 11 trail-size = 12
propagating -97
next_not_false
(7 -92 97 ) now watched by 7
next_not_false
propagating: 
Clause Index = 0 is antecedent for literal -97
4 @ 7
antecedent[4] = 0
other_watch literal is4
new implication <- 4
 updateLBDscore() clause = 00E58E20
next_not_false
propagating: 
Clause Index = 148 is antecedent for literal -97
-71 @ 7
antecedent[71] = 148
other_watch literal is-71
new implication <- -71
 updateLBDscore() clause = 00E58E20
next_not_false
propagating: 
Clause Index = 10 is antecedent for literal -97
36 @ 7
antecedent[36] = 10
other_watch literal is36
new implication <- 36
 updateLBDscore() clause = 00E58F00
propagating 4
next_not_false
propagating: 
Clause Index = 2 is antecedent for literal 4
1 @ 7
antecedent[1] = 2
other_watch literal is1
clause 2is already antecedent of var 1
new implication <- 1
 updateLBDscore() clause = 00E58E20
propagating -71
next_not_false
(71 77 84 ) now watched by 77
next_not_false
(-39 71 -98 ) now watched by -98
propagating 36
next_not_false
(-1 -4 -36 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
36 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
52 
0 
0 
0 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
-71 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
-97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
Antecedents: 
ant[1] =  2;	rev_ant[ 2 ] 	= 	{4, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  0;	rev_ant[ 0 ] 	= 	{4, }
ant[8] =  161;	rev_ant[ 161 ] 	= 	{82, 8, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  164;	rev_ant[ 164 ] 	= 	{52, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  163;	rev_ant[ 163 ] 	= 	{52, 82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  30;	rev_ant[ 30 ] 	= 	{90, }
ant[93] =  162;	rev_ant[ 162 ] 	= 	{93, }
ant[97] =  165;	rev_ant[ 165 ] 	= 	{97, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,)
clause 32 is antesedent for : (22,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,8,)
clause 162 is antesedent for : (93,)
clause 163 is antesedent for : (52,82,)
clause 164 is antesedent for : (52,)
clause 165 is antesedent for : (97,)
u = 1
v = 1
antecedent num = 2
clause 2 = (1 -4 33 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
u = 36
v = 36
antecedent num = 10
clause 10 = (26 36 97 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
u = 4
v = 4
antecedent num = 0
clause 0 = (4 8 97 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
u = -97
v = 97
antecedent num = 165
clause 165 = (26 33 8 -97 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
Learned clause #167. (33 26 8 )
 learnt clauses:  7 Backtracking to level 5
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
8 @ 5
BCP
qhead = 5 trail-size = 6
propagating 8
next_not_false
(-8 -80 82 ) now watched by 82
next_not_false
propagating: 
Clause Index = 161 is antecedent for literal 8
82 @ 5
antecedent[82] = 161
other_watch literal is82
clause 161is already antecedent of var 82
new implication <- 82
 updateLBDscore() clause = 00E590C0
activity score += 5 for variable 82
 increaseVariableActivityScore() Var v = 82
propagating 82
next_not_false
(34 -52 -82 ) now watched by -52
next_not_false
(-34 -52 -82 ) now watched by -52
next_not_false
propagating: 
Clause Index = 163 is antecedent for literal 82
-52 @ 5
antecedent[52] = 163
other_watch literal is-52
clause 163is already antecedent of var 52
new implication <- -52
 updateLBDscore() clause = 00E59B78
activity score += 5 for variable 52
 increaseVariableActivityScore() Var v = 52
propagating -52
next_not_false
propagating: 
Clause Index = 164 is antecedent for literal -52
90 @ 5
antecedent[90] = 164
other_watch literal is90
new implication <- 90
 updateLBDscore() clause = 00E59868
activity score += 5 for variable 90
 increaseVariableActivityScore() Var v = 90
next_not_false
(-13 52 90 ) now watched by 90
next_not_false
(13 52 90 ) now watched by 90
propagating 90
next_not_false
propagating: 
Clause Index = 30 is antecedent for literal 90
60 @ 5
antecedent[60] = 30
other_watch literal is60
new implication <- 60
 updateLBDscore() clause = 00E59718
next_not_false
(55 -90 -95 ) now watched by -95
propagating 60
next_not_false
(44 -60 91 ) now watched by 91
next_not_false
(-60 95 -99 ) now watched by 95
next_not_false
(-60 95 99 ) now watched by 95
BCP is over
decide
reset_iterators - where = 12.0306
m_Score2Vars_it->first = 12.0306
84 @ 6
BCP
qhead = 10 trail-size = 11
propagating 84
next_not_false
(46 -64 -84 ) now watched by 46
BCP is over
decide
93 @ 7
BCP
qhead = 11 trail-size = 12
propagating 93
BCP is over
decide
-58 @ 8
BCP
qhead = 12 trail-size = 13
propagating -58
next_not_false
clause is sat
BCP is over
decide
-97 @ 9
BCP
qhead = 13 trail-size = 14
propagating -97
next_not_false
(4 8 97 ) now watched by 8
next_not_false
(46 -71 97 ) now watched by 46
next_not_false
propagating: 
Clause Index = 10 is antecedent for literal -97
36 @ 9
antecedent[36] = 10
other_watch literal is36
clause 10is already antecedent of var 36
new implication <- 36
 updateLBDscore() clause = 00E59AD0
propagating 36
next_not_false
(-1 -4 -36 ) now watched by -4
next_not_false
(-36 -50 -74 ) now watched by -74
BCP is over
decide
-46 @ 10
BCP
qhead = 15 trail-size = 16
propagating -46
next_not_false
propagating: 
Clause Index = 148 is antecedent for literal -46
-71 @ 10
antecedent[71] = 148
other_watch literal is-71
clause 148is already antecedent of var 71
new implication <- -71
 updateLBDscore() clause = 00E59638
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal -46
-64 @ 10
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E594B0
propagating -71
propagating -64
BCP is over
decide
-56 @ 11
BCP
qhead = 18 trail-size = 19
propagating -56
next_not_false
(1 -33 56 ) now watched by 1
BCP is over
decide
59 @ 12
BCP
qhead = 19 trail-size = 20
propagating 59
next_not_false
(-1 40 -59 ) now watched by -1
next_not_false
propagating: 
Clause Index = 16 is antecedent for literal 59
-40 @ 12
antecedent[40] = 16
other_watch literal is-40
clause 16is already antecedent of var 40
new implication <- -40
 updateLBDscore() clause = 00E59B40
propagating -40
next_not_false
propagating: 
Clause Index = 15 is antecedent for literal -40
-1 @ 12
antecedent[1] = 15
other_watch literal is-1
clause 15is already antecedent of var 1
new implication <- -1
 updateLBDscore() clause = 00E59718
propagating -1
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 2 is antecedent for literal -1
-4 @ 12
antecedent[4] = 2
other_watch literal is-4
clause 2is already antecedent of var 4
new implication <- -4
 updateLBDscore() clause = 00E594B0
propagating -4
next_not_false
clause is sat
next_not_false
(4 8 -97 ) now watched by 8
BCP is over
decide
-49 @ 13
BCP
qhead = 23 trail-size = 24
propagating -49
next_not_false
(28 49 -97 ) now watched by -97
BCP is over
decide
-7 @ 14
BCP
qhead = 24 trail-size = 25
propagating -7
next_not_false
propagating: 
Clause Index = 101 is antecedent for literal -7
-92 @ 14
antecedent[92] = 101
other_watch literal is-92
new implication <- -92
 updateLBDscore() clause = 00E59A28
propagating -92
next_not_false
propagating: 
Clause Index = 44 is antecedent for literal -92
41 @ 14
antecedent[41] = 44
other_watch literal is41
new implication <- 41
 updateLBDscore() clause = 00E59868
propagating 41
next_not_false
propagating: 
Clause Index = 50 is antecedent for literal 41
-69 @ 14
antecedent[69] = 50
other_watch literal is-69
new implication <- -69
 updateLBDscore() clause = 00E59638
next_not_false
(-41 67 69 ) is conflicting
State: -1 
0 
0 
-4 
0 
0 
-7 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
36 
0 
0 
0 
-40 
41 
-42 
0 
0 
0 
-46 
0 
0 
-49 
0 
0 
-52 
0 
0 
0 
-56 
0 
-58 
59 
60 
0 
0 
0 
-64 
0 
0 
-67 
0 
-69 
0 
-71 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
-92 
93 
0 
0 
0 
-97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, 1, }
ant[8] =  166;	rev_ant[ 166 ] 	= 	{8, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  44;	rev_ant[ 44 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 82, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  50;	rev_ant[ 50 ] 	= 	{69, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, 8, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{52, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  162;	rev_ant[ 162 ] 	= 	{93, }
ant[97] =  165;	rev_ant[ 165 ] 	= 	{97, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 44 is antesedent for : (41,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 101 is antesedent for : (92,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,8,)
clause 162 is antesedent for : (93,)
clause 163 is antesedent for : (52,82,)
clause 164 is antesedent for : (52,90,)
clause 165 is antesedent for : (97,)
clause 166 is antesedent for : (8,)
u = -69
v = 69
antecedent num = 50
clause 50 = (-41 67 -69 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
Learned clause #168. (67 -41 )
 learnt clauses:  8 Backtracking to level 4
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-41 @ 4
BCP
qhead = 4 trail-size = 5
propagating -41
next_not_false
(-18 41 -92 ) now watched by -92
next_not_false
(33 41 92 ) now watched by 33
BCP is over
decide
reset_iterators - where = 17.0306
m_Score2Vars_it->first = 17.0306
82 @ 5
BCP
qhead = 5 trail-size = 6
propagating 82
next_not_false
propagating: 
Clause Index = 163 is antecedent for literal 82
-52 @ 5
antecedent[52] = 163
other_watch literal is-52
clause 163is already antecedent of var 52
new implication <- -52
 updateLBDscore() clause = 00E59AD0
activity score += 5 for variable 52
 increaseVariableActivityScore() Var v = 52
propagating -52
next_not_false
propagating: 
Clause Index = 164 is antecedent for literal -52
90 @ 5
antecedent[90] = 164
other_watch literal is90
clause 164is already antecedent of var 90
new implication <- 90
 updateLBDscore() clause = 00E59AD0
activity score += 5 for variable 90
 increaseVariableActivityScore() Var v = 90
propagating 90
next_not_false
propagating: 
Clause Index = 30 is antecedent for literal 90
60 @ 5
antecedent[60] = 30
other_watch literal is60
clause 30is already antecedent of var 60
new implication <- 60
 updateLBDscore() clause = 00E5A208
propagating 60
BCP is over
decide
8 @ 6
BCP
qhead = 9 trail-size = 10
propagating 8
next_not_false
clause is sat
BCP is over
decide
84 @ 7
BCP
qhead = 10 trail-size = 11
propagating 84
BCP is over
decide
93 @ 8
BCP
qhead = 11 trail-size = 12
propagating 93
BCP is over
decide
-33 @ 9
BCP
qhead = 12 trail-size = 13
propagating -33
next_not_false
propagating: 
Clause Index = 44 is antecedent for literal -33
92 @ 9
antecedent[92] = 44
other_watch literal is92
new implication <- 92
 updateLBDscore() clause = 00E59C90
next_not_false
clause is sat
propagating 92
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal 92
-18 @ 9
antecedent[18] = 47
other_watch literal is-18
new implication <- -18
 updateLBDscore() clause = 00E5A010
next_not_false
(7 -92 97 ) now watched by 97
propagating -18
next_not_false
propagating: 
Clause Index = 43 is antecedent for literal -18
-94 @ 9
antecedent[94] = 43
other_watch literal is-94
new implication <- -94
 updateLBDscore() clause = 00E59E50
next_not_false
propagating: 
Clause Index = 41 is antecedent for literal -18
47 @ 9
antecedent[47] = 41
other_watch literal is47
new implication <- 47
 updateLBDscore() clause = 00E59DE0
propagating -94
next_not_false
(-47 -93 94 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
0 
47 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
0 
0 
60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
92 
93 
-94 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, 1, }
ant[8] =  166;	rev_ant[ 166 ] 	= 	{8, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[18] =  47;	rev_ant[ 47 ] 	= 	{18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  167;	rev_ant[ 167 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 82, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  50;	rev_ant[ 50 ] 	= 	{69, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, 8, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{52, 90, }
ant[92] =  44;	rev_ant[ 44 ] 	= 	{41, 92, }
ant[93] =  162;	rev_ant[ 162 ] 	= 	{93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  165;	rev_ant[ 165 ] 	= 	{97, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,)
clause 47 is antesedent for : (18,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 101 is antesedent for : (92,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,8,)
clause 162 is antesedent for : (93,)
clause 163 is antesedent for : (52,82,)
clause 164 is antesedent for : (52,90,)
clause 165 is antesedent for : (97,)
clause 166 is antesedent for : (8,)
clause 167 is antesedent for : (41,)
u = 47
v = 47
antecedent num = 41
clause 41 = (18 47 94 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
u = -94
v = 94
antecedent num = 43
clause 43 = (18 -93 -94 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
Learned clause #169. (-93 18 )
 learnt clauses:  9 Backtracking to level 8
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
0 
0 
60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
18 @ 8
BCP
qhead = 12 trail-size = 13
propagating 18
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal 18
-92 @ 8
antecedent[92] = 47
other_watch literal is-92
new implication <- -92
 updateLBDscore() clause = 00E59DA8
next_not_false
propagating: 
Clause Index = 46 is antecedent for literal 18
-17 @ 8
antecedent[17] = 46
other_watch literal is-17
new implication <- -17
 updateLBDscore() clause = 00E5A198
propagating -92
next_not_false
propagating: 
Clause Index = 44 is antecedent for literal -92
33 @ 8
antecedent[33] = 44
other_watch literal is33
new implication <- 33
 updateLBDscore() clause = 00E59EC0
propagating -17
next_not_false
(17 -29 69 ) now watched by 69
next_not_false
(17 -33 92 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
-17 
18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
0 
0 
60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
-92 
93 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
168) (-93 18 )
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, 1, }
ant[8] =  166;	rev_ant[ 166 ] 	= 	{8, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, }
ant[18] =  168;	rev_ant[ 168 ] 	= 	{18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  167;	rev_ant[ 167 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 82, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  50;	rev_ant[ 50 ] 	= 	{69, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, 8, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{52, 90, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  162;	rev_ant[ 162 ] 	= 	{93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  165;	rev_ant[ 165 ] 	= 	{97, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 46 is antesedent for : (17,)
clause 47 is antesedent for : (18,92,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 101 is antesedent for : (92,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,8,)
clause 162 is antesedent for : (93,)
clause 163 is antesedent for : (52,82,)
clause 164 is antesedent for : (52,90,)
clause 165 is antesedent for : (97,)
clause 166 is antesedent for : (8,)
clause 167 is antesedent for : (41,)
clause 168 is antesedent for : (18,)
u = 33
v = 33
antecedent num = 44
clause 44 = (33 41 92 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
168) (-93 18 )
u = -17
v = 17
antecedent num = 46
clause 46 = (-17 -18 92 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
168) (-93 18 )
u = -92
v = 92
antecedent num = 47
clause 47 = (-18 41 -92 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
168) (-93 18 )
Learned clause #170. (41 -18 )
 learnt clauses:  10 Backtracking to level 4
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-18 @ 4
BCP
qhead = 5 trail-size = 6
propagating -18
next_not_false
propagating: 
Clause Index = 168 is antecedent for literal -18
-93 @ 4
antecedent[93] = 168
other_watch literal is-93
new implication <- -93
 updateLBDscore() clause = 00E59C90
activity score += 5 for variable 93
 increaseVariableActivityScore() Var v = 93
next_not_false
(18 -93 -94 ) now watched by -93
next_not_false
(18 47 94 ) now watched by 94
propagating -93
next_not_false
propagating: 
Clause Index = 162 is antecedent for literal -93
58 @ 4
antecedent[58] = 162
other_watch literal is58
new implication <- 58
 updateLBDscore() clause = 00E5A358
activity score += 5 for variable 58
 increaseVariableActivityScore() Var v = 58
next_not_false
(20 58 93 ) now watched by 58
next_not_false
(-32 58 93 ) now watched by 58
propagating 58
next_not_false
(-55 -58 -76 ) now watched by -76
next_not_false
propagating: 
Clause Index = 39 is antecedent for literal 58
76 @ 4
antecedent[76] = 39
other_watch literal is76
new implication <- 76
 updateLBDscore() clause = 00E5A358
propagating 76
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 76
-55 @ 4
antecedent[55] = 40
other_watch literal is-55
new implication <- -55
 updateLBDscore() clause = 00E5A5F8
propagating -55
next_not_false
(48 55 -67 ) now watched by 48
next_not_false
(55 -90 -95 ) now watched by -90
BCP is over
decide
reset_iterators - where = 17.0306
m_Score2Vars_it->first = 17.0306
82 @ 5
BCP
qhead = 10 trail-size = 11
propagating 82
next_not_false
propagating: 
Clause Index = 163 is antecedent for literal 82
-52 @ 5
antecedent[52] = 163
other_watch literal is-52
clause 163is already antecedent of var 52
new implication <- -52
 updateLBDscore() clause = 00E5A5F8
activity score += 5 for variable 52
 increaseVariableActivityScore() Var v = 52
propagating -52
next_not_false
propagating: 
Clause Index = 164 is antecedent for literal -52
90 @ 5
antecedent[90] = 164
other_watch literal is90
clause 164is already antecedent of var 90
new implication <- 90
 updateLBDscore() clause = 00E5A400
activity score += 5 for variable 90
 increaseVariableActivityScore() Var v = 90
propagating 90
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal 90
-95 @ 5
antecedent[95] = 35
other_watch literal is-95
new implication <- -95
 updateLBDscore() clause = 00E53C70
next_not_false
propagating: 
Clause Index = 30 is antecedent for literal 90
60 @ 5
antecedent[60] = 30
other_watch literal is60
clause 30is already antecedent of var 60
new implication <- 60
 updateLBDscore() clause = 00E53960
propagating -95
next_not_false
propagating: 
Clause Index = 33 is antecedent for literal -95
99 @ 5
antecedent[99] = 33
other_watch literal is99
new implication <- 99
 updateLBDscore() clause = 00E53C70
next_not_false
(-60 95 -99 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
-55 
0 
0 
58 
0 
60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
-93 
0 
-95 
0 
0 
0 
99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
168) (-93 18 )
169) (41 -18 )
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, 1, }
ant[8] =  166;	rev_ant[ 166 ] 	= 	{8, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, }
ant[18] =  169;	rev_ant[ 169 ] 	= 	{18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  167;	rev_ant[ 167 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 82, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{93, 58, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  50;	rev_ant[ 50 ] 	= 	{69, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, 8, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{52, 90, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  168;	rev_ant[ 168 ] 	= 	{18, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  35;	rev_ant[ 35 ] 	= 	{95, }
ant[97] =  165;	rev_ant[ 165 ] 	= 	{97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 46 is antesedent for : (17,)
clause 47 is antesedent for : (18,92,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 101 is antesedent for : (92,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,8,)
clause 162 is antesedent for : (93,58,)
clause 163 is antesedent for : (52,82,)
clause 164 is antesedent for : (52,90,)
clause 165 is antesedent for : (97,)
clause 166 is antesedent for : (8,)
clause 167 is antesedent for : (41,)
clause 168 is antesedent for : (18,93,)
clause 169 is antesedent for : (18,)
u = 99
v = 99
antecedent num = 33
clause 33 = (-60 95 99 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
168) (-93 18 )
169) (41 -18 )
u = 60
v = 60
antecedent num = 30
clause 30 = (26 60 -90 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
168) (-93 18 )
169) (41 -18 )
u = -95
v = 95
antecedent num = 35
clause 35 = (55 -90 -95 )
deletion times = 0
last deleted indices: {}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
168) (-93 18 )
169) (41 -18 )
Learned clause #171. (26 55 -90 )
 learnt clauses:  11 Backtracking to level 4
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-55 
0 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
-90 @ 4
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, 1, }
ant[8] =  166;	rev_ant[ 166 ] 	= 	{8, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, }
ant[18] =  169;	rev_ant[ 169 ] 	= 	{18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  167;	rev_ant[ 167 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 82, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{93, 58, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  50;	rev_ant[ 50 ] 	= 	{69, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, 8, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  170;	rev_ant[ 170 ] 	= 	{90, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  168;	rev_ant[ 168 ] 	= 	{18, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  35;	rev_ant[ 35 ] 	= 	{95, }
ant[97] =  165;	rev_ant[ 165 ] 	= 	{97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 46 is antesedent for : (17,)
clause 47 is antesedent for : (18,92,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 101 is antesedent for : (92,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (82,8,)
clause 162 is antesedent for : (93,58,)
clause 163 is antesedent for : (52,82,)
clause 164 is antesedent for : (52,90,)
clause 165 is antesedent for : (97,)
clause 166 is antesedent for : (8,)
clause 167 is antesedent for : (41,)
clause 168 is antesedent for : (18,93,)
clause 169 is antesedent for : (18,)
clause 170 is antesedent for : (90,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-8 82 )
162) (58 93 )
163) (-82 -52 )
164) (90 52 )
165) (26 33 8 -97 )
166) (33 26 8 )
167) (67 -41 )
168) (-93 18 )
169) (41 -18 )
170) (26 55 -90 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = 165
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = 165
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = 165
 updateClauseIndx_score_map() clause_index = 169 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 169 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 169 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 170 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 170 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 170 recalculated_index = -1
errasing from cnf of size = 171
 clauses_to_delete[i] = 161clauses_to_delete[i]-i = 161
errasing from cnf of size = 170
 clauses_to_delete[i] = 165clauses_to_delete[i]-i = 164
errasing from cnf of size = 169
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 164
errasing from cnf of size = 168
 clauses_to_delete[i] = 169clauses_to_delete[i]-i = 166
errasing from cnf of size = 167
 clauses_to_delete[i] = 170clauses_to_delete[i]-i = 166
 get_dynamic_restart_backtracking_level() 
backtracking to level: 3
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-90 @ 3
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, 1, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  164;	rev_ant[ 164 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 90, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[58] =  161;	rev_ant[ 161 ] 	= 	{93, 58, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  50;	rev_ant[ 50 ] 	= 	{69, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{52, 82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  35;	rev_ant[ 35 ] 	= 	{95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 46 is antesedent for : (17,)
clause 47 is antesedent for : (18,92,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 101 is antesedent for : (92,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (93,58,)
clause 162 is antesedent for : (52,82,)
clause 163 is antesedent for : (52,90,)
clause 164 is antesedent for : (41,)
clause 165 is antesedent for : (18,93,90,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
BCP
qhead = 3 trail-size = 4
propagating -90
next_not_false
propagating: 
Clause Index = 163 is antecedent for literal -90
52 @ 3
antecedent[52] = 163
other_watch literal is52
clause 163is already antecedent of var 52
new implication <- 52
 updateLBDscore() clause = 00E59478
activity score += 5 for variable 52
 increaseVariableActivityScore() Var v = 52
next_not_false
(-13 52 90 ) now watched by 52
next_not_false
(13 52 90 ) now watched by 52
propagating 52
next_not_false
propagating: 
Clause Index = 162 is antecedent for literal 52
-82 @ 3
antecedent[82] = 162
other_watch literal is-82
clause 162is already antecedent of var 82
new implication <- -82
 updateLBDscore() clause = 00E58E90
activity score += 5 for variable 82
 increaseVariableActivityScore() Var v = 82
next_not_false
(-34 -52 -82 ) now watched by -82
next_not_false
(34 -52 -82 ) now watched by -82
propagating -82
next_not_false
(-8 -80 82 ) now watched by -8
BCP is over
decide
reset_iterators - where = 20.041
m_Score2Vars_it->first = 20.041
-93 @ 4
BCP
qhead = 6 trail-size = 7
propagating -93
next_not_false
propagating: 
Clause Index = 161 is antecedent for literal -93
58 @ 4
antecedent[58] = 161
other_watch literal is58
clause 161is already antecedent of var 58
new implication <- 58
 updateLBDscore() clause = 00E58FE0
activity score += 5 for variable 58
 increaseVariableActivityScore() Var v = 58
propagating 58
next_not_false
propagating: 
Clause Index = 39 is antecedent for literal 58
76 @ 4
antecedent[76] = 39
other_watch literal is76
clause 39is already antecedent of var 76
new implication <- 76
 updateLBDscore() clause = 00E59248
propagating 76
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 76
-55 @ 4
antecedent[55] = 40
other_watch literal is-55
clause 40is already antecedent of var 55
new implication <- -55
 updateLBDscore() clause = 00E593D0
propagating -55
BCP is over
decide
8 @ 5
BCP
qhead = 10 trail-size = 11
propagating 8
next_not_false
propagating: 
Clause Index = 25 is antecedent for literal 8
-80 @ 5
antecedent[80] = 25
other_watch literal is-80
clause 25is already antecedent of var 80
new implication <- -80
 updateLBDscore() clause = 00E593D0
propagating -80
next_not_false
propagating: 
Clause Index = 22 is antecedent for literal -80
54 @ 5
antecedent[54] = 22
other_watch literal is54
clause 22is already antecedent of var 54
new implication <- 54
 updateLBDscore() clause = 00E59280
propagating 54
next_not_false
propagating: 
Clause Index = 24 is antecedent for literal 54
-14 @ 5
antecedent[14] = 24
other_watch literal is-14
clause 24is already antecedent of var 14
new implication <- -14
 updateLBDscore() clause = 00E59248
next_not_false
(14 -54 80 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
-14 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
54 
-55 
0 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
-80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
Antecedents: 
ant[1] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  2;	rev_ant[ 2 ] 	= 	{4, 1, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  164;	rev_ant[ 164 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 90, }
ant[54] =  22;	rev_ant[ 22 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[58] =  161;	rev_ant[ 161 ] 	= 	{93, 58, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  50;	rev_ant[ 50 ] 	= 	{69, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{52, 82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[90] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  35;	rev_ant[ 35 ] 	= 	{95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 46 is antesedent for : (17,)
clause 47 is antesedent for : (18,92,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 101 is antesedent for : (92,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (93,58,)
clause 162 is antesedent for : (52,82,)
clause 163 is antesedent for : (52,90,)
clause 164 is antesedent for : (41,)
clause 165 is antesedent for : (18,93,90,)
u = -14
v = 14
antecedent num = 24
clause 24 = (-14 -54 82 )
deletion times = 1
last deleted indices: {161;165;166;169;170;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
u = 54
v = 54
antecedent num = 22
clause 22 = (54 80 82 )
deletion times = 1
last deleted indices: {161;165;166;169;170;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
Learned clause #167. (82 80 )
 learnt clauses:  12 Backtracking to level 3
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
80 @ 3
BCP
qhead = 6 trail-size = 7
propagating 80
next_not_false
(7 9 -80 ) now watched by 7
next_not_false
propagating: 
Clause Index = 25 is antecedent for literal 80
-8 @ 3
antecedent[8] = 25
other_watch literal is-8
new implication <- -8
 updateLBDscore() clause = 00E593D0
propagating -8
next_not_false
(4 8 -97 ) now watched by 4
next_not_false
(4 8 97 ) now watched by 97
BCP is over
decide
reset_iterators - where = 17.0203
m_Score2Vars_it->first = 17.0203
58 @ 4
BCP
qhead = 8 trail-size = 9
propagating 58
next_not_false
(-58 76 93 ) now watched by 93
BCP is over
decide
-93 @ 5
BCP
qhead = 9 trail-size = 10
propagating -93
next_not_false
propagating: 
Clause Index = 39 is antecedent for literal -93
76 @ 5
antecedent[76] = 39
other_watch literal is76
clause 39is already antecedent of var 76
new implication <- 76
 updateLBDscore() clause = 00E59088
next_not_false
clause is sat
propagating 76
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 76
-55 @ 5
antecedent[55] = 40
other_watch literal is-55
clause 40is already antecedent of var 55
new implication <- -55
 updateLBDscore() clause = 00E59248
propagating -55
BCP is over
decide
84 @ 6
BCP
qhead = 12 trail-size = 13
propagating 84
BCP is over
decide
33 @ 7
BCP
qhead = 13 trail-size = 14
propagating 33
next_not_false
(17 -33 92 ) now watched by 92
next_not_false
(-33 -70 -83 ) now watched by -83
next_not_false
(-33 54 -56 ) now watched by -56
next_not_false
(1 -33 56 ) now watched by 56
BCP is over
decide
-67 @ 8
BCP
qhead = 14 trail-size = 15
propagating -67
next_not_false
propagating: 
Clause Index = 164 is antecedent for literal -67
-41 @ 8
antecedent[41] = 164
other_watch literal is-41
clause 164is already antecedent of var 41
new implication <- -41
 updateLBDscore() clause = 00E59478
activity score += 5 for variable 41
 increaseVariableActivityScore() Var v = 41
propagating -41
BCP is over
decide
-97 @ 9
BCP
qhead = 16 trail-size = 17
propagating -97
next_not_false
propagating: 
Clause Index = 0 is antecedent for literal -97
4 @ 9
antecedent[4] = 0
other_watch literal is4
clause 0is already antecedent of var 4
new implication <- 4
 updateLBDscore() clause = 00E59478
next_not_false
(7 -92 97 ) now watched by -92
next_not_false
propagating: 
Clause Index = 10 is antecedent for literal -97
36 @ 9
antecedent[36] = 10
other_watch literal is36
clause 10is already antecedent of var 36
new implication <- 36
 updateLBDscore() clause = 00E59280
propagating 4
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 4
-1 @ 9
antecedent[1] = 21
other_watch literal is-1
new implication <- -1
 updateLBDscore() clause = 00E58E58
next_not_false
(1 -4 33 ) now watched by 33
propagating 36
propagating -1
next_not_false
propagating: 
Clause Index = 3 is antecedent for literal -1
56 @ 9
antecedent[56] = 3
other_watch literal is56
new implication <- 56
 updateLBDscore() clause = 00E58E90
next_not_false
clause is sat
propagating 56
next_not_false
propagating: 
Clause Index = 4 is antecedent for literal 56
54 @ 9
antecedent[54] = 4
other_watch literal is54
new implication <- 54
 updateLBDscore() clause = 00E59440
next_not_false
(-56 70 -83 ) now watched by -83
next_not_false
(-56 83 -99 ) now watched by -99
next_not_false
(-56 83 99 ) now watched by 99
propagating 54
next_not_false
propagating: 
Clause Index = 24 is antecedent for literal 54
-14 @ 9
antecedent[14] = 24
other_watch literal is-14
clause 24is already antecedent of var 14
new implication <- -14
 updateLBDscore() clause = 00E59088
next_not_false
(14 -54 80 ) now watched by 80
propagating -14
next_not_false
propagating: 
Clause Index = 109 is antecedent for literal -14
-35 @ 9
antecedent[35] = 109
other_watch literal is-35
new implication <- -35
 updateLBDscore() clause = 00E59248
next_not_false
(14 30 -70 ) now watched by -70
next_not_false
clause is sat
propagating -35
next_not_false
(35 38 89 ) now watched by 38
next_not_false
(35 72 98 ) now watched by 98
BCP is over
decide
-46 @ 10
BCP
qhead = 24 trail-size = 25
propagating -46
next_not_false
propagating: 
Clause Index = 148 is antecedent for literal -46
-71 @ 10
antecedent[71] = 148
other_watch literal is-71
clause 148is already antecedent of var 71
new implication <- -71
 updateLBDscore() clause = 00E58F38
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal -46
-64 @ 10
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E53F48
propagating -71
propagating -64
BCP is over
decide
60 @ 11
BCP
qhead = 27 trail-size = 28
propagating 60
BCP is over
decide
59 @ 12
BCP
qhead = 28 trail-size = 29
propagating 59
next_not_false
propagating: 
Clause Index = 16 is antecedent for literal 59
-40 @ 12
antecedent[40] = 16
other_watch literal is-40
clause 16is already antecedent of var 40
new implication <- -40
 updateLBDscore() clause = 00E53FB8
propagating -40
next_not_false
clause is sat
BCP is over
decide
-49 @ 13
BCP
qhead = 30 trail-size = 31
propagating -49
BCP is over
decide
-7 @ 14
BCP
qhead = 31 trail-size = 32
propagating -7
next_not_false
propagating: 
Clause Index = 113 is antecedent for literal -7
9 @ 14
antecedent[9] = 113
other_watch literal is9
new implication <- 9
 updateLBDscore() clause = 00E53FB8
next_not_false
propagating: 
Clause Index = 101 is antecedent for literal -7
-92 @ 14
antecedent[92] = 101
other_watch literal is-92
clause 101is already antecedent of var 92
new implication <- -92
 updateLBDscore() clause = 00E53FB8
propagating 9
next_not_false
(-9 -19 -62 ) now watched by -62
next_not_false
(-9 19 98 ) now watched by 98
propagating -92
next_not_false
propagating: 
Clause Index = 45 is antecedent for literal -92
17 @ 14
antecedent[17] = 45
other_watch literal is17
new implication <- 17
 updateLBDscore() clause = 00E53960
next_not_false
clause is sat
propagating 17
next_not_false
propagating: 
Clause Index = 142 is antecedent for literal 17
-5 @ 14
antecedent[5] = 142
other_watch literal is-5
new implication <- -5
 updateLBDscore() clause = 00E53960
next_not_false
propagating: 
Clause Index = 46 is antecedent for literal 17
-18 @ 14
antecedent[18] = 46
other_watch literal is-18
new implication <- -18
 updateLBDscore() clause = 00E53848
propagating -5
propagating -18
next_not_false
clause is sat
BCP is over
decide
-23 @ 15
BCP
qhead = 37 trail-size = 38
propagating -23
next_not_false
propagating: 
Clause Index = 152 is antecedent for literal -23
2 @ 15
antecedent[2] = 152
other_watch literal is2
clause 152is already antecedent of var 2
new implication <- 2
 updateLBDscore() clause = 00E59088
next_not_false
propagating: 
Clause Index = 144 is antecedent for literal -23
-38 @ 15
antecedent[38] = 144
other_watch literal is-38
clause 144is already antecedent of var 38
new implication <- -38
 updateLBDscore() clause = 00E54418
propagating 2
propagating -38
next_not_false
propagating: 
Clause Index = 111 is antecedent for literal -38
89 @ 15
antecedent[89] = 111
other_watch literal is89
new implication <- 89
 updateLBDscore() clause = 00E53810
propagating 89
BCP is over
decide
-85 @ 16
BCP
qhead = 41 trail-size = 42
propagating -85
next_not_false
clause is sat
BCP is over
decide
-75 @ 17
BCP
qhead = 42 trail-size = 43
propagating -75
BCP is over
decide
-48 @ 18
BCP
qhead = 43 trail-size = 44
propagating -48
next_not_false
clause is sat
BCP is over
decide
-31 @ 19
BCP
qhead = 44 trail-size = 45
propagating -31
BCP is over
decide
-95 @ 20
BCP
qhead = 45 trail-size = 46
propagating -95
next_not_false
propagating: 
Clause Index = 34 is antecedent for literal -95
-99 @ 20
antecedent[99] = 34
other_watch literal is-99
new implication <- -99
 updateLBDscore() clause = 00E53848
next_not_false
(-60 95 99 ) is conflicting
State: -1 
2 
0 
4 
-5 
0 
-7 
-8 
9 
0 
0 
0 
0 
-14 
0 
0 
17 
-18 
0 
0 
0 
0 
-23 
0 
0 
-26 
0 
0 
0 
0 
-31 
0 
33 
0 
-35 
36 
0 
-38 
0 
-40 
-41 
-42 
0 
0 
0 
-46 
0 
-48 
-49 
0 
0 
52 
0 
54 
-55 
56 
0 
58 
59 
60 
0 
0 
0 
-64 
0 
0 
-67 
0 
0 
0 
-71 
0 
0 
-74 
-75 
76 
0 
0 
0 
80 
0 
-82 
0 
84 
-85 
0 
0 
0 
89 
-90 
0 
-92 
-93 
0 
-95 
0 
-97 
0 
-99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
166) (82 80 )
Antecedents: 
ant[1] =  21;	rev_ant[ 21 ] 	= 	{36, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  0;	rev_ant[ 0 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  164;	rev_ant[ 164 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 90, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, }
ant[58] =  161;	rev_ant[ 161 ] 	= 	{93, 58, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  50;	rev_ant[ 50 ] 	= 	{69, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  166;	rev_ant[ 166 ] 	= 	{80, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{52, 82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  35;	rev_ant[ 35 ] 	= 	{95, }
ant[99] =  34;	rev_ant[ 34 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,)
clause 4 is antesedent for : (54,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,1,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (93,58,)
clause 162 is antesedent for : (52,82,)
clause 163 is antesedent for : (52,90,)
clause 164 is antesedent for : (41,)
clause 165 is antesedent for : (18,93,90,)
clause 166 is antesedent for : (80,)
u = -99
v = 99
antecedent num = 34
clause 34 = (-60 95 -99 )
deletion times = 1
last deleted indices: {161;165;166;169;170;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
166) (82 80 )
Learned clause #168. (-60 95 )
 learnt clauses:  13 Backtracking to level 11
backtrack
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
-14 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
-35 
36 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
-46 
0 
0 
0 
0 
0 
52 
0 
54 
-55 
56 
0 
58 
0 
60 
0 
0 
0 
-64 
0 
0 
-67 
0 
0 
0 
-71 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
84 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
-97 
0 
0 
0 
95 @ 11
BCP
qhead = 28 trail-size = 29
propagating 95
next_not_false
clause is sat
BCP is over
decide
reset_iterators - where = 6
m_Score2Vars_it->first = 6
59 @ 12
BCP
qhead = 29 trail-size = 30
propagating 59
next_not_false
propagating: 
Clause Index = 16 is antecedent for literal 59
-40 @ 12
antecedent[40] = 16
other_watch literal is-40
clause 16is already antecedent of var 40
new implication <- -40
 updateLBDscore() clause = 00E58F38
propagating -40
next_not_false
clause is sat
BCP is over
decide
-49 @ 13
BCP
qhead = 31 trail-size = 32
propagating -49
BCP is over
decide
-7 @ 14
BCP
qhead = 32 trail-size = 33
propagating -7
next_not_false
propagating: 
Clause Index = 113 is antecedent for literal -7
9 @ 14
antecedent[9] = 113
other_watch literal is9
clause 113is already antecedent of var 9
new implication <- 9
 updateLBDscore() clause = 00E59088
next_not_false
propagating: 
Clause Index = 101 is antecedent for literal -7
-92 @ 14
antecedent[92] = 101
other_watch literal is-92
clause 101is already antecedent of var 92
new implication <- -92
 updateLBDscore() clause = 00E4B9B0
propagating 9
propagating -92
next_not_false
propagating: 
Clause Index = 45 is antecedent for literal -92
17 @ 14
antecedent[17] = 45
other_watch literal is17
clause 45is already antecedent of var 17
new implication <- 17
 updateLBDscore() clause = 00E59088
next_not_false
clause is sat
propagating 17
next_not_false
propagating: 
Clause Index = 142 is antecedent for literal 17
-5 @ 14
antecedent[5] = 142
other_watch literal is-5
clause 142is already antecedent of var 5
new implication <- -5
 updateLBDscore() clause = 00E58E58
next_not_false
propagating: 
Clause Index = 46 is antecedent for literal 17
-18 @ 14
antecedent[18] = 46
other_watch literal is-18
clause 46is already antecedent of var 18
new implication <- -18
 updateLBDscore() clause = 00E58F38
propagating -5
propagating -18
next_not_false
clause is sat
BCP is over
decide
-23 @ 15
BCP
qhead = 38 trail-size = 39
propagating -23
next_not_false
propagating: 
Clause Index = 152 is antecedent for literal -23
2 @ 15
antecedent[2] = 152
other_watch literal is2
clause 152is already antecedent of var 2
new implication <- 2
 updateLBDscore() clause = 00E59088
next_not_false
propagating: 
Clause Index = 144 is antecedent for literal -23
-38 @ 15
antecedent[38] = 144
other_watch literal is-38
clause 144is already antecedent of var 38
new implication <- -38
 updateLBDscore() clause = 00E4B9B0
propagating 2
propagating -38
next_not_false
propagating: 
Clause Index = 111 is antecedent for literal -38
89 @ 15
antecedent[89] = 111
other_watch literal is89
clause 111is already antecedent of var 89
new implication <- 89
 updateLBDscore() clause = 00E58F38
propagating 89
BCP is over
decide
-85 @ 16
BCP
qhead = 42 trail-size = 43
propagating -85
next_not_false
clause is sat
BCP is over
decide
-75 @ 17
BCP
qhead = 43 trail-size = 44
propagating -75
BCP is over
decide
-48 @ 18
BCP
qhead = 44 trail-size = 45
propagating -48
next_not_false
clause is sat
BCP is over
decide
-31 @ 19
BCP
qhead = 45 trail-size = 46
propagating -31
BCP is over
decide
-77 @ 20
BCP
qhead = 46 trail-size = 47
propagating -77
next_not_false
propagating: 
Clause Index = 93 is antecedent for literal -77
51 @ 20
antecedent[51] = 93
other_watch literal is51
new implication <- 51
 updateLBDscore() clause = 00E59088
next_not_false
clause is sat
propagating 51
next_not_false
propagating: 
Clause Index = 59 is antecedent for literal 51
45 @ 20
antecedent[45] = 59
other_watch literal is45
clause 59is already antecedent of var 45
new implication <- 45
 updateLBDscore() clause = 00E59050
next_not_false
(-28 -51 59 ) now watched by -28
propagating 45
BCP is over
decide
-13 @ 21
BCP
qhead = 49 trail-size = 50
propagating -13
next_not_false
clause is sat
next_not_false
clause is sat
BCP is over
decide
20 @ 22
BCP
qhead = 50 trail-size = 51
propagating 20
next_not_false
(-20 32 58 ) now watched by 58
BCP is over
decide
-50 @ 23
BCP
qhead = 51 trail-size = 52
propagating -50
next_not_false
(50 -66 87 ) now watched by 87
next_not_false
(50 -57 -73 ) now watched by -73
next_not_false
(-26 50 57 ) now watched by 57
BCP is over
decide
-3 @ 24
BCP
qhead = 52 trail-size = 53
propagating -3
next_not_false
(3 -10 -78 ) now watched by -78
next_not_false
(3 76 -88 ) now watched by -88
next_not_false
(3 -77 79 ) now watched by 79
BCP is over
decide
-57 @ 25
BCP
qhead = 53 trail-size = 54
propagating -57
next_not_false
clause is sat
next_not_false
(57 86 96 ) now watched by 96
next_not_false
propagating: 
Clause Index = 49 is antecedent for literal -57
-69 @ 25
antecedent[69] = 49
other_watch literal is-69
new implication <- -69
 updateLBDscore() clause = 00E5A2E8
propagating -69
next_not_false
(17 -29 69 ) now watched by 17
next_not_false
clause is sat
BCP is over
decide
-99 @ 26
BCP
qhead = 55 trail-size = 56
propagating -99
next_not_false
propagating: 
Clause Index = 5 is antecedent for literal -99
83 @ 26
antecedent[83] = 5
other_watch literal is83
new implication <- 83
 updateLBDscore() clause = 00E4D9E0
next_not_false
clause is sat
propagating 83
next_not_false
propagating: 
Clause Index = 7 is antecedent for literal 83
70 @ 26
antecedent[70] = 7
other_watch literal is70
new implication <- 70
 updateLBDscore() clause = 00E47718
next_not_false
(-33 -70 -83 ) is conflicting
State: -1 
2 
-3 
4 
-5 
0 
-7 
-8 
9 
0 
0 
0 
-13 
-14 
0 
0 
17 
-18 
0 
20 
0 
0 
-23 
0 
0 
-26 
0 
0 
0 
0 
-31 
0 
33 
0 
-35 
36 
0 
-38 
0 
-40 
-41 
-42 
0 
0 
45 
-46 
0 
-48 
-49 
-50 
51 
52 
0 
54 
-55 
56 
-57 
58 
59 
60 
0 
0 
0 
-64 
0 
0 
-67 
0 
-69 
70 
-71 
0 
0 
-74 
-75 
76 
-77 
0 
0 
80 
0 
-82 
83 
84 
-85 
0 
0 
0 
89 
-90 
0 
-92 
-93 
0 
95 
0 
-97 
0 
-99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
166) (82 80 )
167) (-60 95 )
Antecedents: 
ant[1] =  21;	rev_ant[ 21 ] 	= 	{36, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  0;	rev_ant[ 0 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  164;	rev_ant[ 164 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 90, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, }
ant[58] =  161;	rev_ant[ 161 ] 	= 	{93, 58, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  166;	rev_ant[ 166 ] 	= 	{80, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{52, 82, }
ant[83] =  5;	rev_ant[ 5 ] 	= 	{83, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  167;	rev_ant[ 167 ] 	= 	{95, }
ant[99] =  34;	rev_ant[ 34 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,1,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (93,58,)
clause 162 is antesedent for : (52,82,)
clause 163 is antesedent for : (52,90,)
clause 164 is antesedent for : (41,)
clause 165 is antesedent for : (18,93,90,)
clause 166 is antesedent for : (80,)
clause 167 is antesedent for : (95,)
u = 70
v = 70
antecedent num = 7
clause 7 = (-56 70 -83 )
deletion times = 1
last deleted indices: {161;165;166;169;170;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
166) (82 80 )
167) (-60 95 )
Learned clause #169. (-33 -56 -83 )
 learnt clauses:  14 Backtracking to level 9
backtrack
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
-14 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
-35 
36 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
54 
-55 
56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
84 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
-97 
0 
0 
0 
-83 @ 9
BCP
qhead = 24 trail-size = 25
propagating -83
next_not_false
propagating: 
Clause Index = 6 is antecedent for literal -83
-99 @ 9
antecedent[99] = 6
other_watch literal is-99
new implication <- -99
 updateLBDscore() clause = 00E5E860
next_not_false
(-56 83 99 ) is conflicting
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
-14 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
-35 
36 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
54 
-55 
56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
-83 
84 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
-97 
0 
-99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
166) (82 80 )
167) (-60 95 )
168) (-33 -56 -83 )
Antecedents: 
ant[1] =  21;	rev_ant[ 21 ] 	= 	{36, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  0;	rev_ant[ 0 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  164;	rev_ant[ 164 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 90, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, }
ant[58] =  161;	rev_ant[ 161 ] 	= 	{93, 58, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  166;	rev_ant[ 166 ] 	= 	{80, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{52, 82, }
ant[83] =  168;	rev_ant[ 168 ] 	= 	{83, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  167;	rev_ant[ 167 ] 	= 	{95, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,1,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (93,58,)
clause 162 is antesedent for : (52,82,)
clause 163 is antesedent for : (52,90,)
clause 164 is antesedent for : (41,)
clause 165 is antesedent for : (18,93,90,)
clause 166 is antesedent for : (80,)
clause 167 is antesedent for : (95,)
clause 168 is antesedent for : (83,)
u = -99
v = 99
antecedent num = 6
clause 6 = (-56 83 -99 )
deletion times = 1
last deleted indices: {161;165;166;169;170;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
166) (82 80 )
167) (-60 95 )
168) (-33 -56 -83 )
u = -83
v = 83
antecedent num = 168
clause 168 = (-33 -56 -83 )
deletion times = 1
last deleted indices: {161;165;166;169;170;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
166) (82 80 )
167) (-60 95 )
168) (-33 -56 -83 )
Learned clause #170. (-33 -56 )
 learnt clauses:  15 Backtracking to level 7
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
0 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
84 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
-56 @ 7
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  21;	rev_ant[ 21 ] 	= 	{36, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  0;	rev_ant[ 0 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  164;	rev_ant[ 164 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, 90, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  169;	rev_ant[ 169 ] 	= 	{56, }
ant[58] =  161;	rev_ant[ 161 ] 	= 	{93, 58, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  166;	rev_ant[ 166 ] 	= 	{80, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{52, 82, }
ant[83] =  168;	rev_ant[ 168 ] 	= 	{83, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  167;	rev_ant[ 167 ] 	= 	{95, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,1,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (93,58,)
clause 162 is antesedent for : (52,82,)
clause 163 is antesedent for : (52,90,)
clause 164 is antesedent for : (41,)
clause 165 is antesedent for : (18,93,90,)
clause 166 is antesedent for : (80,)
clause 167 is antesedent for : (95,)
clause 168 is antesedent for : (83,)
clause 169 is antesedent for : (56,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (58 93 )
162) (-82 -52 )
163) (90 52 )
164) (67 -41 )
165) (-93 18 )
166) (82 80 )
167) (-60 95 )
168) (-33 -56 -83 )
169) (-33 -56 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 169 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 169 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 169 recalculated_index = 164
errasing from cnf of size = 170
 clauses_to_delete[i] = 161clauses_to_delete[i]-i = 161
errasing from cnf of size = 169
 clauses_to_delete[i] = 162clauses_to_delete[i]-i = 161
errasing from cnf of size = 168
 clauses_to_delete[i] = 163clauses_to_delete[i]-i = 161
errasing from cnf of size = 167
 clauses_to_delete[i] = 164clauses_to_delete[i]-i = 161
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 164
 get_dynamic_restart_backtracking_level() 
backtracking to level: 2
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-56 @ 2
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[1] =  21;	rev_ant[ 21 ] 	= 	{36, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  0;	rev_ant[ 0 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{56, 56, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  162;	rev_ant[ 162 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  163;	rev_ant[ 163 ] 	= 	{95, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,1,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (18,93,90,)
clause 162 is antesedent for : (80,)
clause 163 is antesedent for : (95,)
clause 164 is antesedent for : (56,56,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
BCP
qhead = 2 trail-size = 3
propagating -56
next_not_false
(1 -33 56 ) now watched by -33
BCP is over
decide
reset_iterators - where = 24
m_Score2Vars_it->first = 24
52 @ 3
BCP
qhead = 3 trail-size = 4
propagating 52
BCP is over
decide
-82 @ 4
BCP
qhead = 4 trail-size = 5
propagating -82
next_not_false
propagating: 
Clause Index = 162 is antecedent for literal -82
80 @ 4
antecedent[80] = 162
other_watch literal is80
clause 162is already antecedent of var 80
new implication <- 80
 updateLBDscore() clause = 00E5ED30
activity score += 5 for variable 80
 increaseVariableActivityScore() Var v = 80
propagating 80
next_not_false
propagating: 
Clause Index = 25 is antecedent for literal 80
-8 @ 4
antecedent[8] = 25
other_watch literal is-8
clause 25is already antecedent of var 8
new implication <- -8
 updateLBDscore() clause = 00E5ED30
propagating -8
BCP is over
decide
-90 @ 5
BCP
qhead = 7 trail-size = 8
propagating -90
BCP is over
decide
58 @ 6
BCP
qhead = 8 trail-size = 9
propagating 58
BCP is over
decide
-93 @ 7
BCP
qhead = 9 trail-size = 10
propagating -93
next_not_false
propagating: 
Clause Index = 39 is antecedent for literal -93
76 @ 7
antecedent[76] = 39
other_watch literal is76
clause 39is already antecedent of var 76
new implication <- 76
 updateLBDscore() clause = 00E5E978
propagating 76
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 76
-55 @ 7
antecedent[55] = 40
other_watch literal is-55
clause 40is already antecedent of var 55
new implication <- -55
 updateLBDscore() clause = 00E5EAC8
propagating -55
BCP is over
decide
33 @ 8
BCP
qhead = 12 trail-size = 13
propagating 33
next_not_false
propagating: 
Clause Index = 3 is antecedent for literal 33
1 @ 8
antecedent[1] = 3
other_watch literal is1
new implication <- 1
 updateLBDscore() clause = 00E5EB38
next_not_false
clause is sat
propagating 1
next_not_false
(-1 -4 -36 ) now watched by -36
next_not_false
(-1 40 -59 ) now watched by -59
next_not_false
(-1 20 36 ) now watched by 36
BCP is over
decide
-26 @ 9
BCP
qhead = 14 trail-size = 15
propagating -26
BCP is over
decide
-41 @ 10
BCP
qhead = 15 trail-size = 16
propagating -41
BCP is over
decide
84 @ 11
BCP
qhead = 16 trail-size = 17
propagating 84
BCP is over
decide
-67 @ 12
BCP
qhead = 17 trail-size = 18
propagating -67
BCP is over
decide
60 @ 13
BCP
qhead = 18 trail-size = 19
propagating 60
next_not_false
propagating: 
Clause Index = 163 is antecedent for literal 60
95 @ 13
antecedent[95] = 163
other_watch literal is95
clause 163is already antecedent of var 95
new implication <- 95
 updateLBDscore() clause = 00E5EBA8
activity score += 5 for variable 95
 increaseVariableActivityScore() Var v = 95
propagating 95
next_not_false
clause is sat
BCP is over
decide
-97 @ 14
BCP
qhead = 20 trail-size = 21
propagating -97
next_not_false
propagating: 
Clause Index = 10 is antecedent for literal -97
36 @ 14
antecedent[36] = 10
other_watch literal is36
clause 10is already antecedent of var 36
new implication <- 36
 updateLBDscore() clause = 00E5E908
next_not_false
propagating: 
Clause Index = 0 is antecedent for literal -97
4 @ 14
antecedent[4] = 0
other_watch literal is4
clause 0is already antecedent of var 4
new implication <- 4
 updateLBDscore() clause = 00E5EB00
propagating 36
next_not_false
(-1 -4 -36 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
36 
0 
0 
0 
0 
-41 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
-56 
0 
58 
0 
60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
84 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
95 
0 
-97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  0;	rev_ant[ 0 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{56, 56, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  162;	rev_ant[ 162 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  163;	rev_ant[ 163 ] 	= 	{95, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,1,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (18,93,90,)
clause 162 is antesedent for : (80,)
clause 163 is antesedent for : (95,)
clause 164 is antesedent for : (56,56,)
u = 4
v = 4
antecedent num = 0
clause 0 = (4 8 97 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
u = 36
v = 36
antecedent num = 10
clause 10 = (26 36 97 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
Learned clause #166. (-1 8 26 97 )
 learnt clauses:  16 Backtracking to level 9
backtrack
State: 1 
0 
0 
0 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
-56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
97 @ 9
BCP
qhead = 15 trail-size = 16
propagating 97
next_not_false
(28 49 -97 ) now watched by 49
next_not_false
propagating: 
Clause Index = 1 is antecedent for literal 97
4 @ 9
antecedent[4] = 1
other_watch literal is4
clause 1is already antecedent of var 4
new implication <- 4
 updateLBDscore() clause = 00E5EC50
propagating 4
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 4
-36 @ 9
antecedent[36] = 21
other_watch literal is-36
clause 21is already antecedent of var 36
new implication <- -36
 updateLBDscore() clause = 00E5EC18
propagating -36
next_not_false
propagating: 
Clause Index = 9 is antecedent for literal -36
20 @ 9
antecedent[20] = 9
other_watch literal is20
clause 9is already antecedent of var 20
new implication <- 20
 updateLBDscore() clause = 00E5EC50
next_not_false
propagating: 
Clause Index = 160 is antecedent for literal -36
59 @ 9
antecedent[59] = 160
other_watch literal is59
clause 160is already antecedent of var 59
new implication <- 59
 updateLBDscore() clause = 00E5EC50
next_not_false
clause is sat
propagating 20
propagating 59
next_not_false
propagating: 
Clause Index = 15 is antecedent for literal 59
40 @ 9
antecedent[40] = 15
other_watch literal is40
clause 15is already antecedent of var 40
new implication <- 40
 updateLBDscore() clause = 00E5EC50
next_not_false
(26 -40 -59 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
20 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
-36 
0 
0 
0 
40 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
-56 
0 
58 
59 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  1;	rev_ant[ 1 ] 	= 	{8, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{56, 56, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  162;	rev_ant[ 162 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  163;	rev_ant[ 163 ] 	= 	{95, }
ant[97] =  165;	rev_ant[ 165 ] 	= 	{97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 21 is antesedent for : (36,1,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (18,93,90,)
clause 162 is antesedent for : (80,)
clause 163 is antesedent for : (95,)
clause 164 is antesedent for : (56,56,)
clause 165 is antesedent for : (97,)
u = 40
v = 40
antecedent num = 15
clause 15 = (-1 40 -59 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
u = 59
v = 59
antecedent num = 160
clause 160 = (-97 36 59 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
u = -36
v = 36
antecedent num = 21
clause 21 = (-1 -4 -36 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
u = 4
v = 4
antecedent num = 1
clause 1 = (4 8 -97 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
u = 97
v = 97
antecedent num = 165
clause 165 = (-1 8 26 97 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
Learned clause #167. (-1 8 26 )
 learnt clauses:  17 Backtracking to level 8
backtrack
State: 1 
0 
0 
0 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
-56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
26 @ 8
BCP
qhead = 14 trail-size = 15
propagating 26
next_not_false
(22 -26 60 ) now watched by 60
next_not_false
(-26 36 -50 ) now watched by 36
next_not_false
(-26 50 57 ) now watched by 50
BCP is over
decide
reset_iterators - where = 11.3821
m_Score2Vars_it->first = 11.3821
-41 @ 9
BCP
qhead = 15 trail-size = 16
propagating -41
BCP is over
decide
84 @ 10
BCP
qhead = 16 trail-size = 17
propagating 84
BCP is over
decide
95 @ 11
BCP
qhead = 17 trail-size = 18
propagating 95
next_not_false
clause is sat
BCP is over
decide
-67 @ 12
BCP
qhead = 18 trail-size = 19
propagating -67
BCP is over
decide
60 @ 13
BCP
qhead = 19 trail-size = 20
propagating 60
next_not_false
clause is sat
BCP is over
decide
97 @ 14
BCP
qhead = 20 trail-size = 21
propagating 97
next_not_false
propagating: 
Clause Index = 1 is antecedent for literal 97
4 @ 14
antecedent[4] = 1
other_watch literal is4
clause 1is already antecedent of var 4
new implication <- 4
 updateLBDscore() clause = 00E5EC50
propagating 4
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 4
-36 @ 14
antecedent[36] = 21
other_watch literal is-36
clause 21is already antecedent of var 36
new implication <- -36
 updateLBDscore() clause = 00E5EC50
propagating -36
next_not_false
propagating: 
Clause Index = 20 is antecedent for literal -36
-50 @ 14
antecedent[50] = 20
other_watch literal is-50
new implication <- -50
 updateLBDscore() clause = 00E5E908
next_not_false
propagating: 
Clause Index = 9 is antecedent for literal -36
20 @ 14
antecedent[20] = 9
other_watch literal is20
clause 9is already antecedent of var 20
new implication <- 20
 updateLBDscore() clause = 00E5E908
next_not_false
propagating: 
Clause Index = 160 is antecedent for literal -36
59 @ 14
antecedent[59] = 160
other_watch literal is59
clause 160is already antecedent of var 59
new implication <- 59
 updateLBDscore() clause = 00E5E908
next_not_false
(26 36 97 ) now watched by 26
propagating -50
next_not_false
propagating: 
Clause Index = 17 is antecedent for literal -50
57 @ 14
antecedent[57] = 17
other_watch literal is57
new implication <- 57
 updateLBDscore() clause = 00E5EC50
propagating 20
propagating 59
next_not_false
propagating: 
Clause Index = 15 is antecedent for literal 59
40 @ 14
antecedent[40] = 15
other_watch literal is40
clause 15is already antecedent of var 40
new implication <- 40
 updateLBDscore() clause = 00E5F040
next_not_false
(26 -40 -59 ) now watched by 26
propagating 57
next_not_false
propagating: 
Clause Index = 19 is antecedent for literal 57
-73 @ 14
antecedent[73] = 19
other_watch literal is-73
new implication <- -73
 updateLBDscore() clause = 00E5F350
next_not_false
(-20 -57 73 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
20 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
-36 
0 
0 
0 
40 
-41 
-42 
0 
0 
0 
0 
0 
0 
0 
-50 
0 
52 
0 
0 
-55 
-56 
57 
58 
59 
60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
-73 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
84 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
166) (-1 8 26 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  1;	rev_ant[ 1 ] 	= 	{8, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  166;	rev_ant[ 166 ] 	= 	{26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{56, 56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  162;	rev_ant[ 162 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  163;	rev_ant[ 163 ] 	= 	{95, }
ant[97] =  165;	rev_ant[ 165 ] 	= 	{97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (18,93,90,)
clause 162 is antesedent for : (80,)
clause 163 is antesedent for : (95,)
clause 164 is antesedent for : (56,56,)
clause 165 is antesedent for : (97,)
clause 166 is antesedent for : (26,)
u = -73
v = 73
antecedent num = 19
clause 19 = (50 -57 -73 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
166) (-1 8 26 )
u = 57
v = 57
antecedent num = 17
clause 17 = (-26 50 57 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
166) (-1 8 26 )
u = 20
v = 20
antecedent num = 9
clause 9 = (-1 20 36 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
166) (-1 8 26 )
u = -50
v = 50
antecedent num = 20
clause 20 = (-26 36 -50 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
166) (-1 8 26 )
Learned clause #168. (-26 -1 36 )
 learnt clauses:  18 Backtracking to level 8
backtrack
State: 1 
0 
0 
0 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
-56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
36 @ 8
BCP
qhead = 15 trail-size = 16
propagating 36
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 36
-4 @ 8
antecedent[4] = 21
other_watch literal is-4
new implication <- -4
 updateLBDscore() clause = 00E5EF98
propagating -4
next_not_false
propagating: 
Clause Index = 1 is antecedent for literal -4
-97 @ 8
antecedent[97] = 1
other_watch literal is-97
new implication <- -97
 updateLBDscore() clause = 00E5F1C8
next_not_false
(4 8 97 ) is conflicting
State: 1 
0 
0 
-4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
36 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
-56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
-97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
166) (-1 8 26 )
167) (-26 -1 36 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  166;	rev_ant[ 166 ] 	= 	{26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  167;	rev_ant[ 167 ] 	= 	{36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{56, 56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  162;	rev_ant[ 162 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  163;	rev_ant[ 163 ] 	= 	{95, }
ant[97] =  1;	rev_ant[ 1 ] 	= 	{8, 4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (18,93,90,)
clause 162 is antesedent for : (80,)
clause 163 is antesedent for : (95,)
clause 164 is antesedent for : (56,56,)
clause 165 is antesedent for : (97,)
clause 166 is antesedent for : (26,)
clause 167 is antesedent for : (36,)
u = -97
v = 97
antecedent num = 1
clause 1 = (4 8 -97 )
deletion times = 2
last deleted indices: {161;162;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
166) (-1 8 26 )
167) (-26 -1 36 )
Learned clause #169. (8 4 )
 learnt clauses:  19 Backtracking to level 4
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
4 @ 4
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  168;	rev_ant[ 168 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  166;	rev_ant[ 166 ] 	= 	{26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  167;	rev_ant[ 167 ] 	= 	{36, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{56, 56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  162;	rev_ant[ 162 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[93] =  161;	rev_ant[ 161 ] 	= 	{18, 93, 90, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  163;	rev_ant[ 163 ] 	= 	{95, }
ant[97] =  1;	rev_ant[ 1 ] 	= 	{8, 4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (18,93,90,)
clause 162 is antesedent for : (80,)
clause 163 is antesedent for : (95,)
clause 164 is antesedent for : (56,56,)
clause 165 is antesedent for : (97,)
clause 166 is antesedent for : (26,)
clause 167 is antesedent for : (36,)
clause 168 is antesedent for : (4,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (-93 18 )
162) (82 80 )
163) (-60 95 )
164) (-33 -56 )
165) (-1 8 26 97 )
166) (-1 8 26 )
167) (-26 -1 36 )
168) (8 4 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 161clauses_to_delete[i]-i = 161
errasing from cnf of size = 168
 clauses_to_delete[i] = 163clauses_to_delete[i]-i = 162
errasing from cnf of size = 167
 clauses_to_delete[i] = 164clauses_to_delete[i]-i = 162
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 3
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
4 @ 3
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{36, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  163;	rev_ant[ 163 ] 	= 	{26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  164;	rev_ant[ 164 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  161;	rev_ant[ 161 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  162;	rev_ant[ 162 ] 	= 	{97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (80,)
clause 162 is antesedent for : (97,)
clause 163 is antesedent for : (26,)
clause 164 is antesedent for : (36,4,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
BCP
qhead = 4 trail-size = 5
propagating 4
next_not_false
(-1 -4 -36 ) now watched by -1
BCP is over
decide
reset_iterators - where = 23.1475
m_Score2Vars_it->first = 23.1475
-82 @ 4
BCP
qhead = 5 trail-size = 6
propagating -82
next_not_false
propagating: 
Clause Index = 161 is antecedent for literal -82
80 @ 4
antecedent[80] = 161
other_watch literal is80
clause 161is already antecedent of var 80
new implication <- 80
 updateLBDscore() clause = 00E58EC8
activity score += 5 for variable 80
 increaseVariableActivityScore() Var v = 80
propagating 80
next_not_false
propagating: 
Clause Index = 25 is antecedent for literal 80
-8 @ 4
antecedent[8] = 25
other_watch literal is-8
clause 25is already antecedent of var 8
new implication <- -8
 updateLBDscore() clause = 00E58E20
propagating -8
BCP is over
decide
-90 @ 5
BCP
qhead = 8 trail-size = 9
propagating -90
BCP is over
decide
58 @ 6
BCP
qhead = 9 trail-size = 10
propagating 58
BCP is over
decide
-93 @ 7
BCP
qhead = 10 trail-size = 11
propagating -93
next_not_false
propagating: 
Clause Index = 39 is antecedent for literal -93
76 @ 7
antecedent[76] = 39
other_watch literal is76
clause 39is already antecedent of var 76
new implication <- 76
 updateLBDscore() clause = 00E58F38
propagating 76
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 76
-55 @ 7
antecedent[55] = 40
other_watch literal is-55
clause 40is already antecedent of var 55
new implication <- -55
 updateLBDscore() clause = 00E59130
propagating -55
BCP is over
decide
26 @ 8
BCP
qhead = 13 trail-size = 14
propagating 26
next_not_false
(-26 -1 36 ) now watched by -1
BCP is over
decide
33 @ 9
BCP
qhead = 14 trail-size = 15
propagating 33
next_not_false
propagating: 
Clause Index = 3 is antecedent for literal 33
1 @ 9
antecedent[1] = 3
other_watch literal is1
clause 3is already antecedent of var 1
new implication <- 1
 updateLBDscore() clause = 00E59280
propagating 1
next_not_false
propagating: 
Clause Index = 164 is antecedent for literal 1
36 @ 9
antecedent[36] = 164
other_watch literal is36
clause 164is already antecedent of var 36
new implication <- 36
 updateLBDscore() clause = 00E59280
next_not_false
(-1 -4 -36 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
36 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
-56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{36, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  163;	rev_ant[ 163 ] 	= 	{26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  164;	rev_ant[ 164 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  161;	rev_ant[ 161 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  162;	rev_ant[ 162 ] 	= 	{97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (80,)
clause 162 is antesedent for : (97,)
clause 163 is antesedent for : (26,)
clause 164 is antesedent for : (36,4,)
u = 36
v = 36
antecedent num = 164
clause 164 = (-26 -1 36 )
deletion times = 3
last deleted indices: {161;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
Learned clause #166. (-4 -26 -1 )
 learnt clauses:  20 Backtracking to level 8
backtrack
State: 0 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
-56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
-1 @ 8
BCP
qhead = 14 trail-size = 15
propagating -1
next_not_false
propagating: 
Clause Index = 3 is antecedent for literal -1
-33 @ 8
antecedent[33] = 3
other_watch literal is-33
new implication <- -33
 updateLBDscore() clause = 00E59788
next_not_false
(1 -4 33 ) is conflicting
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
-55 
-56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
Antecedents: 
ant[1] =  165;	rev_ant[ 165 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{36, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  163;	rev_ant[ 163 ] 	= 	{26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  164;	rev_ant[ 164 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  15;	rev_ant[ 15 ] 	= 	{1, 40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  161;	rev_ant[ 161 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  162;	rev_ant[ 162 ] 	= 	{97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (80,)
clause 162 is antesedent for : (97,)
clause 163 is antesedent for : (26,)
clause 164 is antesedent for : (36,4,)
clause 165 is antesedent for : (1,)
u = -33
v = 33
antecedent num = 3
clause 3 = (1 -33 56 )
deletion times = 3
last deleted indices: {161;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
Learned clause #167. (-4 56 1 )
 learnt clauses:  21 Backtracking to level 3
backtrack
State: 0 
0 
0 
4 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
1 @ 3
BCP
qhead = 5 trail-size = 6
propagating 1
next_not_false
propagating: 
Clause Index = 165 is antecedent for literal 1
-26 @ 3
antecedent[26] = 165
other_watch literal is-26
new implication <- -26
 updateLBDscore() clause = 00E5A128
next_not_false
(-26 -1 36 ) now watched by -26
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 1
-36 @ 3
antecedent[36] = 21
other_watch literal is-36
clause 21is already antecedent of var 36
new implication <- -36
 updateLBDscore() clause = 00E5A128
next_not_false
(-1 8 26 ) now watched by 8
propagating -26
next_not_false
propagating: 
Clause Index = 163 is antecedent for literal -26
8 @ 3
antecedent[8] = 163
other_watch literal is8
new implication <- 8
 updateLBDscore() clause = 00E586B0
next_not_false
(-1 8 26 97 ) now watched by 8
next_not_false
(26 -40 -59 ) now watched by -59
next_not_false
propagating: 
Clause Index = 10 is antecedent for literal -26
97 @ 3
antecedent[97] = 10
other_watch literal is97
clause 10is already antecedent of var 97
new implication <- 97
 updateLBDscore() clause = 00E586B0
propagating -36
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 160 is antecedent for literal -36
59 @ 3
antecedent[59] = 160
other_watch literal is59
clause 160is already antecedent of var 59
new implication <- 59
 updateLBDscore() clause = 00E586B0
next_not_false
(-26 36 -50 ) now watched by -26
next_not_false
propagating: 
Clause Index = 9 is antecedent for literal -36
20 @ 3
antecedent[20] = 9
other_watch literal is20
clause 9is already antecedent of var 20
new implication <- 20
 updateLBDscore() clause = 00E586B0
propagating 8
next_not_false
(-8 -80 82 ) now watched by 82
propagating 97
next_not_false
(4 8 -97 ) now watched by 8
propagating 59
next_not_false
propagating: 
Clause Index = 16 is antecedent for literal 59
-40 @ 3
antecedent[40] = 16
other_watch literal is-40
clause 16is already antecedent of var 40
new implication <- -40
 updateLBDscore() clause = 00E58870
next_not_false
(-1 40 -59 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
20 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-36 
0 
0 
0 
-40 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
0 
-56 
0 
0 
59 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
Antecedents: 
ant[1] =  166;	rev_ant[ 166 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{36, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  163;	rev_ant[ 163 ] 	= 	{26, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  165;	rev_ant[ 165 ] 	= 	{1, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  161;	rev_ant[ 161 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (80,)
clause 162 is antesedent for : (97,)
clause 163 is antesedent for : (26,8,)
clause 164 is antesedent for : (36,4,)
clause 165 is antesedent for : (1,26,)
clause 166 is antesedent for : (1,)
u = -40
v = 40
antecedent num = 16
clause 16 = (26 -40 -59 )
deletion times = 3
last deleted indices: {161;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
u = 59
v = 59
antecedent num = 160
clause 160 = (-97 36 59 )
deletion times = 3
last deleted indices: {161;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
u = 97
v = 97
antecedent num = 10
clause 10 = (26 36 97 )
deletion times = 3
last deleted indices: {161;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
u = -36
v = 36
antecedent num = 21
clause 21 = (-1 -4 -36 )
deletion times = 3
last deleted indices: {161;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
u = -26
v = 26
antecedent num = 165
clause 165 = (-4 -26 -1 )
deletion times = 3
last deleted indices: {161;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
u = 1
v = 1
antecedent num = 166
clause 166 = (-4 56 1 )
deletion times = 3
last deleted indices: {161;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
Learned clause #168. (56 -4 )
 learnt clauses:  22 Backtracking to level 2
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-4 @ 2
BCP
qhead = 3 trail-size = 4
propagating -4
next_not_false
(4 8 -97 ) now watched by -97
next_not_false
(4 8 97 ) now watched by 8
BCP is over
decide
reset_iterators - where = 24
m_Score2Vars_it->first = 24
52 @ 3
BCP
qhead = 4 trail-size = 5
propagating 52
BCP is over
decide
-82 @ 4
BCP
qhead = 5 trail-size = 6
propagating -82
next_not_false
(-8 -80 82 ) now watched by -8
next_not_false
propagating: 
Clause Index = 161 is antecedent for literal -82
80 @ 4
antecedent[80] = 161
other_watch literal is80
clause 161is already antecedent of var 80
new implication <- 80
 updateLBDscore() clause = 00E5E748
activity score += 5 for variable 80
 increaseVariableActivityScore() Var v = 80
propagating 80
next_not_false
propagating: 
Clause Index = 25 is antecedent for literal 80
-8 @ 4
antecedent[8] = 25
other_watch literal is-8
clause 25is already antecedent of var 8
new implication <- -8
 updateLBDscore() clause = 00E5EB70
propagating -8
next_not_false
propagating: 
Clause Index = 0 is antecedent for literal -8
97 @ 4
antecedent[97] = 0
other_watch literal is97
new implication <- 97
 updateLBDscore() clause = 00E5EB70
next_not_false
(4 8 -97 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
167) (56 -4 )
Antecedents: 
ant[1] =  166;	rev_ant[ 166 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  167;	rev_ant[ 167 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  165;	rev_ant[ 165 ] 	= 	{1, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  161;	rev_ant[ 161 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (80,)
clause 162 is antesedent for : (97,)
clause 163 is antesedent for : (26,8,)
clause 164 is antesedent for : (36,4,)
clause 165 is antesedent for : (1,26,)
clause 166 is antesedent for : (1,)
clause 167 is antesedent for : (4,)
u = 97
v = 97
antecedent num = 0
clause 0 = (4 8 97 )
deletion times = 3
last deleted indices: {161;163;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
167) (56 -4 )
Learned clause #169. (4 8 )
 learnt clauses:  23 Backtracking to level 2
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
8 @ 2
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  166;	rev_ant[ 166 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  167;	rev_ant[ 167 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  168;	rev_ant[ 168 ] 	= 	{8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  165;	rev_ant[ 165 ] 	= 	{1, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[59] =  160;	rev_ant[ 160 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  161;	rev_ant[ 161 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (59,)
clause 161 is antesedent for : (80,)
clause 162 is antesedent for : (97,)
clause 163 is antesedent for : (26,8,)
clause 164 is antesedent for : (36,4,)
clause 165 is antesedent for : (1,26,)
clause 166 is antesedent for : (1,)
clause 167 is antesedent for : (4,)
clause 168 is antesedent for : (8,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-97 36 59 )
161) (82 80 )
162) (-1 8 26 97 )
163) (-1 8 26 )
164) (-26 -1 36 )
165) (-4 -26 -1 )
166) (-4 56 1 )
167) (56 -4 )
168) (4 8 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 160clauses_to_delete[i]-i = 160
errasing from cnf of size = 168
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 165
errasing from cnf of size = 167
 clauses_to_delete[i] = 167clauses_to_delete[i]-i = 165
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 2
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
8 @ 2
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  163;	rev_ant[ 163 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  160;	rev_ant[ 160 ] 	= 	{80, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  161;	rev_ant[ 161 ] 	= 	{97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (97,)
clause 162 is antesedent for : (26,8,)
clause 163 is antesedent for : (36,4,)
clause 164 is antesedent for : (1,26,8,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
BCP
qhead = 4 trail-size = 5
propagating 8
next_not_false
(-8 -80 82 ) now watched by 82
BCP is over
decide
reset_iterators - where = 24
m_Score2Vars_it->first = 24
52 @ 3
BCP
qhead = 5 trail-size = 6
propagating 52
BCP is over
decide
-82 @ 4
BCP
qhead = 6 trail-size = 7
propagating -82
next_not_false
propagating: 
Clause Index = 25 is antecedent for literal -82
-80 @ 4
antecedent[80] = 25
other_watch literal is-80
clause 25is already antecedent of var 80
new implication <- -80
 updateLBDscore() clause = 00E58E20
next_not_false
(82 80 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
-80 
0 
-82 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  29;	rev_ant[ 29 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  163;	rev_ant[ 163 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  161;	rev_ant[ 161 ] 	= 	{97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (97,)
clause 162 is antesedent for : (26,8,)
clause 163 is antesedent for : (36,4,)
clause 164 is antesedent for : (1,26,8,)
u = -80
v = 80
antecedent num = 25
clause 25 = (-8 -80 82 )
deletion times = 4
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
Learned clause #166. (-8 82 )
 learnt clauses:  24 Backtracking to level 2
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 @ 2
BCP
qhead = 5 trail-size = 6
propagating 82
next_not_false
(-34 -52 -82 ) now watched by -52
next_not_false
(34 -52 -82 ) now watched by -52
BCP is over
decide
reset_iterators - where = 24
m_Score2Vars_it->first = 24
52 @ 3
BCP
qhead = 6 trail-size = 7
propagating 52
next_not_false
propagating: 
Clause Index = 28 is antecedent for literal 52
34 @ 3
antecedent[34] = 28
other_watch literal is34
new implication <- 34
 updateLBDscore() clause = 00E58E58
next_not_false
(-34 -52 -82 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
34 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
52 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
165) (-8 82 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  27;	rev_ant[ 27 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  163;	rev_ant[ 163 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  165;	rev_ant[ 165 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  161;	rev_ant[ 161 ] 	= 	{97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (97,)
clause 162 is antesedent for : (26,8,)
clause 163 is antesedent for : (36,4,)
clause 164 is antesedent for : (1,26,8,)
clause 165 is antesedent for : (82,)
u = 34
v = 34
antecedent num = 28
clause 28 = (34 -52 -82 )
deletion times = 4
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
165) (-8 82 )
Learned clause #167. (-82 -52 )
 learnt clauses:  25 Backtracking to level 2
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 @ 2
BCP
qhead = 6 trail-size = 7
propagating -52
next_not_false
(-13 52 90 ) now watched by 90
next_not_false
(13 52 90 ) now watched by 90
BCP is over
decide
reset_iterators - where = 24
m_Score2Vars_it->first = 24
-90 @ 3
BCP
qhead = 7 trail-size = 8
propagating -90
next_not_false
propagating: 
Clause Index = 26 is antecedent for literal -90
13 @ 3
antecedent[13] = 26
other_watch literal is13
new implication <- 13
 updateLBDscore() clause = 00E5EA58
next_not_false
(-13 52 90 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
13 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
-90 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
165) (-8 82 )
166) (-82 -52 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  26;	rev_ant[ 26 ] 	= 	{52, 13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  163;	rev_ant[ 163 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  166;	rev_ant[ 166 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  165;	rev_ant[ 165 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[97] =  161;	rev_ant[ 161 ] 	= 	{97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (97,)
clause 162 is antesedent for : (26,8,)
clause 163 is antesedent for : (36,4,)
clause 164 is antesedent for : (1,26,8,)
clause 165 is antesedent for : (82,)
clause 166 is antesedent for : (52,)
u = 13
v = 13
antecedent num = 26
clause 26 = (13 52 90 )
deletion times = 4
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
165) (-8 82 )
166) (-82 -52 )
Learned clause #168. (52 90 )
 learnt clauses:  26 Backtracking to level 2
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
-56 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
90 @ 2
BCP
qhead = 7 trail-size = 8
propagating 90
next_not_false
(55 -90 -95 ) now watched by 55
next_not_false
(26 60 -90 ) now watched by 26
BCP is over
decide
reset_iterators - where = 20.041
m_Score2Vars_it->first = 20.041
-80 @ 3
BCP
qhead = 8 trail-size = 9
propagating -80
next_not_false
clause is sat
next_not_false
(14 -54 80 ) now watched by -54
next_not_false
(54 80 82 ) now watched by 82
BCP is over
decide
58 @ 4
BCP
qhead = 9 trail-size = 10
propagating 58
BCP is over
decide
-93 @ 5
BCP
qhead = 10 trail-size = 11
propagating -93
next_not_false
propagating: 
Clause Index = 39 is antecedent for literal -93
76 @ 5
antecedent[76] = 39
other_watch literal is76
clause 39is already antecedent of var 76
new implication <- 76
 updateLBDscore() clause = 00E53960
propagating 76
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 76
-55 @ 5
antecedent[55] = 40
other_watch literal is-55
clause 40is already antecedent of var 55
new implication <- -55
 updateLBDscore() clause = 00E53C00
propagating -55
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal -55
-95 @ 5
antecedent[95] = 35
other_watch literal is-95
clause 35is already antecedent of var 95
new implication <- -95
 updateLBDscore() clause = 00E53B90
propagating -95
next_not_false
(-60 95 -99 ) now watched by -60
next_not_false
(-60 95 99 ) now watched by -60
next_not_false
(-22 60 95 ) now watched by 60
BCP is over
decide
-26 @ 6
BCP
qhead = 14 trail-size = 15
propagating -26
next_not_false
propagating: 
Clause Index = 30 is antecedent for literal -26
60 @ 6
antecedent[60] = 30
other_watch literal is60
clause 30is already antecedent of var 60
new implication <- 60
 updateLBDscore() clause = 00E53960
next_not_false
(-1 8 26 ) now watched by -1
next_not_false
(26 36 97 ) now watched by 36
propagating 60
next_not_false
propagating: 
Clause Index = 33 is antecedent for literal 60
99 @ 6
antecedent[99] = 33
other_watch literal is99
clause 33is already antecedent of var 99
new implication <- 99
 updateLBDscore() clause = 00E53D88
next_not_false
(-60 95 -99 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
-55 
-56 
0 
58 
0 
60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
-93 
0 
-95 
0 
0 
0 
99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
165) (-8 82 )
166) (-82 -52 )
167) (52 90 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  26;	rev_ant[ 26 ] 	= 	{52, 13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  163;	rev_ant[ 163 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  166;	rev_ant[ 166 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  165;	rev_ant[ 165 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  167;	rev_ant[ 167 ] 	= 	{90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  35;	rev_ant[ 35 ] 	= 	{95, }
ant[97] =  161;	rev_ant[ 161 ] 	= 	{97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (97,)
clause 162 is antesedent for : (26,8,)
clause 163 is antesedent for : (36,4,)
clause 164 is antesedent for : (1,26,8,)
clause 165 is antesedent for : (82,)
clause 166 is antesedent for : (52,)
clause 167 is antesedent for : (90,)
u = 99
v = 99
antecedent num = 33
clause 33 = (-60 95 99 )
deletion times = 4
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
165) (-8 82 )
166) (-82 -52 )
167) (52 90 )
Learned clause #169. (95 -60 )
 learnt clauses:  27 Backtracking to level 5
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-42 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
-55 
-56 
0 
58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
-93 
0 
-95 
0 
0 
0 
0 
0 
-60 @ 5
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  26;	rev_ant[ 26 ] 	= 	{52, 13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{1, 26, 8, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  163;	rev_ant[ 163 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  166;	rev_ant[ 166 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  168;	rev_ant[ 168 ] 	= 	{60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  165;	rev_ant[ 165 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  167;	rev_ant[ 167 ] 	= 	{90, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  35;	rev_ant[ 35 ] 	= 	{95, }
ant[97] =  161;	rev_ant[ 161 ] 	= 	{97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (97,)
clause 162 is antesedent for : (26,8,)
clause 163 is antesedent for : (36,4,)
clause 164 is antesedent for : (1,26,8,)
clause 165 is antesedent for : (82,)
clause 166 is antesedent for : (52,)
clause 167 is antesedent for : (90,)
clause 168 is antesedent for : (60,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-1 8 26 97 )
162) (-1 8 26 )
163) (-26 -1 36 )
164) (-4 -26 -1 )
165) (-8 82 )
166) (-82 -52 )
167) (52 90 )
168) (95 -60 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 161clauses_to_delete[i]-i = 161
errasing from cnf of size = 168
 clauses_to_delete[i] = 162clauses_to_delete[i]-i = 161
errasing from cnf of size = 167
 clauses_to_delete[i] = 164clauses_to_delete[i]-i = 162
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 1
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-60 @ 1
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  26;	rev_ant[ 26 ] 	= 	{52, 13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  32;	rev_ant[ 32 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  41;	rev_ant[ 41 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  40;	rev_ant[ 40 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[92] =  101;	rev_ant[ 101 ] 	= 	{92, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  35;	rev_ant[ 35 ] 	= 	{95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,)
clause 32 is antesedent for : (22,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,)
clause 40 is antesedent for : (55,)
clause 41 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
BCP
qhead = 1 trail-size = 2
propagating -60
next_not_false
(-22 60 95 ) now watched by 95
next_not_false
(22 -26 60 ) now watched by -26
next_not_false
(26 60 -90 ) now watched by -90
BCP is over
decide
reset_iterators - where = 25.2856
m_Score2Vars_it->first = 25.2856
-52 @ 2
BCP
qhead = 2 trail-size = 3
propagating -52
next_not_false
propagating: 
Clause Index = 164 is antecedent for literal -52
90 @ 2
antecedent[90] = 164
other_watch literal is90
clause 164is already antecedent of var 90
new implication <- 90
 updateLBDscore() clause = 00E5A588
activity score += 5 for variable 90
 increaseVariableActivityScore() Var v = 90
propagating 90
next_not_false
propagating: 
Clause Index = 30 is antecedent for literal 90
26 @ 2
antecedent[26] = 30
other_watch literal is26
new implication <- 26
 updateLBDscore() clause = 00E597F8
propagating 26
next_not_false
propagating: 
Clause Index = 31 is antecedent for literal 26
22 @ 2
antecedent[22] = 31
other_watch literal is22
new implication <- 22
 updateLBDscore() clause = 00E58870
next_not_false
(-26 -1 36 ) now watched by -1
next_not_false
(-26 36 -50 ) now watched by 36
propagating 22
next_not_false
(15 -22 -81 ) now watched by -81
next_not_false
propagating: 
Clause Index = 32 is antecedent for literal 22
95 @ 2
antecedent[95] = 32
other_watch literal is95
new implication <- 95
 updateLBDscore() clause = 00E58DB0
propagating 95
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal 95
55 @ 2
antecedent[55] = 35
other_watch literal is55
new implication <- 55
 updateLBDscore() clause = 00E58DE8
propagating 55
next_not_false
(48 -55 -67 ) now watched by 48
next_not_false
(-55 -58 -76 ) now watched by -58
BCP is over
decide
82 @ 3
BCP
qhead = 8 trail-size = 9
propagating 82
next_not_false
clause is sat
BCP is over
decide
-80 @ 4
BCP
qhead = 9 trail-size = 10
propagating -80
next_not_false
clause is sat
BCP is over
decide
58 @ 5
BCP
qhead = 10 trail-size = 11
propagating 58
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 58
-76 @ 5
antecedent[76] = 40
other_watch literal is-76
new implication <- -76
 updateLBDscore() clause = 00E58E20
propagating -76
next_not_false
(5 76 91 ) now watched by 5
next_not_false
(3 76 -88 ) now watched by 3
next_not_false
propagating: 
Clause Index = 39 is antecedent for literal -76
93 @ 5
antecedent[93] = 39
other_watch literal is93
new implication <- 93
 updateLBDscore() clause = 00E58FA8
propagating 93
next_not_false
(18 -93 -94 ) now watched by 18
BCP is over
decide
8 @ 6
BCP
qhead = 13 trail-size = 14
propagating 8
next_not_false
clause is sat
BCP is over
decide
-33 @ 7
BCP
qhead = 14 trail-size = 15
propagating -33
next_not_false
(33 41 92 ) now watched by 41
next_not_false
(1 -4 33 ) now watched by -4
BCP is over
decide
-41 @ 8
BCP
qhead = 15 trail-size = 16
propagating -41
next_not_false
propagating: 
Clause Index = 44 is antecedent for literal -41
92 @ 8
antecedent[92] = 44
other_watch literal is92
clause 44is already antecedent of var 92
new implication <- 92
 updateLBDscore() clause = 00E58E58
propagating 92
next_not_false
(7 -92 97 ) now watched by 97
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal 92
-18 @ 8
antecedent[18] = 47
other_watch literal is-18
clause 47is already antecedent of var 18
new implication <- -18
 updateLBDscore() clause = 00E58FA8
propagating -18
next_not_false
propagating: 
Clause Index = 43 is antecedent for literal -18
-94 @ 8
antecedent[94] = 43
other_watch literal is-94
clause 43is already antecedent of var 94
new implication <- -94
 updateLBDscore() clause = 00E58E58
propagating -94
next_not_false
propagating: 
Clause Index = 42 is antecedent for literal -94
-47 @ 8
antecedent[47] = 42
other_watch literal is-47
new implication <- -47
 updateLBDscore() clause = 00E58FA8
next_not_false
(18 47 94 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
-47 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
92 
93 
-94 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  26;	rev_ant[ 26 ] 	= 	{52, 13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[92] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,)
u = -47
v = 47
antecedent num = 42
clause 42 = (-47 -93 94 )
deletion times = 5
last deleted indices: {161;162;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
u = -94
v = 94
antecedent num = 43
clause 43 = (18 -93 -94 )
deletion times = 5
last deleted indices: {161;162;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
Learned clause #166. (-93 18 )
 learnt clauses:  28 Backtracking to level 5
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
18 @ 5
BCP
qhead = 13 trail-size = 14
propagating 18
next_not_false
(-18 41 -92 ) now watched by 41
next_not_false
(-17 -18 92 ) now watched by 92
BCP is over
decide
reset_iterators - where = 15.8572
m_Score2Vars_it->first = 15.8572
8 @ 6
BCP
qhead = 14 trail-size = 15
propagating 8
next_not_false
clause is sat
BCP is over
decide
-33 @ 7
BCP
qhead = 15 trail-size = 16
propagating -33
BCP is over
decide
-41 @ 8
BCP
qhead = 16 trail-size = 17
propagating -41
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal -41
-92 @ 8
antecedent[92] = 47
other_watch literal is-92
clause 47is already antecedent of var 92
new implication <- -92
 updateLBDscore() clause = 00E5EEF0
next_not_false
(33 41 92 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
-92 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-93 18 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  26;	rev_ant[ 26 ] 	= 	{52, 13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  165;	rev_ant[ 165 ] 	= 	{18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  49;	rev_ant[ 49 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,)
clause 165 is antesedent for : (18,)
u = -92
v = 92
antecedent num = 47
clause 47 = (-18 41 -92 )
deletion times = 5
last deleted indices: {161;162;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-93 18 )
Learned clause #167. (33 -18 41 )
 learnt clauses:  29 Backtracking to level 7
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
41 @ 7
BCP
qhead = 16 trail-size = 17
propagating 41
next_not_false
(-41 67 -69 ) now watched by 67
next_not_false
(-41 67 69 ) now watched by 67
BCP is over
decide
reset_iterators - where = 10.0947
m_Score2Vars_it->first = 10.0947
84 @ 8
BCP
qhead = 17 trail-size = 18
propagating 84
BCP is over
decide
-56 @ 9
BCP
qhead = 18 trail-size = 19
propagating -56
BCP is over
decide
1 @ 10
BCP
qhead = 19 trail-size = 20
propagating 1
next_not_false
propagating: 
Clause Index = 161 is antecedent for literal 1
36 @ 10
antecedent[36] = 161
other_watch literal is36
clause 161is already antecedent of var 36
new implication <- 36
 updateLBDscore() clause = 00E53EA0
next_not_false
(-1 -4 -36 ) now watched by -4
propagating 36
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 36
-4 @ 10
antecedent[4] = 21
other_watch literal is-4
clause 21is already antecedent of var 4
new implication <- -4
 updateLBDscore() clause = 00E53F10
propagating -4
BCP is over
decide
-67 @ 11
BCP
qhead = 22 trail-size = 23
propagating -67
next_not_false
propagating: 
Clause Index = 48 is antecedent for literal -67
69 @ 11
antecedent[69] = 48
other_watch literal is69
new implication <- 69
 updateLBDscore() clause = 00E541E8
next_not_false
(-41 67 -69 ) is conflicting
State: 1 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
36 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
-56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
69 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-93 18 )
166) (33 -18 41 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  26;	rev_ant[ 26 ] 	= 	{52, 13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  165;	rev_ant[ 165 ] 	= 	{18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  166;	rev_ant[ 166 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,)
clause 165 is antesedent for : (18,)
clause 166 is antesedent for : (41,)
u = 69
v = 69
antecedent num = 48
clause 48 = (-41 67 69 )
deletion times = 5
last deleted indices: {161;162;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-93 18 )
166) (33 -18 41 )
Learned clause #168. (-41 67 )
 learnt clauses:  30 Backtracking to level 7
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
67 @ 7
BCP
qhead = 17 trail-size = 18
propagating 67
next_not_false
(38 -67 72 ) now watched by 38
next_not_false
propagating: 
Clause Index = 52 is antecedent for literal 67
48 @ 7
antecedent[48] = 52
other_watch literal is48
new implication <- 48
 updateLBDscore() clause = 00E59788
next_not_false
(48 55 -67 ) now watched by 55
propagating 48
next_not_false
(13 -21 -48 ) now watched by 13
next_not_false
propagating: 
Clause Index = 53 is antecedent for literal 48
21 @ 7
antecedent[21] = 53
other_watch literal is21
new implication <- 21
 updateLBDscore() clause = 00E512B8
propagating 21
next_not_false
propagating: 
Clause Index = 55 is antecedent for literal 21
-13 @ 7
antecedent[13] = 55
other_watch literal is-13
new implication <- -13
 updateLBDscore() clause = 00E51440
next_not_false
(13 -21 -48 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
-13 
0 
0 
0 
0 
18 
0 
0 
21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-93 18 )
166) (33 -18 41 )
167) (-41 67 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  165;	rev_ant[ 165 ] 	= 	{18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  166;	rev_ant[ 166 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  167;	rev_ant[ 167 ] 	= 	{67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,)
clause 53 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,)
clause 165 is antesedent for : (18,)
clause 166 is antesedent for : (41,)
clause 167 is antesedent for : (67,)
u = -13
v = 13
antecedent num = 55
clause 55 = (-13 -21 -48 )
deletion times = 5
last deleted indices: {161;162;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-93 18 )
166) (33 -18 41 )
167) (-41 67 )
u = 21
v = 21
antecedent num = 53
clause 53 = (-8 21 -48 )
deletion times = 5
last deleted indices: {161;162;164;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-93 18 )
166) (33 -18 41 )
167) (-41 67 )
Learned clause #169. (-8 -48 )
 learnt clauses:  31 Backtracking to level 6
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
-48 @ 6
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[18] =  165;	rev_ant[ 165 ] 	= 	{18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  166;	rev_ant[ 166 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  168;	rev_ant[ 168 ] 	= 	{48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  167;	rev_ant[ 167 ] 	= 	{67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,)
clause 53 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,)
clause 165 is antesedent for : (18,)
clause 166 is antesedent for : (41,)
clause 167 is antesedent for : (67,)
clause 168 is antesedent for : (48,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-93 18 )
166) (33 -18 41 )
167) (-41 67 )
168) (-8 -48 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 165clauses_to_delete[i]-i = 165
errasing from cnf of size = 168
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 165
errasing from cnf of size = 167
 clauses_to_delete[i] = 167clauses_to_delete[i]-i = 165
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 6
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
-48 @ 6
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,)
clause 53 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
BCP
qhead = 15 trail-size = 16
propagating -48
next_not_false
propagating: 
Clause Index = 52 is antecedent for literal -48
-67 @ 6
antecedent[67] = 52
other_watch literal is-67
new implication <- -67
 updateLBDscore() clause = 00E58DE8
next_not_false
(48 55 -67 ) now watched by -67
propagating -67
next_not_false
(-41 67 -69 ) now watched by -41
next_not_false
(-41 67 69 ) now watched by -41
BCP is over
decide
reset_iterators - where = 12.7293
m_Score2Vars_it->first = 12.7293
-33 @ 7
BCP
qhead = 17 trail-size = 18
propagating -33
BCP is over
decide
41 @ 8
BCP
qhead = 18 trail-size = 19
propagating 41
next_not_false
propagating: 
Clause Index = 48 is antecedent for literal 41
69 @ 8
antecedent[69] = 48
other_watch literal is69
clause 48is already antecedent of var 69
new implication <- 69
 updateLBDscore() clause = 00E58FE0
next_not_false
(-41 67 -69 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
69 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  45;	rev_ant[ 45 ] 	= 	{17, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,)
u = 69
v = 69
antecedent num = 48
clause 48 = (-41 67 69 )
deletion times = 6
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
Learned clause #166. (67 -41 )
 learnt clauses:  32 Backtracking to level 6
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
-41 @ 6
BCP
qhead = 17 trail-size = 18
propagating -41
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal -41
-92 @ 6
antecedent[92] = 47
other_watch literal is-92
clause 47is already antecedent of var 92
new implication <- -92
 updateLBDscore() clause = 00E59130
next_not_false
(33 41 92 ) now watched by 33
propagating -92
next_not_false
propagating: 
Clause Index = 46 is antecedent for literal -92
-17 @ 6
antecedent[17] = 46
other_watch literal is-17
clause 46is already antecedent of var 17
new implication <- -17
 updateLBDscore() clause = 00E590C0
next_not_false
(17 -33 92 ) now watched by -33
next_not_false
propagating: 
Clause Index = 44 is antecedent for literal -92
33 @ 6
antecedent[33] = 44
other_watch literal is33
clause 44is already antecedent of var 33
new implication <- 33
 updateLBDscore() clause = 00E58FE0
propagating -17
next_not_false
(17 -29 69 ) now watched by 69
next_not_false
(17 -33 92 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
-17 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
-92 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (67 -41 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  165;	rev_ant[ 165 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,)
clause 165 is antesedent for : (41,)
u = 33
v = 33
antecedent num = 44
clause 44 = (33 41 92 )
deletion times = 6
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (67 -41 )
u = -17
v = 17
antecedent num = 46
clause 46 = (-17 -18 92 )
deletion times = 6
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (67 -41 )
u = -92
v = 92
antecedent num = 47
clause 47 = (-18 41 -92 )
deletion times = 6
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (67 -41 )
Learned clause #167. (-18 41 )
 learnt clauses:  33 Backtracking to level 5
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
41 @ 5
BCP
qhead = 14 trail-size = 15
propagating 41
next_not_false
propagating: 
Clause Index = 165 is antecedent for literal 41
67 @ 5
antecedent[67] = 165
other_watch literal is67
new implication <- 67
 updateLBDscore() clause = 00E5F2E0
activity score += 5 for variable 67
 increaseVariableActivityScore() Var v = 67
next_not_false
(-41 67 69 ) now watched by 67
next_not_false
(-41 67 -69 ) now watched by 67
propagating 67
next_not_false
(48 55 -67 ) now watched by 48
next_not_false
propagating: 
Clause Index = 52 is antecedent for literal 67
48 @ 5
antecedent[48] = 52
other_watch literal is48
clause 52is already antecedent of var 48
new implication <- 48
 updateLBDscore() clause = 00E5F318
propagating 48
next_not_false
(-8 21 -48 ) now watched by -8
BCP is over
decide
reset_iterators - where = 17.2091
m_Score2Vars_it->first = 17.2091
8 @ 6
BCP
qhead = 17 trail-size = 18
propagating 8
next_not_false
propagating: 
Clause Index = 53 is antecedent for literal 8
21 @ 6
antecedent[21] = 53
other_watch literal is21
clause 53is already antecedent of var 21
new implication <- 21
 updateLBDscore() clause = 00E5F318
next_not_false
clause is sat
propagating 21
next_not_false
propagating: 
Clause Index = 55 is antecedent for literal 21
-13 @ 6
antecedent[13] = 55
other_watch literal is-13
clause 55is already antecedent of var 13
new implication <- -13
 updateLBDscore() clause = 00E5F318
next_not_false
(13 -21 -48 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
-13 
0 
0 
0 
0 
18 
0 
0 
21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (67 -41 )
166) (-18 41 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  166;	rev_ant[ 166 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  165;	rev_ant[ 165 ] 	= 	{41, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,)
clause 165 is antesedent for : (41,67,)
clause 166 is antesedent for : (41,)
u = -13
v = 13
antecedent num = 55
clause 55 = (-13 -21 -48 )
deletion times = 6
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (67 -41 )
166) (-18 41 )
Learned clause #168. (-48 -21 )
 learnt clauses:  34 Backtracking to level 5
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
-21 @ 5
BCP
qhead = 17 trail-size = 18
propagating -21
next_not_false
(21 73 -76 ) now watched by -76
next_not_false
propagating: 
Clause Index = 53 is antecedent for literal -21
-8 @ 5
antecedent[8] = 53
other_watch literal is-8
new implication <- -8
 updateLBDscore() clause = 00E498E0
propagating -8
next_not_false
(4 8 -97 ) now watched by 4
next_not_false
(4 8 97 ) now watched by 4
BCP is over
decide
reset_iterators - where = 17.2091
m_Score2Vars_it->first = 17.2091
33 @ 6
BCP
qhead = 19 trail-size = 20
propagating 33
next_not_false
(17 -33 92 ) now watched by 92
next_not_false
(1 -33 56 ) now watched by 56
BCP is over
decide
84 @ 7
BCP
qhead = 20 trail-size = 21
propagating 84
BCP is over
decide
-56 @ 8
BCP
qhead = 21 trail-size = 22
propagating -56
next_not_false
propagating: 
Clause Index = 3 is antecedent for literal -56
1 @ 8
antecedent[1] = 3
other_watch literal is1
clause 3is already antecedent of var 1
new implication <- 1
 updateLBDscore() clause = 00E5A550
propagating 1
next_not_false
propagating: 
Clause Index = 161 is antecedent for literal 1
36 @ 8
antecedent[36] = 161
other_watch literal is36
clause 161is already antecedent of var 36
new implication <- 36
 updateLBDscore() clause = 00E5A550
propagating 36
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 36
-4 @ 8
antecedent[4] = 21
other_watch literal is-4
clause 21is already antecedent of var 4
new implication <- -4
 updateLBDscore() clause = 00E5A550
propagating -4
next_not_false
propagating: 
Clause Index = 0 is antecedent for literal -4
97 @ 8
antecedent[97] = 0
other_watch literal is97
clause 0is already antecedent of var 97
new implication <- 97
 updateLBDscore() clause = 00E58AD8
next_not_false
(4 8 -97 ) is conflicting
State: 1 
0 
0 
-4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
-21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
36 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
-56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (67 -41 )
166) (-18 41 )
167) (-48 -21 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  167;	rev_ant[ 167 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  166;	rev_ant[ 166 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  165;	rev_ant[ 165 ] 	= 	{41, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,)
clause 165 is antesedent for : (41,67,)
clause 166 is antesedent for : (41,)
clause 167 is antesedent for : (21,)
u = 97
v = 97
antecedent num = 0
clause 0 = (4 8 97 )
deletion times = 6
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (67 -41 )
166) (-18 41 )
167) (-48 -21 )
Learned clause #169. (8 4 )
 learnt clauses:  35 Backtracking to level 5
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
-21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
4 @ 5
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  168;	rev_ant[ 168 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  167;	rev_ant[ 167 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  166;	rev_ant[ 166 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  165;	rev_ant[ 165 ] 	= 	{41, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,)
clause 165 is antesedent for : (41,67,)
clause 166 is antesedent for : (41,)
clause 167 is antesedent for : (21,)
clause 168 is antesedent for : (4,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (67 -41 )
166) (-18 41 )
167) (-48 -21 )
168) (8 4 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 165clauses_to_delete[i]-i = 165
errasing from cnf of size = 168
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 165
errasing from cnf of size = 167
 clauses_to_delete[i] = 167clauses_to_delete[i]-i = 165
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 5
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
-21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
4 @ 5
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  161;	rev_ant[ 161 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,4,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
BCP
qhead = 19 trail-size = 20
propagating 4
next_not_false
(-1 -4 -36 ) now watched by -1
next_not_false
(1 -4 33 ) now watched by 33
BCP is over
decide
reset_iterators - where = 12.7293
m_Score2Vars_it->first = 12.7293
33 @ 6
BCP
qhead = 20 trail-size = 21
propagating 33
BCP is over
decide
84 @ 7
BCP
qhead = 21 trail-size = 22
propagating 84
BCP is over
decide
-56 @ 8
BCP
qhead = 22 trail-size = 23
propagating -56
next_not_false
propagating: 
Clause Index = 3 is antecedent for literal -56
1 @ 8
antecedent[1] = 3
other_watch literal is1
clause 3is already antecedent of var 1
new implication <- 1
 updateLBDscore() clause = 00E48B68
propagating 1
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 1
-36 @ 8
antecedent[36] = 21
other_watch literal is-36
clause 21is already antecedent of var 36
new implication <- -36
 updateLBDscore() clause = 00E48B68
next_not_false
(-26 -1 36 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
-21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
-36 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
-56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  24;	rev_ant[ 24 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  93;	rev_ant[ 93 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,4,)
u = -36
v = 36
antecedent num = 21
clause 21 = (-1 -4 -36 )
deletion times = 7
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
Learned clause #166. (-26 -4 -1 )
 learnt clauses:  36 Backtracking to level 5
backtrack
State: 0 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
-21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
-1 @ 5
BCP
qhead = 20 trail-size = 21
propagating -1
next_not_false
(1 -33 56 ) now watched by -33
next_not_false
propagating: 
Clause Index = 2 is antecedent for literal -1
33 @ 5
antecedent[33] = 2
other_watch literal is33
new implication <- 33
 updateLBDscore() clause = 00E59210
propagating 33
next_not_false
propagating: 
Clause Index = 3 is antecedent for literal 33
56 @ 5
antecedent[56] = 3
other_watch literal is56
clause 3is already antecedent of var 56
new implication <- 56
 updateLBDscore() clause = 00E5EDD8
propagating 56
next_not_false
propagating: 
Clause Index = 4 is antecedent for literal 56
54 @ 5
antecedent[54] = 4
other_watch literal is54
clause 4is already antecedent of var 54
new implication <- 54
 updateLBDscore() clause = 00E5F1C8
propagating 54
next_not_false
(-14 -54 82 ) now watched by 82
next_not_false
propagating: 
Clause Index = 23 is antecedent for literal 54
14 @ 5
antecedent[14] = 23
other_watch literal is14
new implication <- 14
 updateLBDscore() clause = 00E5EDD8
propagating 14
next_not_false
(-14 28 -35 ) now watched by -35
next_not_false
clause is sat
BCP is over
decide
reset_iterators - where = 12.7293
m_Score2Vars_it->first = 12.7293
84 @ 6
BCP
qhead = 25 trail-size = 26
propagating 84
BCP is over
decide
-42 @ 7
BCP
qhead = 26 trail-size = 27
propagating -42
BCP is over
decide
97 @ 8
BCP
qhead = 27 trail-size = 28
propagating 97
next_not_false
clause is sat
BCP is over
decide
-46 @ 9
BCP
qhead = 28 trail-size = 29
propagating -46
next_not_false
(46 -71 97 ) now watched by 97
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal -46
-64 @ 9
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E5F120
propagating -64
BCP is over
decide
-36 @ 10
BCP
qhead = 30 trail-size = 31
propagating -36
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 20 is antecedent for literal -36
-50 @ 10
antecedent[50] = 20
other_watch literal is-50
clause 20is already antecedent of var 50
new implication <- -50
 updateLBDscore() clause = 00E5EEF0
next_not_false
(26 36 97 ) now watched by 26
next_not_false
(-1 20 36 ) now watched by -1
propagating -50
next_not_false
propagating: 
Clause Index = 17 is antecedent for literal -50
57 @ 10
antecedent[57] = 17
other_watch literal is57
clause 17is already antecedent of var 57
new implication <- 57
 updateLBDscore() clause = 00E5EEF0
propagating 57
next_not_false
propagating: 
Clause Index = 19 is antecedent for literal 57
-73 @ 10
antecedent[73] = 19
other_watch literal is-73
clause 19is already antecedent of var 73
new implication <- -73
 updateLBDscore() clause = 00E5F1C8
next_not_false
(-20 -57 73 ) now watched by -20
propagating -73
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 18 is antecedent for literal -73
-20 @ 10
antecedent[20] = 18
other_watch literal is-20
new implication <- -20
 updateLBDscore() clause = 00E5F318
propagating -20
next_not_false
(20 58 93 ) now watched by 93
next_not_false
clause is sat
BCP is over
decide
59 @ 11
BCP
qhead = 35 trail-size = 36
propagating 59
next_not_false
(26 -40 -59 ) now watched by 26
next_not_false
(-1 40 -59 ) now watched by -1
BCP is over
decide
-49 @ 12
BCP
qhead = 36 trail-size = 37
propagating -49
next_not_false
propagating: 
Clause Index = 11 is antecedent for literal -49
28 @ 12
antecedent[28] = 11
other_watch literal is28
clause 11is already antecedent of var 28
new implication <- 28
 updateLBDscore() clause = 00E5EEF0
propagating 28
next_not_false
(-28 -51 59 ) now watched by -51
next_not_false
propagating: 
Clause Index = 12 is antecedent for literal 28
51 @ 12
antecedent[51] = 12
other_watch literal is51
clause 12is already antecedent of var 51
new implication <- 51
 updateLBDscore() clause = 00E5F120
propagating 51
next_not_false
clause is sat
next_not_false
(26 45 -51 ) now watched by 26
BCP is over
decide
-7 @ 13
BCP
qhead = 39 trail-size = 40
propagating -7
next_not_false
(7 9 -80 ) now watched by -80
next_not_false
(7 -92 97 ) now watched by -92
BCP is over
decide
-5 @ 14
BCP
qhead = 40 trail-size = 41
propagating -5
next_not_false
propagating: 
Clause Index = 108 is antecedent for literal -5
91 @ 14
antecedent[91] = 108
other_watch literal is91
new implication <- 91
 updateLBDscore() clause = 00E5F1C8
propagating 91
next_not_false
(-49 75 -91 ) now watched by 75
next_not_false
clause is sat
BCP is over
decide
-23 @ 15
BCP
qhead = 42 trail-size = 43
propagating -23
next_not_false
propagating: 
Clause Index = 152 is antecedent for literal -23
2 @ 15
antecedent[2] = 152
other_watch literal is2
clause 152is already antecedent of var 2
new implication <- 2
 updateLBDscore() clause = 00E5F008
next_not_false
propagating: 
Clause Index = 144 is antecedent for literal -23
-38 @ 15
antecedent[38] = 144
other_watch literal is-38
clause 144is already antecedent of var 38
new implication <- -38
 updateLBDscore() clause = 00E5EDD8
propagating 2
propagating -38
next_not_false
(35 38 89 ) now watched by 35
next_not_false
propagating: 
Clause Index = 57 is antecedent for literal -38
72 @ 15
antecedent[72] = 57
other_watch literal is72
new implication <- 72
 updateLBDscore() clause = 00E5F200
propagating 72
next_not_false
(31 -72 -85 ) now watched by 31
next_not_false
(45 -72 -86 ) now watched by -86
BCP is over
decide
-85 @ 16
BCP
qhead = 46 trail-size = 47
propagating -85
next_not_false
clause is sat
BCP is over
decide
-75 @ 17
BCP
qhead = 47 trail-size = 48
propagating -75
next_not_false
clause is sat
BCP is over
decide
-31 @ 18
BCP
qhead = 48 trail-size = 49
propagating -31
next_not_false
clause is sat
BCP is over
decide
-77 @ 19
BCP
qhead = 49 trail-size = 50
propagating -77
next_not_false
clause is sat
next_not_false
(71 77 84 ) now watched by 71
BCP is over
decide
-13 @ 20
BCP
qhead = 50 trail-size = 51
propagating -13
next_not_false
(13 40 -46 ) now watched by 40
next_not_false
clause is sat
next_not_false
clause is sat
BCP is over
decide
-92 @ 21
BCP
qhead = 51 trail-size = 52
propagating -92
next_not_false
propagating: 
Clause Index = 46 is antecedent for literal -92
-17 @ 21
antecedent[17] = 46
other_watch literal is-17
clause 46is already antecedent of var 17
new implication <- -17
 updateLBDscore() clause = 00E5F200
next_not_false
(17 -33 92 ) is conflicting
State: -1 
2 
0 
4 
-5 
0 
-7 
-8 
0 
0 
0 
0 
-13 
14 
0 
0 
-17 
18 
0 
-20 
-21 
22 
-23 
0 
0 
26 
0 
28 
0 
0 
-31 
0 
33 
0 
0 
-36 
0 
-38 
0 
0 
41 
-42 
0 
0 
0 
-46 
0 
48 
-49 
-50 
51 
-52 
0 
54 
55 
56 
57 
58 
59 
-60 
0 
0 
0 
-64 
0 
0 
67 
0 
0 
0 
0 
72 
-73 
-74 
-75 
-76 
-77 
0 
0 
-80 
0 
82 
0 
84 
-85 
0 
0 
0 
0 
90 
91 
-92 
93 
0 
95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
Antecedents: 
ant[1] =  165;	rev_ant[ 165 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  7;	rev_ant[ 7 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,)
clause 7 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,4,)
clause 165 is antesedent for : (1,)
u = -17
v = 17
antecedent num = 46
clause 46 = (-17 -18 92 )
deletion times = 7
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
Learned clause #167. (-33 -18 92 )
 learnt clauses:  37 Backtracking to level 5
backtrack
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
14 
0 
0 
0 
18 
0 
0 
-21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
54 
55 
56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
92 @ 5
BCP
qhead = 25 trail-size = 26
propagating 92
next_not_false
(7 -92 97 ) now watched by 7
next_not_false
clause is sat
BCP is over
decide
reset_iterators - where = 10
m_Score2Vars_it->first = 10
84 @ 6
BCP
qhead = 26 trail-size = 27
propagating 84
BCP is over
decide
-42 @ 7
BCP
qhead = 27 trail-size = 28
propagating -42
BCP is over
decide
97 @ 8
BCP
qhead = 28 trail-size = 29
propagating 97
next_not_false
clause is sat
BCP is over
decide
-46 @ 9
BCP
qhead = 29 trail-size = 30
propagating -46
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal -46
-64 @ 9
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E512F0
propagating -64
BCP is over
decide
-36 @ 10
BCP
qhead = 31 trail-size = 32
propagating -36
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 20 is antecedent for literal -36
-50 @ 10
antecedent[50] = 20
other_watch literal is-50
clause 20is already antecedent of var 50
new implication <- -50
 updateLBDscore() clause = 00E512F0
propagating -50
next_not_false
propagating: 
Clause Index = 17 is antecedent for literal -50
57 @ 10
antecedent[57] = 17
other_watch literal is57
clause 17is already antecedent of var 57
new implication <- 57
 updateLBDscore() clause = 00E51050
propagating 57
next_not_false
propagating: 
Clause Index = 19 is antecedent for literal 57
-73 @ 10
antecedent[73] = 19
other_watch literal is-73
clause 19is already antecedent of var 73
new implication <- -73
 updateLBDscore() clause = 00E50DE8
propagating -73
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 18 is antecedent for literal -73
-20 @ 10
antecedent[20] = 18
other_watch literal is-20
clause 18is already antecedent of var 20
new implication <- -20
 updateLBDscore() clause = 00E512F0
propagating -20
next_not_false
clause is sat
BCP is over
decide
59 @ 11
BCP
qhead = 36 trail-size = 37
propagating 59
BCP is over
decide
-49 @ 12
BCP
qhead = 37 trail-size = 38
propagating -49
next_not_false
propagating: 
Clause Index = 11 is antecedent for literal -49
28 @ 12
antecedent[28] = 11
other_watch literal is28
clause 11is already antecedent of var 28
new implication <- 28
 updateLBDscore() clause = 00E512F0
propagating 28
next_not_false
propagating: 
Clause Index = 12 is antecedent for literal 28
51 @ 12
antecedent[51] = 12
other_watch literal is51
clause 12is already antecedent of var 51
new implication <- 51
 updateLBDscore() clause = 00E50E58
propagating 51
next_not_false
clause is sat
BCP is over
decide
-7 @ 13
BCP
qhead = 40 trail-size = 41
propagating -7
next_not_false
clause is sat
BCP is over
decide
-5 @ 14
BCP
qhead = 41 trail-size = 42
propagating -5
next_not_false
propagating: 
Clause Index = 108 is antecedent for literal -5
91 @ 14
antecedent[91] = 108
other_watch literal is91
clause 108is already antecedent of var 91
new implication <- 91
 updateLBDscore() clause = 00E512B8
propagating 91
next_not_false
clause is sat
BCP is over
decide
-23 @ 15
BCP
qhead = 43 trail-size = 44
propagating -23
next_not_false
propagating: 
Clause Index = 152 is antecedent for literal -23
2 @ 15
antecedent[2] = 152
other_watch literal is2
clause 152is already antecedent of var 2
new implication <- 2
 updateLBDscore() clause = 00E50DB0
next_not_false
propagating: 
Clause Index = 144 is antecedent for literal -23
-38 @ 15
antecedent[38] = 144
other_watch literal is-38
clause 144is already antecedent of var 38
new implication <- -38
 updateLBDscore() clause = 00E50DB0
propagating 2
propagating -38
next_not_false
propagating: 
Clause Index = 57 is antecedent for literal -38
72 @ 15
antecedent[72] = 57
other_watch literal is72
clause 57is already antecedent of var 72
new implication <- 72
 updateLBDscore() clause = 00E512F0
propagating 72
BCP is over
decide
-85 @ 16
BCP
qhead = 47 trail-size = 48
propagating -85
next_not_false
clause is sat
BCP is over
decide
-75 @ 17
BCP
qhead = 48 trail-size = 49
propagating -75
next_not_false
clause is sat
BCP is over
decide
-31 @ 18
BCP
qhead = 49 trail-size = 50
propagating -31
next_not_false
clause is sat
BCP is over
decide
-77 @ 19
BCP
qhead = 50 trail-size = 51
propagating -77
next_not_false
clause is sat
BCP is over
decide
-13 @ 20
BCP
qhead = 51 trail-size = 52
propagating -13
next_not_false
clause is sat
next_not_false
clause is sat
BCP is over
decide
-3 @ 21
BCP
qhead = 52 trail-size = 53
propagating -3
next_not_false
propagating: 
Clause Index = 98 is antecedent for literal -3
-88 @ 21
antecedent[88] = 98
other_watch literal is-88
new implication <- -88
 updateLBDscore() clause = 00E50E58
propagating -88
next_not_false
(53 67 88 ) now watched by 67
BCP is over
decide
99 @ 22
BCP
qhead = 54 trail-size = 55
propagating 99
next_not_false
(-60 95 -99 ) now watched by 95
next_not_false
propagating: 
Clause Index = 6 is antecedent for literal 99
83 @ 22
antecedent[83] = 6
other_watch literal is83
new implication <- 83
 updateLBDscore() clause = 00E50DE8
propagating 83
next_not_false
propagating: 
Clause Index = 8 is antecedent for literal 83
-70 @ 22
antecedent[70] = 8
other_watch literal is-70
new implication <- -70
 updateLBDscore() clause = 00E512B8
next_not_false
(-56 70 -83 ) is conflicting
State: -1 
2 
-3 
4 
-5 
0 
-7 
-8 
0 
0 
0 
0 
-13 
14 
0 
0 
0 
18 
0 
-20 
-21 
22 
-23 
0 
0 
26 
0 
28 
0 
0 
-31 
0 
33 
0 
0 
-36 
0 
-38 
0 
0 
41 
-42 
0 
0 
0 
-46 
0 
48 
-49 
-50 
51 
-52 
0 
54 
55 
56 
57 
58 
59 
-60 
0 
0 
0 
-64 
0 
0 
67 
0 
0 
-70 
0 
72 
-73 
-74 
-75 
-76 
-77 
0 
0 
-80 
0 
82 
83 
84 
-85 
0 
0 
-88 
0 
90 
91 
92 
93 
0 
95 
0 
97 
0 
99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
166) (-33 -18 92 )
Antecedents: 
ant[1] =  165;	rev_ant[ 165 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[83] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  166;	rev_ant[ 166 ] 	= 	{92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  33;	rev_ant[ 33 ] 	= 	{99, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,4,)
clause 165 is antesedent for : (1,)
clause 166 is antesedent for : (92,)
u = -70
v = 70
antecedent num = 8
clause 8 = (-33 -70 -83 )
deletion times = 7
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
166) (-33 -18 92 )
Learned clause #168. (-56 -33 -83 )
 learnt clauses:  38 Backtracking to level 5
backtrack
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
14 
0 
0 
0 
18 
0 
0 
-21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
54 
55 
56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
92 
93 
0 
95 
0 
0 
0 
0 
0 
-83 @ 5
BCP
qhead = 26 trail-size = 27
propagating -83
next_not_false
propagating: 
Clause Index = 6 is antecedent for literal -83
-99 @ 5
antecedent[99] = 6
other_watch literal is-99
clause 6is already antecedent of var 99
new implication <- -99
 updateLBDscore() clause = 00E58F70
next_not_false
(-56 83 99 ) is conflicting
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
14 
0 
0 
0 
18 
0 
0 
-21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
54 
55 
56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
-83 
0 
0 
0 
0 
0 
0 
90 
0 
92 
93 
0 
95 
0 
0 
0 
-99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
166) (-33 -18 92 )
167) (-56 -33 -83 )
Antecedents: 
ant[1] =  165;	rev_ant[ 165 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[83] =  167;	rev_ant[ 167 ] 	= 	{83, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  166;	rev_ant[ 166 ] 	= 	{92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,4,)
clause 165 is antesedent for : (1,)
clause 166 is antesedent for : (92,)
clause 167 is antesedent for : (83,)
u = -99
v = 99
antecedent num = 6
clause 6 = (-56 83 -99 )
deletion times = 7
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
166) (-33 -18 92 )
167) (-56 -33 -83 )
u = -83
v = 83
antecedent num = 167
clause 167 = (-56 -33 -83 )
deletion times = 7
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
166) (-33 -18 92 )
167) (-56 -33 -83 )
u = 56
v = 56
antecedent num = 3
clause 3 = (1 -33 56 )
deletion times = 7
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
166) (-33 -18 92 )
167) (-56 -33 -83 )
u = 33
v = 33
antecedent num = 2
clause 2 = (1 -4 33 )
deletion times = 7
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
166) (-33 -18 92 )
167) (-56 -33 -83 )
u = -1
v = 1
antecedent num = 165
clause 165 = (-26 -4 -1 )
deletion times = 7
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
166) (-33 -18 92 )
167) (-56 -33 -83 )
Learned clause #169. (-26 -4 )
 learnt clauses:  39 Backtracking to level 2
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
0 
0 
95 
0 
0 
0 
0 
0 
-4 @ 2
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  165;	rev_ant[ 165 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  168;	rev_ant[ 168 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  163;	rev_ant[ 163 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[80] =  25;	rev_ant[ 25 ] 	= 	{80, 8, }
ant[82] =  162;	rev_ant[ 162 ] 	= 	{82, }
ant[83] =  167;	rev_ant[ 167 ] 	= 	{83, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  164;	rev_ant[ 164 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  166;	rev_ant[ 166 ] 	= 	{92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (80,)
clause 161 is antesedent for : (36,4,)
clause 162 is antesedent for : (82,)
clause 163 is antesedent for : (52,)
clause 164 is antesedent for : (90,60,48,4,)
clause 165 is antesedent for : (1,)
clause 166 is antesedent for : (92,)
clause 167 is antesedent for : (83,)
clause 168 is antesedent for : (4,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (82 80 )
161) (-26 -1 36 )
162) (-8 82 )
163) (-82 -52 )
164) (52 90 )
165) (-26 -4 -1 )
166) (-33 -18 92 )
167) (-56 -33 -83 )
168) (-26 -4 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 160clauses_to_delete[i]-i = 160
errasing from cnf of size = 168
 clauses_to_delete[i] = 165clauses_to_delete[i]-i = 164
errasing from cnf of size = 167
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 164
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 1
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-4 @ 1
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
BCP
qhead = 2 trail-size = 3
propagating -4
next_not_false
(4 8 -97 ) now watched by 8
next_not_false
(4 8 97 ) now watched by 8
BCP is over
decide
reset_iterators - where = 25.2856
m_Score2Vars_it->first = 25.2856
-52 @ 2
BCP
qhead = 3 trail-size = 4
propagating -52
next_not_false
propagating: 
Clause Index = 163 is antecedent for literal -52
90 @ 2
antecedent[90] = 163
other_watch literal is90
clause 163is already antecedent of var 90
new implication <- 90
 updateLBDscore() clause = 00E59210
activity score += 5 for variable 90
 increaseVariableActivityScore() Var v = 90
propagating 90
next_not_false
propagating: 
Clause Index = 30 is antecedent for literal 90
26 @ 2
antecedent[26] = 30
other_watch literal is26
clause 30is already antecedent of var 26
new implication <- 26
 updateLBDscore() clause = 00E59280
propagating 26
next_not_false
propagating: 
Clause Index = 31 is antecedent for literal 26
22 @ 2
antecedent[22] = 31
other_watch literal is22
clause 31is already antecedent of var 22
new implication <- 22
 updateLBDscore() clause = 00E59280
propagating 22
next_not_false
propagating: 
Clause Index = 32 is antecedent for literal 22
95 @ 2
antecedent[95] = 32
other_watch literal is95
clause 32is already antecedent of var 95
new implication <- 95
 updateLBDscore() clause = 00E59280
propagating 95
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal 95
55 @ 2
antecedent[55] = 35
other_watch literal is55
clause 35is already antecedent of var 55
new implication <- 55
 updateLBDscore() clause = 00E59210
propagating 55
BCP is over
decide
82 @ 3
BCP
qhead = 9 trail-size = 10
propagating 82
next_not_false
clause is sat
BCP is over
decide
-80 @ 4
BCP
qhead = 10 trail-size = 11
propagating -80
BCP is over
decide
-8 @ 5
BCP
qhead = 11 trail-size = 12
propagating -8
next_not_false
propagating: 
Clause Index = 0 is antecedent for literal -8
97 @ 5
antecedent[97] = 0
other_watch literal is97
clause 0is already antecedent of var 97
new implication <- 97
 updateLBDscore() clause = 00E58F70
next_not_false
(4 8 -97 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
0 
0 
95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,)
u = 97
v = 97
antecedent num = 0
clause 0 = (4 8 97 )
deletion times = 8
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
Learned clause #166. (4 8 )
 learnt clauses:  40 Backtracking to level 1
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
8 @ 1
BCP
qhead = 3 trail-size = 4
propagating 8
next_not_false
propagating: 
Clause Index = 161 is antecedent for literal 8
82 @ 1
antecedent[82] = 161
other_watch literal is82
clause 161is already antecedent of var 82
new implication <- 82
 updateLBDscore() clause = 00E59280
activity score += 5 for variable 82
 increaseVariableActivityScore() Var v = 82
next_not_false
(-8 21 -48 ) now watched by -48
propagating 82
next_not_false
propagating: 
Clause Index = 162 is antecedent for literal 82
-52 @ 1
antecedent[52] = 162
other_watch literal is-52
clause 162is already antecedent of var 52
new implication <- -52
 updateLBDscore() clause = 00E59210
activity score += 5 for variable 52
 increaseVariableActivityScore() Var v = 52
propagating -52
next_not_false
propagating: 
Clause Index = 163 is antecedent for literal -52
90 @ 1
antecedent[90] = 163
other_watch literal is90
clause 163is already antecedent of var 90
new implication <- 90
 updateLBDscore() clause = 00E59D00
activity score += 5 for variable 90
 increaseVariableActivityScore() Var v = 90
propagating 90
next_not_false
propagating: 
Clause Index = 30 is antecedent for literal 90
26 @ 1
antecedent[26] = 30
other_watch literal is26
clause 30is already antecedent of var 26
new implication <- 26
 updateLBDscore() clause = 00E498E0
propagating 26
next_not_false
propagating: 
Clause Index = 31 is antecedent for literal 26
22 @ 1
antecedent[22] = 31
other_watch literal is22
clause 31is already antecedent of var 22
new implication <- 22
 updateLBDscore() clause = 00E5F430
propagating 22
next_not_false
propagating: 
Clause Index = 32 is antecedent for literal 22
95 @ 1
antecedent[95] = 32
other_watch literal is95
clause 32is already antecedent of var 95
new implication <- 95
 updateLBDscore() clause = 00E5F318
propagating 95
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal 95
55 @ 1
antecedent[55] = 35
other_watch literal is55
clause 35is already antecedent of var 55
new implication <- 55
 updateLBDscore() clause = 00E5F120
propagating 55
BCP is over
decide
reset_iterators - where = 30.041
m_Score2Vars_it->first = 30.041
-80 @ 2
BCP
qhead = 11 trail-size = 12
propagating -80
BCP is over
decide
93 @ 3
BCP
qhead = 12 trail-size = 13
propagating 93
BCP is over
decide
58 @ 4
BCP
qhead = 13 trail-size = 14
propagating 58
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 58
-76 @ 4
antecedent[76] = 40
other_watch literal is-76
clause 40is already antecedent of var 76
new implication <- -76
 updateLBDscore() clause = 00E5F430
propagating -76
next_not_false
clause is sat
BCP is over
decide
33 @ 5
BCP
qhead = 15 trail-size = 16
propagating 33
next_not_false
(1 -33 56 ) now watched by 1
BCP is over
decide
67 @ 6
BCP
qhead = 16 trail-size = 17
propagating 67
next_not_false
propagating: 
Clause Index = 52 is antecedent for literal 67
48 @ 6
antecedent[48] = 52
other_watch literal is48
clause 52is already antecedent of var 48
new implication <- 48
 updateLBDscore() clause = 00E5F430
propagating 48
next_not_false
propagating: 
Clause Index = 53 is antecedent for literal 48
21 @ 6
antecedent[21] = 53
other_watch literal is21
clause 53is already antecedent of var 21
new implication <- 21
 updateLBDscore() clause = 00E5F318
propagating 21
next_not_false
propagating: 
Clause Index = 55 is antecedent for literal 21
-13 @ 6
antecedent[13] = 55
other_watch literal is-13
clause 55is already antecedent of var 13
new implication <- -13
 updateLBDscore() clause = 00E5F430
next_not_false
(13 -21 -48 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
-13 
0 
0 
0 
0 
0 
0 
0 
21 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (4 8 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  165;	rev_ant[ 165 ] 	= 	{8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,)
clause 165 is antesedent for : (8,)
u = -13
v = 13
antecedent num = 55
clause 55 = (-13 -21 -48 )
deletion times = 8
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (4 8 )
u = 21
v = 21
antecedent num = 53
clause 53 = (-8 21 -48 )
deletion times = 8
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (4 8 )
Learned clause #167. (-8 -48 )
 learnt clauses:  41 Backtracking to level 1
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
0 
0 
95 
0 
0 
0 
0 
0 
-48 @ 1
BCP
qhead = 11 trail-size = 12
propagating -48
next_not_false
propagating: 
Clause Index = 52 is antecedent for literal -48
-67 @ 1
antecedent[67] = 52
other_watch literal is-67
clause 52is already antecedent of var 67
new implication <- -67
 updateLBDscore() clause = 00E50F70
next_not_false
(48 55 -67 ) now watched by -67
propagating -67
next_not_false
(53 67 88 ) now watched by 88
next_not_false
(-41 67 -69 ) now watched by -41
next_not_false
(-41 67 69 ) now watched by -41
BCP is over
decide
reset_iterators - where = 20
m_Score2Vars_it->first = 20
-80 @ 2
BCP
qhead = 13 trail-size = 14
propagating -80
BCP is over
decide
93 @ 3
BCP
qhead = 14 trail-size = 15
propagating 93
BCP is over
decide
58 @ 4
BCP
qhead = 15 trail-size = 16
propagating 58
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 58
-76 @ 4
antecedent[76] = 40
other_watch literal is-76
clause 40is already antecedent of var 76
new implication <- -76
 updateLBDscore() clause = 00E50DB0
propagating -76
next_not_false
clause is sat
BCP is over
decide
33 @ 5
BCP
qhead = 17 trail-size = 18
propagating 33
BCP is over
decide
41 @ 6
BCP
qhead = 18 trail-size = 19
propagating 41
next_not_false
propagating: 
Clause Index = 48 is antecedent for literal 41
69 @ 6
antecedent[69] = 48
other_watch literal is69
clause 48is already antecedent of var 69
new implication <- 69
 updateLBDscore() clause = 00E51050
next_not_false
(-41 67 -69 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
69 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (4 8 )
166) (-8 -48 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  165;	rev_ant[ 165 ] 	= 	{8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  166;	rev_ant[ 166 ] 	= 	{48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,)
clause 165 is antesedent for : (8,)
clause 166 is antesedent for : (48,)
u = 69
v = 69
antecedent num = 48
clause 48 = (-41 67 69 )
deletion times = 8
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (4 8 )
166) (-8 -48 )
Learned clause #168. (67 -41 )
 learnt clauses:  42 Backtracking to level 1
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
0 
0 
95 
0 
0 
0 
0 
0 
-41 @ 1
BCP
qhead = 13 trail-size = 14
propagating -41
next_not_false
(-18 41 -92 ) now watched by -18
BCP is over
decide
reset_iterators - where = 20
m_Score2Vars_it->first = 20
-80 @ 2
BCP
qhead = 14 trail-size = 15
propagating -80
BCP is over
decide
93 @ 3
BCP
qhead = 15 trail-size = 16
propagating 93
BCP is over
decide
58 @ 4
BCP
qhead = 16 trail-size = 17
propagating 58
next_not_false
propagating: 
Clause Index = 40 is antecedent for literal 58
-76 @ 4
antecedent[76] = 40
other_watch literal is-76
clause 40is already antecedent of var 76
new implication <- -76
 updateLBDscore() clause = 00E54370
propagating -76
next_not_false
clause is sat
BCP is over
decide
33 @ 5
BCP
qhead = 18 trail-size = 19
propagating 33
BCP is over
decide
56 @ 6
BCP
qhead = 19 trail-size = 20
propagating 56
next_not_false
propagating: 
Clause Index = 164 is antecedent for literal 56
-83 @ 6
antecedent[83] = 164
other_watch literal is-83
clause 164is already antecedent of var 83
new implication <- -83
 updateLBDscore() clause = 00E48BA0
next_not_false
propagating: 
Clause Index = 4 is antecedent for literal 56
54 @ 6
antecedent[54] = 4
other_watch literal is54
clause 4is already antecedent of var 54
new implication <- 54
 updateLBDscore() clause = 00E51478
propagating -83
next_not_false
propagating: 
Clause Index = 6 is antecedent for literal -83
-99 @ 6
antecedent[99] = 6
other_watch literal is-99
clause 6is already antecedent of var 99
new implication <- -99
 updateLBDscore() clause = 00E50DE8
next_not_false
(-56 83 99 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
54 
55 
56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
-83 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
-99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (4 8 )
166) (-8 -48 )
167) (67 -41 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  165;	rev_ant[ 165 ] 	= 	{8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  167;	rev_ant[ 167 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  166;	rev_ant[ 166 ] 	= 	{48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,)
clause 165 is antesedent for : (8,)
clause 166 is antesedent for : (48,)
clause 167 is antesedent for : (41,)
u = -99
v = 99
antecedent num = 6
clause 6 = (-56 83 -99 )
deletion times = 8
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (4 8 )
166) (-8 -48 )
167) (67 -41 )
u = -83
v = 83
antecedent num = 164
clause 164 = (-56 -33 -83 )
deletion times = 8
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (4 8 )
166) (-8 -48 )
167) (67 -41 )
Learned clause #169. (-33 -56 )
 learnt clauses:  43 Backtracking to level 5
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
-56 @ 5
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  165;	rev_ant[ 165 ] 	= 	{8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  167;	rev_ant[ 167 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  166;	rev_ant[ 166 ] 	= 	{48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  168;	rev_ant[ 168 ] 	= 	{56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,)
clause 165 is antesedent for : (8,)
clause 166 is antesedent for : (48,)
clause 167 is antesedent for : (41,)
clause 168 is antesedent for : (56,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (4 8 )
166) (-8 -48 )
167) (67 -41 )
168) (-33 -56 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 165clauses_to_delete[i]-i = 165
errasing from cnf of size = 168
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 165
errasing from cnf of size = 167
 clauses_to_delete[i] = 167clauses_to_delete[i]-i = 165
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 5
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
-56 @ 5
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,56,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
BCP
qhead = 19 trail-size = 20
propagating -56
next_not_false
propagating: 
Clause Index = 3 is antecedent for literal -56
1 @ 5
antecedent[1] = 3
other_watch literal is1
clause 3is already antecedent of var 1
new implication <- 1
 updateLBDscore() clause = 00E48858
propagating 1
next_not_false
propagating: 
Clause Index = 160 is antecedent for literal 1
36 @ 5
antecedent[36] = 160
other_watch literal is36
clause 160is already antecedent of var 36
new implication <- 36
 updateLBDscore() clause = 00E48858
next_not_false
(-1 -4 -36 ) now watched by -4
next_not_false
(-1 40 -59 ) now watched by -59
next_not_false
(-1 20 36 ) now watched by 36
propagating 36
next_not_false
clause is sat
BCP is over
decide
reset_iterators - where = 11.0476
m_Score2Vars_it->first = 11.0476
84 @ 6
BCP
qhead = 22 trail-size = 23
propagating 84
BCP is over
decide
18 @ 7
BCP
qhead = 23 trail-size = 24
propagating 18
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal 18
-92 @ 7
antecedent[92] = 47
other_watch literal is-92
clause 47is already antecedent of var 92
new implication <- -92
 updateLBDscore() clause = 00E591A0
propagating -92
next_not_false
propagating: 
Clause Index = 46 is antecedent for literal -92
-17 @ 7
antecedent[17] = 46
other_watch literal is-17
clause 46is already antecedent of var 17
new implication <- -17
 updateLBDscore() clause = 00E59130
next_not_false
(17 -33 92 ) is conflicting
State: 1 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
-17 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
36 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
-56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
-92 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,56,)
u = -17
v = 17
antecedent num = 46
clause 46 = (-17 -18 92 )
deletion times = 9
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
u = -92
v = 92
antecedent num = 47
clause 47 = (-18 41 -92 )
deletion times = 9
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
Learned clause #166. (-33 41 -18 )
 learnt clauses:  44 Backtracking to level 5
backtrack
State: 1 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
36 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
-56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
-18 @ 5
BCP
qhead = 22 trail-size = 23
propagating -18
next_not_false
propagating: 
Clause Index = 43 is antecedent for literal -18
-94 @ 5
antecedent[94] = 43
other_watch literal is-94
clause 43is already antecedent of var 94
new implication <- -94
 updateLBDscore() clause = 00E54098
propagating -94
next_not_false
propagating: 
Clause Index = 42 is antecedent for literal -94
-47 @ 5
antecedent[47] = 42
other_watch literal is-47
clause 42is already antecedent of var 47
new implication <- -47
 updateLBDscore() clause = 00E53960
next_not_false
(18 47 94 ) is conflicting
State: 1 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
36 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
-47 
-48 
0 
0 
0 
-52 
0 
0 
55 
-56 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
-76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
-94 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (-33 41 -18 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[18] =  165;	rev_ant[ 165 ] 	= 	{18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,56,)
clause 165 is antesedent for : (18,)
u = -47
v = 47
antecedent num = 42
clause 42 = (-47 -93 94 )
deletion times = 9
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (-33 41 -18 )
u = -94
v = 94
antecedent num = 43
clause 43 = (18 -93 -94 )
deletion times = 9
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (-33 41 -18 )
Learned clause #167. (-93 18 )
 learnt clauses:  45 Backtracking to level 3
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
18 @ 3
BCP
qhead = 16 trail-size = 17
propagating 18
next_not_false
propagating: 
Clause Index = 165 is antecedent for literal 18
-33 @ 3
antecedent[33] = 165
other_watch literal is-33
new implication <- -33
 updateLBDscore() clause = 00E58DE8
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal 18
-92 @ 3
antecedent[92] = 47
other_watch literal is-92
clause 47is already antecedent of var 92
new implication <- -92
 updateLBDscore() clause = 00E591A0
propagating -33
next_not_false
(33 41 92 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
-92 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (-33 41 -18 )
166) (-93 18 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[18] =  166;	rev_ant[ 166 ] 	= 	{18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  165;	rev_ant[ 165 ] 	= 	{18, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  40;	rev_ant[ 40 ] 	= 	{55, 76, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,56,)
clause 165 is antesedent for : (18,33,)
clause 166 is antesedent for : (18,)
u = -92
v = 92
antecedent num = 47
clause 47 = (-18 41 -92 )
deletion times = 9
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (-33 41 -18 )
166) (-93 18 )
u = -33
v = 33
antecedent num = 165
clause 165 = (-33 41 -18 )
deletion times = 9
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (-33 41 -18 )
166) (-93 18 )
Learned clause #168. (41 -18 )
 learnt clauses:  46 Backtracking to level 1
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
0 
0 
95 
0 
0 
0 
0 
0 
-18 @ 1
BCP
qhead = 14 trail-size = 15
propagating -18
next_not_false
propagating: 
Clause Index = 166 is antecedent for literal -18
-93 @ 1
antecedent[93] = 166
other_watch literal is-93
new implication <- -93
 updateLBDscore() clause = 00E590C0
activity score += 5 for variable 93
 increaseVariableActivityScore() Var v = 93
next_not_false
(18 -93 -94 ) now watched by -93
propagating -93
next_not_false
(-58 76 93 ) now watched by -58
next_not_false
(20 58 93 ) now watched by 20
BCP is over
decide
reset_iterators - where = 20
m_Score2Vars_it->first = 20
-80 @ 2
BCP
qhead = 16 trail-size = 17
propagating -80
BCP is over
decide
-33 @ 3
BCP
qhead = 17 trail-size = 18
propagating -33
next_not_false
propagating: 
Clause Index = 44 is antecedent for literal -33
92 @ 3
antecedent[92] = 44
other_watch literal is92
clause 44is already antecedent of var 92
new implication <- 92
 updateLBDscore() clause = 00E4C238
next_not_false
(1 -4 33 ) now watched by -4
propagating 92
next_not_false
clause is sat
BCP is over
decide
58 @ 4
BCP
qhead = 19 trail-size = 20
propagating 58
next_not_false
propagating: 
Clause Index = 39 is antecedent for literal 58
76 @ 4
antecedent[76] = 39
other_watch literal is76
clause 39is already antecedent of var 76
new implication <- 76
 updateLBDscore() clause = 00E59130
next_not_false
(-55 -58 -76 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
58 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
76 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
92 
-93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (-33 41 -18 )
166) (-93 18 )
167) (41 -18 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[18] =  167;	rev_ant[ 167 ] 	= 	{18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  165;	rev_ant[ 165 ] 	= 	{18, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[93] =  166;	rev_ant[ 166 ] 	= 	{18, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,56,)
clause 165 is antesedent for : (18,33,)
clause 166 is antesedent for : (18,93,)
clause 167 is antesedent for : (18,)
u = 76
v = 76
antecedent num = 39
clause 39 = (-58 76 93 )
deletion times = 9
last deleted indices: {165;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (-33 41 -18 )
166) (-93 18 )
167) (41 -18 )
Learned clause #169. (-55 93 -58 )
 learnt clauses:  47 Backtracking to level 1
backtrack
State: 0 
0 
0 
-4 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-18 
0 
0 
0 
22 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
0 
0 
-60 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
-93 
0 
95 
0 
0 
0 
0 
0 
-58 @ 1
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[18] =  167;	rev_ant[ 167 ] 	= 	{18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  165;	rev_ant[ 165 ] 	= 	{18, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  168;	rev_ant[ 168 ] 	= 	{58, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[83] =  164;	rev_ant[ 164 ] 	= 	{83, 4, 56, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[93] =  166;	rev_ant[ 166 ] 	= 	{18, 93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (83,4,56,)
clause 165 is antesedent for : (18,33,)
clause 166 is antesedent for : (18,93,)
clause 167 is antesedent for : (18,)
clause 168 is antesedent for : (58,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-56 -33 -83 )
165) (-33 41 -18 )
166) (-93 18 )
167) (41 -18 )
168) (-55 93 -58 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = 164
errasing from cnf of size = 169
 clauses_to_delete[i] = 164clauses_to_delete[i]-i = 164
errasing from cnf of size = 168
 clauses_to_delete[i] = 165clauses_to_delete[i]-i = 164
errasing from cnf of size = 167
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 164
errasing from cnf of size = 166
 clauses_to_delete[i] = 167clauses_to_delete[i]-i = 164
 get_dynamic_restart_backtracking_level() 
backtracking to level: 0
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-58 @ 0
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  18;	rev_ant[ 18 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  164;	rev_ant[ 164 ] 	= 	{58, 58, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (58,58,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
BCP
qhead = 0 trail-size = 1
propagating -58
next_not_false
(-32 58 93 ) now watched by 93
next_not_false
(-20 32 58 ) now watched by -20
next_not_false
(20 58 93 ) now watched by 93
BCP is over
decide
reset_iterators - where = 35.041
m_Score2Vars_it->first = 35.041
90 @ 1
BCP
qhead = 1 trail-size = 2
propagating 90
next_not_false
(26 60 -90 ) now watched by 60
BCP is over
decide
-52 @ 2
BCP
qhead = 2 trail-size = 3
propagating -52
next_not_false
clause is sat
BCP is over
decide
82 @ 3
BCP
qhead = 3 trail-size = 4
propagating 82
next_not_false
clause is sat
BCP is over
decide
-93 @ 4
BCP
qhead = 4 trail-size = 5
propagating -93
next_not_false
propagating: 
Clause Index = 36 is antecedent for literal -93
20 @ 4
antecedent[20] = 36
other_watch literal is20
clause 36is already antecedent of var 20
new implication <- 20
 updateLBDscore() clause = 00E5A0F0
next_not_false
propagating: 
Clause Index = 38 is antecedent for literal -93
-32 @ 4
antecedent[32] = 38
other_watch literal is-32
clause 38is already antecedent of var 32
new implication <- -32
 updateLBDscore() clause = 00E5A0B8
propagating 20
next_not_false
(-20 32 58 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
20 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-32 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
-93 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  164;	rev_ant[ 164 ] 	= 	{58, 58, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (58,58,)
u = -32
v = 32
antecedent num = 38
clause 38 = (-32 58 93 )
deletion times = 10
last deleted indices: {164;165;166;167;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
u = 20
v = 20
antecedent num = 36
clause 36 = (20 58 93 )
deletion times = 10
last deleted indices: {164;165;166;167;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
Learned clause #166. (58 93 )
 learnt clauses:  48 Backtracking to level 0
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
93 @ 0
BCP
qhead = 1 trail-size = 2
propagating 93
next_not_false
(18 -93 -94 ) now watched by 18
BCP is over
decide
reset_iterators - where = 35.041
m_Score2Vars_it->first = 35.041
90 @ 1
BCP
qhead = 2 trail-size = 3
propagating 90
BCP is over
decide
-52 @ 2
BCP
qhead = 3 trail-size = 4
propagating -52
next_not_false
clause is sat
BCP is over
decide
82 @ 3
BCP
qhead = 4 trail-size = 5
propagating 82
next_not_false
clause is sat
BCP is over
decide
8 @ 4
BCP
qhead = 5 trail-size = 6
propagating 8
next_not_false
clause is sat
BCP is over
decide
-80 @ 5
BCP
qhead = 6 trail-size = 7
propagating -80
BCP is over
decide
-33 @ 6
BCP
qhead = 7 trail-size = 8
propagating -33
next_not_false
(33 41 92 ) now watched by 41
BCP is over
decide
26 @ 7
BCP
qhead = 8 trail-size = 9
propagating 26
next_not_false
(22 -26 60 ) now watched by 60
BCP is over
decide
-67 @ 8
BCP
qhead = 9 trail-size = 10
propagating -67
BCP is over
decide
-41 @ 9
BCP
qhead = 10 trail-size = 11
propagating -41
next_not_false
propagating: 
Clause Index = 44 is antecedent for literal -41
92 @ 9
antecedent[92] = 44
other_watch literal is92
clause 44is already antecedent of var 92
new implication <- 92
 updateLBDscore() clause = 00E5F350
propagating 92
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal 92
-18 @ 9
antecedent[18] = 47
other_watch literal is-18
clause 47is already antecedent of var 18
new implication <- -18
 updateLBDscore() clause = 00E5F200
propagating -18
next_not_false
propagating: 
Clause Index = 43 is antecedent for literal -18
-94 @ 9
antecedent[94] = 43
other_watch literal is-94
clause 43is already antecedent of var 94
new implication <- -94
 updateLBDscore() clause = 00E5F468
propagating -94
next_not_false
propagating: 
Clause Index = 42 is antecedent for literal -94
-47 @ 9
antecedent[47] = 42
other_watch literal is-47
clause 42is already antecedent of var 47
new implication <- -47
 updateLBDscore() clause = 00E5F200
next_not_false
(18 47 94 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-18 
0 
0 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
-47 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
92 
93 
-94 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
165) (58 93 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[18] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  164;	rev_ant[ 164 ] 	= 	{58, 58, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  44;	rev_ant[ 44 ] 	= 	{41, 92, 33, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (58,58,)
clause 165 is antesedent for : (93,)
u = -47
v = 47
antecedent num = 42
clause 42 = (-47 -93 94 )
deletion times = 10
last deleted indices: {164;165;166;167;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
165) (58 93 )
u = -94
v = 94
antecedent num = 43
clause 43 = (18 -93 -94 )
deletion times = 10
last deleted indices: {164;165;166;167;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
165) (58 93 )
Learned clause #167. (-93 18 )
 learnt clauses:  49 Backtracking to level 0
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
18 @ 0
BCP
qhead = 2 trail-size = 3
propagating 18
next_not_false
(-18 41 -92 ) now watched by 41
BCP is over
decide
reset_iterators - where = 35.041
m_Score2Vars_it->first = 35.041
90 @ 1
BCP
qhead = 3 trail-size = 4
propagating 90
BCP is over
decide
-52 @ 2
BCP
qhead = 4 trail-size = 5
propagating -52
next_not_false
clause is sat
BCP is over
decide
82 @ 3
BCP
qhead = 5 trail-size = 6
propagating 82
next_not_false
clause is sat
BCP is over
decide
8 @ 4
BCP
qhead = 6 trail-size = 7
propagating 8
next_not_false
clause is sat
BCP is over
decide
-80 @ 5
BCP
qhead = 7 trail-size = 8
propagating -80
BCP is over
decide
-33 @ 6
BCP
qhead = 8 trail-size = 9
propagating -33
BCP is over
decide
26 @ 7
BCP
qhead = 9 trail-size = 10
propagating 26
BCP is over
decide
-67 @ 8
BCP
qhead = 10 trail-size = 11
propagating -67
BCP is over
decide
-41 @ 9
BCP
qhead = 11 trail-size = 12
propagating -41
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal -41
-92 @ 9
antecedent[92] = 47
other_watch literal is-92
clause 47is already antecedent of var 92
new implication <- -92
 updateLBDscore() clause = 00E53960
next_not_false
(33 41 92 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
-41 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
-67 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
-92 
93 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
165) (58 93 )
166) (-93 18 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[18] =  166;	rev_ant[ 166 ] 	= 	{18, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  164;	rev_ant[ 164 ] 	= 	{58, 58, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (58,58,)
clause 165 is antesedent for : (93,)
clause 166 is antesedent for : (18,)
u = -92
v = 92
antecedent num = 47
clause 47 = (-18 41 -92 )
deletion times = 10
last deleted indices: {164;165;166;167;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
165) (58 93 )
166) (-93 18 )
Learned clause #168. (33 -18 41 )
 learnt clauses:  50 Backtracking to level 6
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
41 @ 6
BCP
qhead = 9 trail-size = 10
propagating 41
next_not_false
(-41 67 -69 ) now watched by 67
next_not_false
(-41 67 69 ) now watched by 67
BCP is over
decide
reset_iterators - where = 16.6655
m_Score2Vars_it->first = 16.6655
26 @ 7
BCP
qhead = 10 trail-size = 11
propagating 26
BCP is over
decide
-67 @ 8
BCP
qhead = 11 trail-size = 12
propagating -67
next_not_false
propagating: 
Clause Index = 48 is antecedent for literal -67
69 @ 8
antecedent[69] = 48
other_watch literal is69
clause 48is already antecedent of var 69
new implication <- 69
 updateLBDscore() clause = 00E5F468
next_not_false
(-41 67 -69 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
-67 
0 
69 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
165) (58 93 )
166) (-93 18 )
167) (33 -18 41 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[18] =  166;	rev_ant[ 166 ] 	= 	{18, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  167;	rev_ant[ 167 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  164;	rev_ant[ 164 ] 	= 	{58, 58, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (58,58,)
clause 165 is antesedent for : (93,)
clause 166 is antesedent for : (18,)
clause 167 is antesedent for : (41,)
u = 69
v = 69
antecedent num = 48
clause 48 = (-41 67 69 )
deletion times = 10
last deleted indices: {164;165;166;167;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
165) (58 93 )
166) (-93 18 )
167) (33 -18 41 )
Learned clause #169. (-41 67 )
 learnt clauses:  51 Backtracking to level 6
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
67 @ 6
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[18] =  166;	rev_ant[ 166 ] 	= 	{18, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  160;	rev_ant[ 160 ] 	= 	{36, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  167;	rev_ant[ 167 ] 	= 	{41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  162;	rev_ant[ 162 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  164;	rev_ant[ 164 ] 	= 	{58, 58, }
ant[60] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  168;	rev_ant[ 168 ] 	= 	{67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  161;	rev_ant[ 161 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  163;	rev_ant[ 163 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  165;	rev_ant[ 165 ] 	= 	{93, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (36,4,)
clause 161 is antesedent for : (82,)
clause 162 is antesedent for : (52,)
clause 163 is antesedent for : (90,60,48,4,)
clause 164 is antesedent for : (58,58,)
clause 165 is antesedent for : (93,)
clause 166 is antesedent for : (18,)
clause 167 is antesedent for : (41,)
clause 168 is antesedent for : (67,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-26 -1 36 )
161) (-8 82 )
162) (-82 -52 )
163) (52 90 )
164) (-55 93 -58 )
165) (58 93 )
166) (-93 18 )
167) (33 -18 41 )
168) (-41 67 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 160clauses_to_delete[i]-i = 160
errasing from cnf of size = 168
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 165
errasing from cnf of size = 167
 clauses_to_delete[i] = 167clauses_to_delete[i]-i = 165
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 2
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
67 @ 2
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  161;	rev_ant[ 161 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  163;	rev_ant[ 163 ] 	= 	{58, 58, }
ant[60] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  160;	rev_ant[ 160 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (82,)
clause 161 is antesedent for : (52,)
clause 162 is antesedent for : (90,60,48,4,)
clause 163 is antesedent for : (58,58,)
clause 164 is antesedent for : (93,67,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
BCP
qhead = 5 trail-size = 6
propagating 67
next_not_false
(48 -55 -67 ) now watched by -55
next_not_false
(48 55 -67 ) now watched by 48
BCP is over
decide
reset_iterators - where = 29.4203
m_Score2Vars_it->first = 29.4203
82 @ 3
BCP
qhead = 6 trail-size = 7
propagating 82
next_not_false
clause is sat
BCP is over
decide
-33 @ 4
BCP
qhead = 7 trail-size = 8
propagating -33
BCP is over
decide
8 @ 5
BCP
qhead = 8 trail-size = 9
propagating 8
next_not_false
clause is sat
BCP is over
decide
-80 @ 6
BCP
qhead = 9 trail-size = 10
propagating -80
BCP is over
decide
26 @ 7
BCP
qhead = 10 trail-size = 11
propagating 26
BCP is over
decide
41 @ 8
BCP
qhead = 11 trail-size = 12
propagating 41
BCP is over
decide
95 @ 9
BCP
qhead = 12 trail-size = 13
propagating 95
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal 95
55 @ 9
antecedent[55] = 35
other_watch literal is55
clause 35is already antecedent of var 55
new implication <- 55
 updateLBDscore() clause = 00E5F468
propagating 55
next_not_false
propagating: 
Clause Index = 52 is antecedent for literal 55
48 @ 9
antecedent[48] = 52
other_watch literal is48
clause 52is already antecedent of var 48
new implication <- 48
 updateLBDscore() clause = 00E5EEB8
next_not_false
(-55 93 -58 ) now watched by 93
propagating 48
next_not_false
propagating: 
Clause Index = 53 is antecedent for literal 48
21 @ 9
antecedent[21] = 53
other_watch literal is21
clause 53is already antecedent of var 21
new implication <- 21
 updateLBDscore() clause = 00E5F2A8
propagating 21
next_not_false
propagating: 
Clause Index = 55 is antecedent for literal 21
-13 @ 9
antecedent[13] = 55
other_watch literal is-13
clause 55is already antecedent of var 13
new implication <- -13
 updateLBDscore() clause = 00E5F2A8
next_not_false
(13 -21 -48 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
-13 
0 
0 
0 
0 
18 
0 
0 
21 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  161;	rev_ant[ 161 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  163;	rev_ant[ 163 ] 	= 	{58, 58, }
ant[60] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  160;	rev_ant[ 160 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (82,)
clause 161 is antesedent for : (52,)
clause 162 is antesedent for : (90,60,48,4,)
clause 163 is antesedent for : (58,58,)
clause 164 is antesedent for : (93,67,)
u = -13
v = 13
antecedent num = 55
clause 55 = (-13 -21 -48 )
deletion times = 11
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
u = 21
v = 21
antecedent num = 53
clause 53 = (-8 21 -48 )
deletion times = 11
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
Learned clause #166. (-8 -48 )
 learnt clauses:  52 Backtracking to level 5
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
-48 @ 5
BCP
qhead = 9 trail-size = 10
propagating -48
next_not_false
propagating: 
Clause Index = 51 is antecedent for literal -48
55 @ 5
antecedent[55] = 51
other_watch literal is55
new implication <- 55
 updateLBDscore() clause = 00E5F388
next_not_false
(48 -55 -67 ) is conflicting
State: 0 
0 
0 
0 
0 
0 
0 
8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-48 
0 
0 
0 
-52 
0 
0 
55 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
165) (-8 -48 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  165;	rev_ant[ 165 ] 	= 	{48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  161;	rev_ant[ 161 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  51;	rev_ant[ 51 ] 	= 	{55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  163;	rev_ant[ 163 ] 	= 	{58, 58, }
ant[60] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  160;	rev_ant[ 160 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (82,)
clause 161 is antesedent for : (52,)
clause 162 is antesedent for : (90,60,48,4,)
clause 163 is antesedent for : (58,58,)
clause 164 is antesedent for : (93,67,)
clause 165 is antesedent for : (48,)
u = 55
v = 55
antecedent num = 51
clause 51 = (48 55 -67 )
deletion times = 11
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
165) (-8 -48 )
Learned clause #167. (-67 48 )
 learnt clauses:  53 Backtracking to level 2
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
48 @ 2
BCP
qhead = 6 trail-size = 7
propagating 48
next_not_false
propagating: 
Clause Index = 165 is antecedent for literal 48
-8 @ 2
antecedent[8] = 165
other_watch literal is-8
new implication <- -8
 updateLBDscore() clause = 00E58BF0
activity score += 5 for variable 8
 increaseVariableActivityScore() Var v = 8
next_not_false
(-8 21 -48 ) now watched by -8
propagating -8
next_not_false
(4 8 -97 ) now watched by 4
next_not_false
(4 8 97 ) now watched by 4
BCP is over
decide
reset_iterators - where = 29.4203
m_Score2Vars_it->first = 29.4203
82 @ 3
BCP
qhead = 8 trail-size = 9
propagating 82
next_not_false
clause is sat
BCP is over
decide
-33 @ 4
BCP
qhead = 9 trail-size = 10
propagating -33
BCP is over
decide
-80 @ 5
BCP
qhead = 10 trail-size = 11
propagating -80
BCP is over
decide
26 @ 6
BCP
qhead = 11 trail-size = 12
propagating 26
BCP is over
decide
41 @ 7
BCP
qhead = 12 trail-size = 13
propagating 41
BCP is over
decide
95 @ 8
BCP
qhead = 13 trail-size = 14
propagating 95
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal 95
55 @ 8
antecedent[55] = 35
other_watch literal is55
clause 35is already antecedent of var 55
new implication <- 55
 updateLBDscore() clause = 00E53ED8
propagating 55
next_not_false
clause is sat
BCP is over
decide
-56 @ 9
BCP
qhead = 15 trail-size = 16
propagating -56
next_not_false
(1 -33 56 ) now watched by -33
BCP is over
decide
-4 @ 10
BCP
qhead = 16 trail-size = 17
propagating -4
next_not_false
propagating: 
Clause Index = 0 is antecedent for literal -4
97 @ 10
antecedent[97] = 0
other_watch literal is97
clause 0is already antecedent of var 97
new implication <- 97
 updateLBDscore() clause = 00E53F80
next_not_false
(4 8 -97 ) is conflicting
State: 0 
0 
0 
-4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
0 
-33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
-56 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
165) (-8 -48 )
166) (-67 48 )
Antecedents: 
ant[1] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  165;	rev_ant[ 165 ] 	= 	{48, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  36;	rev_ant[ 36 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  38;	rev_ant[ 38 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  166;	rev_ant[ 166 ] 	= 	{48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  161;	rev_ant[ 161 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  163;	rev_ant[ 163 ] 	= 	{58, 58, }
ant[60] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  160;	rev_ant[ 160 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (82,)
clause 161 is antesedent for : (52,)
clause 162 is antesedent for : (90,60,48,4,)
clause 163 is antesedent for : (58,58,)
clause 164 is antesedent for : (93,67,)
clause 165 is antesedent for : (48,8,)
clause 166 is antesedent for : (48,)
u = 97
v = 97
antecedent num = 0
clause 0 = (4 8 97 )
deletion times = 11
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
165) (-8 -48 )
166) (-67 48 )
Learned clause #168. (8 4 )
 learnt clauses:  54 Backtracking to level 2
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
4 @ 2
BCP
qhead = 8 trail-size = 9
propagating 4
next_not_false
(-1 -4 -36 ) now watched by -1
next_not_false
(1 -4 33 ) now watched by 33
BCP is over
decide
reset_iterators - where = 29.4203
m_Score2Vars_it->first = 29.4203
82 @ 3
BCP
qhead = 9 trail-size = 10
propagating 82
next_not_false
clause is sat
BCP is over
decide
-33 @ 4
BCP
qhead = 10 trail-size = 11
propagating -33
next_not_false
propagating: 
Clause Index = 2 is antecedent for literal -33
1 @ 4
antecedent[1] = 2
other_watch literal is1
clause 2is already antecedent of var 1
new implication <- 1
 updateLBDscore() clause = 00E53F80
propagating 1
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 1
-36 @ 4
antecedent[36] = 21
other_watch literal is-36
clause 21is already antecedent of var 36
new implication <- -36
 updateLBDscore() clause = 00E53F10
propagating -36
next_not_false
(-26 36 -50 ) now watched by -26
next_not_false
propagating: 
Clause Index = 9 is antecedent for literal -36
20 @ 4
antecedent[20] = 9
other_watch literal is20
clause 9is already antecedent of var 20
new implication <- 20
 updateLBDscore() clause = 00E53F80
propagating 20
next_not_false
propagating: 
Clause Index = 37 is antecedent for literal 20
32 @ 4
antecedent[32] = 37
other_watch literal is32
clause 37is already antecedent of var 32
new implication <- 32
 updateLBDscore() clause = 00E53F80
next_not_false
(-20 -57 73 ) now watched by -57
propagating 32
next_not_false
(-6 -32 -75 ) now watched by -75
next_not_false
clause is sat
BCP is over
decide
-80 @ 5
BCP
qhead = 15 trail-size = 16
propagating -80
BCP is over
decide
26 @ 6
BCP
qhead = 16 trail-size = 17
propagating 26
next_not_false
propagating: 
Clause Index = 20 is antecedent for literal 26
-50 @ 6
antecedent[50] = 20
other_watch literal is-50
clause 20is already antecedent of var 50
new implication <- -50
 updateLBDscore() clause = 00E53F80
propagating -50
next_not_false
propagating: 
Clause Index = 17 is antecedent for literal -50
57 @ 6
antecedent[57] = 17
other_watch literal is57
clause 17is already antecedent of var 57
new implication <- 57
 updateLBDscore() clause = 00E53F80
propagating 57
next_not_false
propagating: 
Clause Index = 18 is antecedent for literal 57
73 @ 6
antecedent[73] = 18
other_watch literal is73
new implication <- 73
 updateLBDscore() clause = 00E53960
next_not_false
(50 -57 -73 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
20 
0 
0 
0 
0 
0 
26 
0 
0 
0 
0 
0 
32 
-33 
0 
0 
-36 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
48 
0 
-50 
0 
-52 
0 
0 
0 
0 
57 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
73 
0 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
165) (-8 -48 )
166) (-67 48 )
167) (8 4 )
Antecedents: 
ant[1] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  167;	rev_ant[ 167 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  165;	rev_ant[ 165 ] 	= 	{48, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  166;	rev_ant[ 166 ] 	= 	{48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  161;	rev_ant[ 161 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  163;	rev_ant[ 163 ] 	= 	{58, 58, }
ant[60] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  18;	rev_ant[ 18 ] 	= 	{20, 73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  160;	rev_ant[ 160 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (82,)
clause 161 is antesedent for : (52,)
clause 162 is antesedent for : (90,60,48,4,)
clause 163 is antesedent for : (58,58,)
clause 164 is antesedent for : (93,67,)
clause 165 is antesedent for : (48,8,)
clause 166 is antesedent for : (48,)
clause 167 is antesedent for : (4,)
u = 73
v = 73
antecedent num = 18
clause 18 = (-20 -57 73 )
deletion times = 11
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
165) (-8 -48 )
166) (-67 48 )
167) (8 4 )
u = 57
v = 57
antecedent num = 17
clause 17 = (-26 50 57 )
deletion times = 11
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
165) (-8 -48 )
166) (-67 48 )
167) (8 4 )
u = -50
v = 50
antecedent num = 20
clause 20 = (-26 36 -50 )
deletion times = 11
last deleted indices: {160;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
165) (-8 -48 )
166) (-67 48 )
167) (8 4 )
Learned clause #169. (-20 36 -26 )
 learnt clauses:  55 Backtracking to level 4
backtrack
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
20 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
32 
-33 
0 
0 
-36 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
-26 @ 4
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  167;	rev_ant[ 167 ] 	= 	{4, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[8] =  165;	rev_ant[ 165 ] 	= 	{48, 8, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  168;	rev_ant[ 168 ] 	= 	{26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  166;	rev_ant[ 166 ] 	= 	{48, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  161;	rev_ant[ 161 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  163;	rev_ant[ 163 ] 	= 	{58, 58, }
ant[60] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  18;	rev_ant[ 18 ] 	= 	{20, 73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[82] =  160;	rev_ant[ 160 ] 	= 	{82, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  162;	rev_ant[ 162 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  164;	rev_ant[ 164 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (82,)
clause 161 is antesedent for : (52,)
clause 162 is antesedent for : (90,60,48,4,)
clause 163 is antesedent for : (58,58,)
clause 164 is antesedent for : (93,67,)
clause 165 is antesedent for : (48,8,)
clause 166 is antesedent for : (48,)
clause 167 is antesedent for : (4,)
clause 168 is antesedent for : (26,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-8 82 )
161) (-82 -52 )
162) (52 90 )
163) (-55 93 -58 )
164) (58 93 )
165) (-8 -48 )
166) (-67 48 )
167) (8 4 )
168) (-20 36 -26 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 160clauses_to_delete[i]-i = 160
errasing from cnf of size = 168
 clauses_to_delete[i] = 165clauses_to_delete[i]-i = 164
errasing from cnf of size = 167
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 164
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 1
backtrack
State: 0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-58 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
-26 @ 1
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[1] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[60] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  18;	rev_ant[ 18 ] 	= 	{20, 73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  0;	rev_ant[ 0 ] 	= 	{4, 97, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (4,26,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
BCP
qhead = 4 trail-size = 5
propagating -26
next_not_false
(26 45 -51 ) now watched by -51
next_not_false
propagating: 
Clause Index = 30 is antecedent for literal -26
60 @ 1
antecedent[60] = 30
other_watch literal is60
clause 30is already antecedent of var 60
new implication <- 60
 updateLBDscore() clause = 00E5F318
next_not_false
(26 -40 -59 ) now watched by -59
next_not_false
(26 36 97 ) now watched by 36
propagating 60
next_not_false
(-60 95 -99 ) now watched by -99
next_not_false
(-60 95 99 ) now watched by 95
BCP is over
decide
reset_iterators - where = 30.2856
m_Score2Vars_it->first = 30.2856
-52 @ 2
BCP
qhead = 6 trail-size = 7
propagating -52
next_not_false
clause is sat
BCP is over
decide
82 @ 3
BCP
qhead = 7 trail-size = 8
propagating 82
next_not_false
clause is sat
BCP is over
decide
-8 @ 4
BCP
qhead = 8 trail-size = 9
propagating -8
next_not_false
propagating: 
Clause Index = 164 is antecedent for literal -8
4 @ 4
antecedent[4] = 164
other_watch literal is4
clause 164is already antecedent of var 4
new implication <- 4
 updateLBDscore() clause = 00E5F158
activity score += 5 for variable 4
 increaseVariableActivityScore() Var v = 4
propagating 4
BCP is over
decide
-33 @ 5
BCP
qhead = 10 trail-size = 11
propagating -33
next_not_false
propagating: 
Clause Index = 2 is antecedent for literal -33
1 @ 5
antecedent[1] = 2
other_watch literal is1
clause 2is already antecedent of var 1
new implication <- 1
 updateLBDscore() clause = 00E5F158
propagating 1
next_not_false
propagating: 
Clause Index = 21 is antecedent for literal 1
-36 @ 5
antecedent[36] = 21
other_watch literal is-36
clause 21is already antecedent of var 36
new implication <- -36
 updateLBDscore() clause = 00E5F158
propagating -36
next_not_false
propagating: 
Clause Index = 10 is antecedent for literal -36
97 @ 5
antecedent[97] = 10
other_watch literal is97
clause 10is already antecedent of var 97
new implication <- 97
 updateLBDscore() clause = 00E5E828
next_not_false
propagating: 
Clause Index = 9 is antecedent for literal -36
20 @ 5
antecedent[20] = 9
other_watch literal is20
clause 9is already antecedent of var 20
new implication <- 20
 updateLBDscore() clause = 00E5E828
propagating 97
next_not_false
clause is sat
propagating 20
next_not_false
propagating: 
Clause Index = 37 is antecedent for literal 20
32 @ 5
antecedent[32] = 37
other_watch literal is32
clause 37is already antecedent of var 32
new implication <- 32
 updateLBDscore() clause = 00E5F158
propagating 32
next_not_false
clause is sat
BCP is over
decide
-80 @ 6
BCP
qhead = 16 trail-size = 17
propagating -80
BCP is over
decide
67 @ 7
BCP
qhead = 17 trail-size = 18
propagating 67
BCP is over
decide
41 @ 8
BCP
qhead = 18 trail-size = 19
propagating 41
BCP is over
decide
95 @ 9
BCP
qhead = 19 trail-size = 20
propagating 95
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal 95
55 @ 9
antecedent[55] = 35
other_watch literal is55
clause 35is already antecedent of var 55
new implication <- 55
 updateLBDscore() clause = 00E5F158
propagating 55
next_not_false
propagating: 
Clause Index = 52 is antecedent for literal 55
48 @ 9
antecedent[48] = 52
other_watch literal is48
clause 52is already antecedent of var 48
new implication <- 48
 updateLBDscore() clause = 00E5F158
propagating 48
BCP is over
decide
-56 @ 10
BCP
qhead = 22 trail-size = 23
propagating -56
BCP is over
decide
84 @ 11
BCP
qhead = 23 trail-size = 24
propagating 84
BCP is over
decide
-74 @ 12
BCP
qhead = 24 trail-size = 25
propagating -74
BCP is over
decide
-42 @ 13
BCP
qhead = 25 trail-size = 26
propagating -42
BCP is over
decide
-46 @ 14
BCP
qhead = 26 trail-size = 27
propagating -46
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal -46
-64 @ 14
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E5F158
propagating -64
BCP is over
decide
59 @ 15
BCP
qhead = 28 trail-size = 29
propagating 59
next_not_false
propagating: 
Clause Index = 16 is antecedent for literal 59
-40 @ 15
antecedent[40] = 16
other_watch literal is-40
clause 16is already antecedent of var 40
new implication <- -40
 updateLBDscore() clause = 00E5EC88
next_not_false
(-1 40 -59 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
20 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
32 
-33 
0 
0 
-36 
0 
0 
0 
-40 
41 
-42 
0 
0 
0 
-46 
0 
48 
0 
0 
0 
-52 
0 
0 
55 
-56 
0 
-58 
59 
60 
0 
0 
0 
-64 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
Antecedents: 
ant[1] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  18;	rev_ant[ 18 ] 	= 	{20, 73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (4,26,)
u = -40
v = 40
antecedent num = 16
clause 16 = (26 -40 -59 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
Learned clause #166. (-1 26 -59 )
 learnt clauses:  56 Backtracking to level 5
backtrack
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
20 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
32 
-33 
0 
0 
-36 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
97 
0 
0 
0 
-59 @ 5
BCP
qhead = 16 trail-size = 17
propagating -59
next_not_false
propagating: 
Clause Index = 14 is antecedent for literal -59
-49 @ 5
antecedent[49] = 14
other_watch literal is-49
clause 14is already antecedent of var 49
new implication <- -49
 updateLBDscore() clause = 00E5A160
next_not_false
(-28 -51 59 ) now watched by -28
propagating -49
next_not_false
propagating: 
Clause Index = 11 is antecedent for literal -49
28 @ 5
antecedent[28] = 11
other_watch literal is28
clause 11is already antecedent of var 28
new implication <- 28
 updateLBDscore() clause = 00E5A128
propagating 28
next_not_false
propagating: 
Clause Index = 13 is antecedent for literal 28
-51 @ 5
antecedent[51] = 13
other_watch literal is-51
clause 13is already antecedent of var 51
new implication <- -51
 updateLBDscore() clause = 00E59C58
next_not_false
(-28 49 51 ) is conflicting
State: 1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
20 
0 
0 
0 
0 
0 
-26 
0 
28 
0 
0 
0 
32 
-33 
0 
0 
-36 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-49 
0 
-51 
-52 
0 
0 
0 
0 
0 
-58 
-59 
60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
Antecedents: 
ant[1] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  13;	rev_ant[ 13 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[59] =  165;	rev_ant[ 165 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  18;	rev_ant[ 18 ] 	= 	{20, 73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (4,26,)
clause 165 is antesedent for : (59,)
u = -51
v = 51
antecedent num = 13
clause 13 = (-28 -51 59 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
u = 28
v = 28
antecedent num = 11
clause 11 = (28 49 -97 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
u = -49
v = 49
antecedent num = 14
clause 14 = (36 -49 59 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
u = -59
v = 59
antecedent num = 165
clause 165 = (-1 26 -59 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
u = 97
v = 97
antecedent num = 10
clause 10 = (26 36 97 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
u = -36
v = 36
antecedent num = 21
clause 21 = (-1 -4 -36 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
Learned clause #167. (26 -4 -1 )
 learnt clauses:  57 Backtracking to level 4
backtrack
State: 0 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
0 
0 
0 
0 
-58 
0 
60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
-1 @ 4
BCP
qhead = 10 trail-size = 11
propagating -1
next_not_false
(1 -33 56 ) now watched by 56
next_not_false
propagating: 
Clause Index = 2 is antecedent for literal -1
33 @ 4
antecedent[33] = 2
other_watch literal is33
clause 2is already antecedent of var 33
new implication <- 33
 updateLBDscore() clause = 00E50E58
propagating 33
next_not_false
propagating: 
Clause Index = 3 is antecedent for literal 33
56 @ 4
antecedent[56] = 3
other_watch literal is56
clause 3is already antecedent of var 56
new implication <- 56
 updateLBDscore() clause = 00E5A160
propagating 56
next_not_false
propagating: 
Clause Index = 4 is antecedent for literal 56
54 @ 4
antecedent[54] = 4
other_watch literal is54
clause 4is already antecedent of var 54
new implication <- 54
 updateLBDscore() clause = 00E5A128
propagating 54
next_not_false
(14 -54 80 ) now watched by 80
BCP is over
decide
reset_iterators - where = 20.3178
m_Score2Vars_it->first = 20.3178
-80 @ 5
BCP
qhead = 14 trail-size = 15
propagating -80
next_not_false
propagating: 
Clause Index = 23 is antecedent for literal -80
14 @ 5
antecedent[14] = 23
other_watch literal is14
clause 23is already antecedent of var 14
new implication <- 14
 updateLBDscore() clause = 00E5A160
propagating 14
next_not_false
clause is sat
BCP is over
decide
67 @ 6
BCP
qhead = 16 trail-size = 17
propagating 67
BCP is over
decide
41 @ 7
BCP
qhead = 17 trail-size = 18
propagating 41
BCP is over
decide
95 @ 8
BCP
qhead = 18 trail-size = 19
propagating 95
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal 95
55 @ 8
antecedent[55] = 35
other_watch literal is55
clause 35is already antecedent of var 55
new implication <- 55
 updateLBDscore() clause = 00E5A160
propagating 55
next_not_false
propagating: 
Clause Index = 52 is antecedent for literal 55
48 @ 8
antecedent[48] = 52
other_watch literal is48
clause 52is already antecedent of var 48
new implication <- 48
 updateLBDscore() clause = 00E5A128
propagating 48
BCP is over
decide
84 @ 9
BCP
qhead = 21 trail-size = 22
propagating 84
BCP is over
decide
-74 @ 10
BCP
qhead = 22 trail-size = 23
propagating -74
BCP is over
decide
-36 @ 11
BCP
qhead = 23 trail-size = 24
propagating -36
next_not_false
propagating: 
Clause Index = 10 is antecedent for literal -36
97 @ 11
antecedent[97] = 10
other_watch literal is97
clause 10is already antecedent of var 97
new implication <- 97
 updateLBDscore() clause = 00E59C58
next_not_false
(-1 20 36 ) now watched by -1
propagating 97
next_not_false
clause is sat
BCP is over
decide
-42 @ 12
BCP
qhead = 25 trail-size = 26
propagating -42
BCP is over
decide
-46 @ 13
BCP
qhead = 26 trail-size = 27
propagating -46
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal -46
-64 @ 13
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E5A160
propagating -64
BCP is over
decide
20 @ 14
BCP
qhead = 28 trail-size = 29
propagating 20
next_not_false
propagating: 
Clause Index = 37 is antecedent for literal 20
32 @ 14
antecedent[32] = 37
other_watch literal is32
clause 37is already antecedent of var 32
new implication <- 32
 updateLBDscore() clause = 00E5A160
propagating 32
next_not_false
clause is sat
BCP is over
decide
-59 @ 15
BCP
qhead = 30 trail-size = 31
propagating -59
next_not_false
propagating: 
Clause Index = 14 is antecedent for literal -59
-49 @ 15
antecedent[49] = 14
other_watch literal is-49
clause 14is already antecedent of var 49
new implication <- -49
 updateLBDscore() clause = 00E5A128
propagating -49
next_not_false
propagating: 
Clause Index = 11 is antecedent for literal -49
28 @ 15
antecedent[28] = 11
other_watch literal is28
clause 11is already antecedent of var 28
new implication <- 28
 updateLBDscore() clause = 00E59C58
propagating 28
next_not_false
propagating: 
Clause Index = 13 is antecedent for literal 28
-51 @ 15
antecedent[51] = 13
other_watch literal is-51
clause 13is already antecedent of var 51
new implication <- -51
 updateLBDscore() clause = 00E5A160
next_not_false
(-28 49 51 ) is conflicting
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
14 
0 
0 
0 
18 
0 
20 
0 
0 
0 
0 
0 
-26 
0 
28 
0 
0 
0 
32 
33 
0 
0 
-36 
0 
0 
0 
0 
41 
-42 
0 
0 
0 
-46 
0 
48 
-49 
0 
-51 
-52 
0 
54 
55 
56 
0 
-58 
-59 
60 
0 
0 
0 
-64 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
166) (26 -4 -1 )
Antecedents: 
ant[1] =  166;	rev_ant[ 166 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  53;	rev_ant[ 53 ] 	= 	{21, 8, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  13;	rev_ant[ 13 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[59] =  165;	rev_ant[ 165 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  18;	rev_ant[ 18 ] 	= 	{20, 73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (4,26,)
clause 165 is antesedent for : (59,)
clause 166 is antesedent for : (1,)
u = -51
v = 51
antecedent num = 13
clause 13 = (-28 -51 59 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
166) (26 -4 -1 )
u = 28
v = 28
antecedent num = 11
clause 11 = (28 49 -97 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
166) (26 -4 -1 )
u = -49
v = 49
antecedent num = 14
clause 14 = (36 -49 59 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
166) (26 -4 -1 )
Learned clause #168. (-97 36 59 )
 learnt clauses:  58 Backtracking to level 11
backtrack
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
14 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
-36 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
48 
0 
0 
0 
-52 
0 
54 
55 
56 
0 
-58 
0 
60 
0 
0 
0 
0 
0 
0 
67 
0 
0 
0 
0 
0 
0 
-74 
0 
0 
0 
0 
0 
-80 
0 
82 
0 
84 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
95 
0 
97 
0 
0 
0 
59 @ 11
BCP
qhead = 25 trail-size = 26
propagating 59
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 16 is antecedent for literal 59
-40 @ 11
antecedent[40] = 16
other_watch literal is-40
clause 16is already antecedent of var 40
new implication <- -40
 updateLBDscore() clause = 00E59C58
next_not_false
(-1 40 -59 ) now watched by -1
propagating -40
next_not_false
(13 40 -46 ) now watched by 13
next_not_false
clause is sat
BCP is over
decide
reset_iterators - where = 7
m_Score2Vars_it->first = 7
-42 @ 12
BCP
qhead = 27 trail-size = 28
propagating -42
BCP is over
decide
-46 @ 13
BCP
qhead = 28 trail-size = 29
propagating -46
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal -46
-64 @ 13
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E5A128
propagating -64
BCP is over
decide
20 @ 14
BCP
qhead = 30 trail-size = 31
propagating 20
next_not_false
propagating: 
Clause Index = 37 is antecedent for literal 20
32 @ 14
antecedent[32] = 37
other_watch literal is32
clause 37is already antecedent of var 32
new implication <- 32
 updateLBDscore() clause = 00E5A128
propagating 32
next_not_false
clause is sat
BCP is over
decide
-49 @ 15
BCP
qhead = 32 trail-size = 33
propagating -49
next_not_false
propagating: 
Clause Index = 11 is antecedent for literal -49
28 @ 15
antecedent[28] = 11
other_watch literal is28
clause 11is already antecedent of var 28
new implication <- 28
 updateLBDscore() clause = 00E5A160
propagating 28
next_not_false
(-28 -51 59 ) now watched by 59
next_not_false
propagating: 
Clause Index = 12 is antecedent for literal 28
51 @ 15
antecedent[51] = 12
other_watch literal is51
clause 12is already antecedent of var 51
new implication <- 51
 updateLBDscore() clause = 00E59C58
propagating 51
next_not_false
propagating: 
Clause Index = 59 is antecedent for literal 51
45 @ 15
antecedent[45] = 59
other_watch literal is45
clause 59is already antecedent of var 45
new implication <- 45
 updateLBDscore() clause = 00E59C58
next_not_false
clause is sat
propagating 45
BCP is over
decide
-7 @ 16
BCP
qhead = 36 trail-size = 37
propagating -7
next_not_false
(7 -92 97 ) now watched by -92
BCP is over
decide
-5 @ 17
BCP
qhead = 37 trail-size = 38
propagating -5
next_not_false
(5 76 91 ) now watched by 76
BCP is over
decide
-23 @ 18
BCP
qhead = 38 trail-size = 39
propagating -23
next_not_false
propagating: 
Clause Index = 152 is antecedent for literal -23
2 @ 18
antecedent[2] = 152
other_watch literal is2
clause 152is already antecedent of var 2
new implication <- 2
 updateLBDscore() clause = 00E59C58
next_not_false
propagating: 
Clause Index = 144 is antecedent for literal -23
-38 @ 18
antecedent[38] = 144
other_watch literal is-38
clause 144is already antecedent of var 38
new implication <- -38
 updateLBDscore() clause = 00E59C58
propagating 2
propagating -38
next_not_false
propagating: 
Clause Index = 57 is antecedent for literal -38
72 @ 18
antecedent[72] = 57
other_watch literal is72
clause 57is already antecedent of var 72
new implication <- 72
 updateLBDscore() clause = 00E5A128
propagating 72
BCP is over
decide
-85 @ 19
BCP
qhead = 42 trail-size = 43
propagating -85
next_not_false
clause is sat
BCP is over
decide
-75 @ 20
BCP
qhead = 43 trail-size = 44
propagating -75
next_not_false
(-49 75 -91 ) now watched by -91
BCP is over
decide
-31 @ 21
BCP
qhead = 44 trail-size = 45
propagating -31
next_not_false
clause is sat
BCP is over
decide
-77 @ 22
BCP
qhead = 45 trail-size = 46
propagating -77
next_not_false
clause is sat
BCP is over
decide
-13 @ 23
BCP
qhead = 46 trail-size = 47
propagating -13
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 54 is antecedent for literal -13
-21 @ 23
antecedent[21] = 54
other_watch literal is-21
new implication <- -21
 updateLBDscore() clause = 00E59C58
next_not_false
clause is sat
propagating -21
next_not_false
clause is sat
BCP is over
decide
-50 @ 24
BCP
qhead = 48 trail-size = 49
propagating -50
next_not_false
(-26 50 57 ) now watched by -26
BCP is over
decide
-92 @ 25
BCP
qhead = 49 trail-size = 50
propagating -92
next_not_false
propagating: 
Clause Index = 46 is antecedent for literal -92
-17 @ 25
antecedent[17] = 46
other_watch literal is-17
clause 46is already antecedent of var 17
new implication <- -17
 updateLBDscore() clause = 00E5A160
next_not_false
(17 -33 92 ) is conflicting
State: -1 
2 
0 
4 
-5 
0 
-7 
-8 
0 
0 
0 
0 
-13 
14 
0 
0 
-17 
18 
0 
20 
-21 
0 
-23 
0 
0 
-26 
0 
28 
0 
0 
-31 
32 
33 
0 
0 
-36 
0 
-38 
0 
-40 
41 
-42 
0 
0 
45 
-46 
0 
48 
-49 
-50 
51 
-52 
0 
54 
55 
56 
0 
-58 
59 
60 
0 
0 
0 
-64 
0 
0 
67 
0 
0 
0 
0 
72 
0 
-74 
-75 
0 
-77 
0 
0 
-80 
0 
82 
0 
84 
-85 
0 
0 
0 
0 
90 
0 
-92 
93 
0 
95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
166) (26 -4 -1 )
167) (-97 36 59 )
Antecedents: 
ant[1] =  166;	rev_ant[ 166 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  54;	rev_ant[ 54 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[59] =  167;	rev_ant[ 167 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  18;	rev_ant[ 18 ] 	= 	{20, 73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  47;	rev_ant[ 47 ] 	= 	{18, 92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 54 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (4,26,)
clause 165 is antesedent for : (59,)
clause 166 is antesedent for : (1,)
clause 167 is antesedent for : (59,)
u = -17
v = 17
antecedent num = 46
clause 46 = (-17 -18 92 )
deletion times = 12
last deleted indices: {160;165;166;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
166) (26 -4 -1 )
167) (-97 36 59 )
Learned clause #169. (-33 -18 92 )
 learnt clauses:  59 Backtracking to level 4
backtrack
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
54 
0 
56 
0 
-58 
0 
60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
92 @ 4
dynamic restart
antecedents and cnf state before dynamic restart
Antecedents: 
ant[1] =  166;	rev_ant[ 166 ] 	= 	{1, }
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[4] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  54;	rev_ant[ 54 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[26] =  164;	rev_ant[ 164 ] 	= 	{4, 26, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[59] =  167;	rev_ant[ 167 ] 	= 	{59, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  18;	rev_ant[ 18 ] 	= 	{20, 73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  168;	rev_ant[ 168 ] 	= 	{92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 54 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (4,26,)
clause 165 is antesedent for : (59,)
clause 166 is antesedent for : (1,)
clause 167 is antesedent for : (59,)
clause 168 is antesedent for : (92,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (8 4 )
165) (-1 26 -59 )
166) (26 -4 -1 )
167) (-97 36 59 )
168) (-33 -18 92 )
 sort_conflict_clauses_by_score() 
 index_recalculation_map_creation() 
 watchers_and_antecedent_update() 
 updateClauseIndx_score_map() clause_index = 0 recalculated_index = 0
 deleteLearntClauseFromWatches() clause_index = 0 recalculated_index = 0
 unmarkAntecedentForVariable() clause_index = 0 recalculated_index = 0
 updateClauseIndx_score_map() clause_index = 1 recalculated_index = 1
 deleteLearntClauseFromWatches() clause_index = 1 recalculated_index = 1
 unmarkAntecedentForVariable() clause_index = 1 recalculated_index = 1
 updateClauseIndx_score_map() clause_index = 2 recalculated_index = 2
 deleteLearntClauseFromWatches() clause_index = 2 recalculated_index = 2
 unmarkAntecedentForVariable() clause_index = 2 recalculated_index = 2
 updateClauseIndx_score_map() clause_index = 3 recalculated_index = 3
 deleteLearntClauseFromWatches() clause_index = 3 recalculated_index = 3
 unmarkAntecedentForVariable() clause_index = 3 recalculated_index = 3
 updateClauseIndx_score_map() clause_index = 4 recalculated_index = 4
 deleteLearntClauseFromWatches() clause_index = 4 recalculated_index = 4
 unmarkAntecedentForVariable() clause_index = 4 recalculated_index = 4
 updateClauseIndx_score_map() clause_index = 5 recalculated_index = 5
 deleteLearntClauseFromWatches() clause_index = 5 recalculated_index = 5
 unmarkAntecedentForVariable() clause_index = 5 recalculated_index = 5
 updateClauseIndx_score_map() clause_index = 6 recalculated_index = 6
 deleteLearntClauseFromWatches() clause_index = 6 recalculated_index = 6
 unmarkAntecedentForVariable() clause_index = 6 recalculated_index = 6
 updateClauseIndx_score_map() clause_index = 7 recalculated_index = 7
 deleteLearntClauseFromWatches() clause_index = 7 recalculated_index = 7
 unmarkAntecedentForVariable() clause_index = 7 recalculated_index = 7
 updateClauseIndx_score_map() clause_index = 8 recalculated_index = 8
 deleteLearntClauseFromWatches() clause_index = 8 recalculated_index = 8
 unmarkAntecedentForVariable() clause_index = 8 recalculated_index = 8
 updateClauseIndx_score_map() clause_index = 9 recalculated_index = 9
 deleteLearntClauseFromWatches() clause_index = 9 recalculated_index = 9
 unmarkAntecedentForVariable() clause_index = 9 recalculated_index = 9
 updateClauseIndx_score_map() clause_index = 10 recalculated_index = 10
 deleteLearntClauseFromWatches() clause_index = 10 recalculated_index = 10
 unmarkAntecedentForVariable() clause_index = 10 recalculated_index = 10
 updateClauseIndx_score_map() clause_index = 11 recalculated_index = 11
 deleteLearntClauseFromWatches() clause_index = 11 recalculated_index = 11
 unmarkAntecedentForVariable() clause_index = 11 recalculated_index = 11
 updateClauseIndx_score_map() clause_index = 12 recalculated_index = 12
 deleteLearntClauseFromWatches() clause_index = 12 recalculated_index = 12
 unmarkAntecedentForVariable() clause_index = 12 recalculated_index = 12
 updateClauseIndx_score_map() clause_index = 13 recalculated_index = 13
 deleteLearntClauseFromWatches() clause_index = 13 recalculated_index = 13
 unmarkAntecedentForVariable() clause_index = 13 recalculated_index = 13
 updateClauseIndx_score_map() clause_index = 14 recalculated_index = 14
 deleteLearntClauseFromWatches() clause_index = 14 recalculated_index = 14
 unmarkAntecedentForVariable() clause_index = 14 recalculated_index = 14
 updateClauseIndx_score_map() clause_index = 15 recalculated_index = 15
 deleteLearntClauseFromWatches() clause_index = 15 recalculated_index = 15
 unmarkAntecedentForVariable() clause_index = 15 recalculated_index = 15
 updateClauseIndx_score_map() clause_index = 16 recalculated_index = 16
 deleteLearntClauseFromWatches() clause_index = 16 recalculated_index = 16
 unmarkAntecedentForVariable() clause_index = 16 recalculated_index = 16
 updateClauseIndx_score_map() clause_index = 17 recalculated_index = 17
 deleteLearntClauseFromWatches() clause_index = 17 recalculated_index = 17
 unmarkAntecedentForVariable() clause_index = 17 recalculated_index = 17
 updateClauseIndx_score_map() clause_index = 18 recalculated_index = 18
 deleteLearntClauseFromWatches() clause_index = 18 recalculated_index = 18
 unmarkAntecedentForVariable() clause_index = 18 recalculated_index = 18
 updateClauseIndx_score_map() clause_index = 19 recalculated_index = 19
 deleteLearntClauseFromWatches() clause_index = 19 recalculated_index = 19
 unmarkAntecedentForVariable() clause_index = 19 recalculated_index = 19
 updateClauseIndx_score_map() clause_index = 20 recalculated_index = 20
 deleteLearntClauseFromWatches() clause_index = 20 recalculated_index = 20
 unmarkAntecedentForVariable() clause_index = 20 recalculated_index = 20
 updateClauseIndx_score_map() clause_index = 21 recalculated_index = 21
 deleteLearntClauseFromWatches() clause_index = 21 recalculated_index = 21
 unmarkAntecedentForVariable() clause_index = 21 recalculated_index = 21
 updateClauseIndx_score_map() clause_index = 22 recalculated_index = 22
 deleteLearntClauseFromWatches() clause_index = 22 recalculated_index = 22
 unmarkAntecedentForVariable() clause_index = 22 recalculated_index = 22
 updateClauseIndx_score_map() clause_index = 23 recalculated_index = 23
 deleteLearntClauseFromWatches() clause_index = 23 recalculated_index = 23
 unmarkAntecedentForVariable() clause_index = 23 recalculated_index = 23
 updateClauseIndx_score_map() clause_index = 24 recalculated_index = 24
 deleteLearntClauseFromWatches() clause_index = 24 recalculated_index = 24
 unmarkAntecedentForVariable() clause_index = 24 recalculated_index = 24
 updateClauseIndx_score_map() clause_index = 25 recalculated_index = 25
 deleteLearntClauseFromWatches() clause_index = 25 recalculated_index = 25
 unmarkAntecedentForVariable() clause_index = 25 recalculated_index = 25
 updateClauseIndx_score_map() clause_index = 26 recalculated_index = 26
 deleteLearntClauseFromWatches() clause_index = 26 recalculated_index = 26
 unmarkAntecedentForVariable() clause_index = 26 recalculated_index = 26
 updateClauseIndx_score_map() clause_index = 27 recalculated_index = 27
 deleteLearntClauseFromWatches() clause_index = 27 recalculated_index = 27
 unmarkAntecedentForVariable() clause_index = 27 recalculated_index = 27
 updateClauseIndx_score_map() clause_index = 28 recalculated_index = 28
 deleteLearntClauseFromWatches() clause_index = 28 recalculated_index = 28
 unmarkAntecedentForVariable() clause_index = 28 recalculated_index = 28
 updateClauseIndx_score_map() clause_index = 29 recalculated_index = 29
 deleteLearntClauseFromWatches() clause_index = 29 recalculated_index = 29
 unmarkAntecedentForVariable() clause_index = 29 recalculated_index = 29
 updateClauseIndx_score_map() clause_index = 30 recalculated_index = 30
 deleteLearntClauseFromWatches() clause_index = 30 recalculated_index = 30
 unmarkAntecedentForVariable() clause_index = 30 recalculated_index = 30
 updateClauseIndx_score_map() clause_index = 31 recalculated_index = 31
 deleteLearntClauseFromWatches() clause_index = 31 recalculated_index = 31
 unmarkAntecedentForVariable() clause_index = 31 recalculated_index = 31
 updateClauseIndx_score_map() clause_index = 32 recalculated_index = 32
 deleteLearntClauseFromWatches() clause_index = 32 recalculated_index = 32
 unmarkAntecedentForVariable() clause_index = 32 recalculated_index = 32
 updateClauseIndx_score_map() clause_index = 33 recalculated_index = 33
 deleteLearntClauseFromWatches() clause_index = 33 recalculated_index = 33
 unmarkAntecedentForVariable() clause_index = 33 recalculated_index = 33
 updateClauseIndx_score_map() clause_index = 34 recalculated_index = 34
 deleteLearntClauseFromWatches() clause_index = 34 recalculated_index = 34
 unmarkAntecedentForVariable() clause_index = 34 recalculated_index = 34
 updateClauseIndx_score_map() clause_index = 35 recalculated_index = 35
 deleteLearntClauseFromWatches() clause_index = 35 recalculated_index = 35
 unmarkAntecedentForVariable() clause_index = 35 recalculated_index = 35
 updateClauseIndx_score_map() clause_index = 36 recalculated_index = 36
 deleteLearntClauseFromWatches() clause_index = 36 recalculated_index = 36
 unmarkAntecedentForVariable() clause_index = 36 recalculated_index = 36
 updateClauseIndx_score_map() clause_index = 37 recalculated_index = 37
 deleteLearntClauseFromWatches() clause_index = 37 recalculated_index = 37
 unmarkAntecedentForVariable() clause_index = 37 recalculated_index = 37
 updateClauseIndx_score_map() clause_index = 38 recalculated_index = 38
 deleteLearntClauseFromWatches() clause_index = 38 recalculated_index = 38
 unmarkAntecedentForVariable() clause_index = 38 recalculated_index = 38
 updateClauseIndx_score_map() clause_index = 39 recalculated_index = 39
 deleteLearntClauseFromWatches() clause_index = 39 recalculated_index = 39
 unmarkAntecedentForVariable() clause_index = 39 recalculated_index = 39
 updateClauseIndx_score_map() clause_index = 40 recalculated_index = 40
 deleteLearntClauseFromWatches() clause_index = 40 recalculated_index = 40
 unmarkAntecedentForVariable() clause_index = 40 recalculated_index = 40
 updateClauseIndx_score_map() clause_index = 41 recalculated_index = 41
 deleteLearntClauseFromWatches() clause_index = 41 recalculated_index = 41
 unmarkAntecedentForVariable() clause_index = 41 recalculated_index = 41
 updateClauseIndx_score_map() clause_index = 42 recalculated_index = 42
 deleteLearntClauseFromWatches() clause_index = 42 recalculated_index = 42
 unmarkAntecedentForVariable() clause_index = 42 recalculated_index = 42
 updateClauseIndx_score_map() clause_index = 43 recalculated_index = 43
 deleteLearntClauseFromWatches() clause_index = 43 recalculated_index = 43
 unmarkAntecedentForVariable() clause_index = 43 recalculated_index = 43
 updateClauseIndx_score_map() clause_index = 44 recalculated_index = 44
 deleteLearntClauseFromWatches() clause_index = 44 recalculated_index = 44
 unmarkAntecedentForVariable() clause_index = 44 recalculated_index = 44
 updateClauseIndx_score_map() clause_index = 45 recalculated_index = 45
 deleteLearntClauseFromWatches() clause_index = 45 recalculated_index = 45
 unmarkAntecedentForVariable() clause_index = 45 recalculated_index = 45
 updateClauseIndx_score_map() clause_index = 46 recalculated_index = 46
 deleteLearntClauseFromWatches() clause_index = 46 recalculated_index = 46
 unmarkAntecedentForVariable() clause_index = 46 recalculated_index = 46
 updateClauseIndx_score_map() clause_index = 47 recalculated_index = 47
 deleteLearntClauseFromWatches() clause_index = 47 recalculated_index = 47
 unmarkAntecedentForVariable() clause_index = 47 recalculated_index = 47
 updateClauseIndx_score_map() clause_index = 48 recalculated_index = 48
 deleteLearntClauseFromWatches() clause_index = 48 recalculated_index = 48
 unmarkAntecedentForVariable() clause_index = 48 recalculated_index = 48
 updateClauseIndx_score_map() clause_index = 49 recalculated_index = 49
 deleteLearntClauseFromWatches() clause_index = 49 recalculated_index = 49
 unmarkAntecedentForVariable() clause_index = 49 recalculated_index = 49
 updateClauseIndx_score_map() clause_index = 50 recalculated_index = 50
 deleteLearntClauseFromWatches() clause_index = 50 recalculated_index = 50
 unmarkAntecedentForVariable() clause_index = 50 recalculated_index = 50
 updateClauseIndx_score_map() clause_index = 51 recalculated_index = 51
 deleteLearntClauseFromWatches() clause_index = 51 recalculated_index = 51
 unmarkAntecedentForVariable() clause_index = 51 recalculated_index = 51
 updateClauseIndx_score_map() clause_index = 52 recalculated_index = 52
 deleteLearntClauseFromWatches() clause_index = 52 recalculated_index = 52
 unmarkAntecedentForVariable() clause_index = 52 recalculated_index = 52
 updateClauseIndx_score_map() clause_index = 53 recalculated_index = 53
 deleteLearntClauseFromWatches() clause_index = 53 recalculated_index = 53
 unmarkAntecedentForVariable() clause_index = 53 recalculated_index = 53
 updateClauseIndx_score_map() clause_index = 54 recalculated_index = 54
 deleteLearntClauseFromWatches() clause_index = 54 recalculated_index = 54
 unmarkAntecedentForVariable() clause_index = 54 recalculated_index = 54
 updateClauseIndx_score_map() clause_index = 55 recalculated_index = 55
 deleteLearntClauseFromWatches() clause_index = 55 recalculated_index = 55
 unmarkAntecedentForVariable() clause_index = 55 recalculated_index = 55
 updateClauseIndx_score_map() clause_index = 56 recalculated_index = 56
 deleteLearntClauseFromWatches() clause_index = 56 recalculated_index = 56
 unmarkAntecedentForVariable() clause_index = 56 recalculated_index = 56
 updateClauseIndx_score_map() clause_index = 57 recalculated_index = 57
 deleteLearntClauseFromWatches() clause_index = 57 recalculated_index = 57
 unmarkAntecedentForVariable() clause_index = 57 recalculated_index = 57
 updateClauseIndx_score_map() clause_index = 58 recalculated_index = 58
 deleteLearntClauseFromWatches() clause_index = 58 recalculated_index = 58
 unmarkAntecedentForVariable() clause_index = 58 recalculated_index = 58
 updateClauseIndx_score_map() clause_index = 59 recalculated_index = 59
 deleteLearntClauseFromWatches() clause_index = 59 recalculated_index = 59
 unmarkAntecedentForVariable() clause_index = 59 recalculated_index = 59
 updateClauseIndx_score_map() clause_index = 60 recalculated_index = 60
 deleteLearntClauseFromWatches() clause_index = 60 recalculated_index = 60
 unmarkAntecedentForVariable() clause_index = 60 recalculated_index = 60
 updateClauseIndx_score_map() clause_index = 61 recalculated_index = 61
 deleteLearntClauseFromWatches() clause_index = 61 recalculated_index = 61
 unmarkAntecedentForVariable() clause_index = 61 recalculated_index = 61
 updateClauseIndx_score_map() clause_index = 62 recalculated_index = 62
 deleteLearntClauseFromWatches() clause_index = 62 recalculated_index = 62
 unmarkAntecedentForVariable() clause_index = 62 recalculated_index = 62
 updateClauseIndx_score_map() clause_index = 63 recalculated_index = 63
 deleteLearntClauseFromWatches() clause_index = 63 recalculated_index = 63
 unmarkAntecedentForVariable() clause_index = 63 recalculated_index = 63
 updateClauseIndx_score_map() clause_index = 64 recalculated_index = 64
 deleteLearntClauseFromWatches() clause_index = 64 recalculated_index = 64
 unmarkAntecedentForVariable() clause_index = 64 recalculated_index = 64
 updateClauseIndx_score_map() clause_index = 65 recalculated_index = 65
 deleteLearntClauseFromWatches() clause_index = 65 recalculated_index = 65
 unmarkAntecedentForVariable() clause_index = 65 recalculated_index = 65
 updateClauseIndx_score_map() clause_index = 66 recalculated_index = 66
 deleteLearntClauseFromWatches() clause_index = 66 recalculated_index = 66
 unmarkAntecedentForVariable() clause_index = 66 recalculated_index = 66
 updateClauseIndx_score_map() clause_index = 67 recalculated_index = 67
 deleteLearntClauseFromWatches() clause_index = 67 recalculated_index = 67
 unmarkAntecedentForVariable() clause_index = 67 recalculated_index = 67
 updateClauseIndx_score_map() clause_index = 68 recalculated_index = 68
 deleteLearntClauseFromWatches() clause_index = 68 recalculated_index = 68
 unmarkAntecedentForVariable() clause_index = 68 recalculated_index = 68
 updateClauseIndx_score_map() clause_index = 69 recalculated_index = 69
 deleteLearntClauseFromWatches() clause_index = 69 recalculated_index = 69
 unmarkAntecedentForVariable() clause_index = 69 recalculated_index = 69
 updateClauseIndx_score_map() clause_index = 70 recalculated_index = 70
 deleteLearntClauseFromWatches() clause_index = 70 recalculated_index = 70
 unmarkAntecedentForVariable() clause_index = 70 recalculated_index = 70
 updateClauseIndx_score_map() clause_index = 71 recalculated_index = 71
 deleteLearntClauseFromWatches() clause_index = 71 recalculated_index = 71
 unmarkAntecedentForVariable() clause_index = 71 recalculated_index = 71
 updateClauseIndx_score_map() clause_index = 72 recalculated_index = 72
 deleteLearntClauseFromWatches() clause_index = 72 recalculated_index = 72
 unmarkAntecedentForVariable() clause_index = 72 recalculated_index = 72
 updateClauseIndx_score_map() clause_index = 73 recalculated_index = 73
 deleteLearntClauseFromWatches() clause_index = 73 recalculated_index = 73
 unmarkAntecedentForVariable() clause_index = 73 recalculated_index = 73
 updateClauseIndx_score_map() clause_index = 74 recalculated_index = 74
 deleteLearntClauseFromWatches() clause_index = 74 recalculated_index = 74
 unmarkAntecedentForVariable() clause_index = 74 recalculated_index = 74
 updateClauseIndx_score_map() clause_index = 75 recalculated_index = 75
 deleteLearntClauseFromWatches() clause_index = 75 recalculated_index = 75
 unmarkAntecedentForVariable() clause_index = 75 recalculated_index = 75
 updateClauseIndx_score_map() clause_index = 76 recalculated_index = 76
 deleteLearntClauseFromWatches() clause_index = 76 recalculated_index = 76
 unmarkAntecedentForVariable() clause_index = 76 recalculated_index = 76
 updateClauseIndx_score_map() clause_index = 77 recalculated_index = 77
 deleteLearntClauseFromWatches() clause_index = 77 recalculated_index = 77
 unmarkAntecedentForVariable() clause_index = 77 recalculated_index = 77
 updateClauseIndx_score_map() clause_index = 78 recalculated_index = 78
 deleteLearntClauseFromWatches() clause_index = 78 recalculated_index = 78
 unmarkAntecedentForVariable() clause_index = 78 recalculated_index = 78
 updateClauseIndx_score_map() clause_index = 79 recalculated_index = 79
 deleteLearntClauseFromWatches() clause_index = 79 recalculated_index = 79
 unmarkAntecedentForVariable() clause_index = 79 recalculated_index = 79
 updateClauseIndx_score_map() clause_index = 80 recalculated_index = 80
 deleteLearntClauseFromWatches() clause_index = 80 recalculated_index = 80
 unmarkAntecedentForVariable() clause_index = 80 recalculated_index = 80
 updateClauseIndx_score_map() clause_index = 81 recalculated_index = 81
 deleteLearntClauseFromWatches() clause_index = 81 recalculated_index = 81
 unmarkAntecedentForVariable() clause_index = 81 recalculated_index = 81
 updateClauseIndx_score_map() clause_index = 82 recalculated_index = 82
 deleteLearntClauseFromWatches() clause_index = 82 recalculated_index = 82
 unmarkAntecedentForVariable() clause_index = 82 recalculated_index = 82
 updateClauseIndx_score_map() clause_index = 83 recalculated_index = 83
 deleteLearntClauseFromWatches() clause_index = 83 recalculated_index = 83
 unmarkAntecedentForVariable() clause_index = 83 recalculated_index = 83
 updateClauseIndx_score_map() clause_index = 84 recalculated_index = 84
 deleteLearntClauseFromWatches() clause_index = 84 recalculated_index = 84
 unmarkAntecedentForVariable() clause_index = 84 recalculated_index = 84
 updateClauseIndx_score_map() clause_index = 85 recalculated_index = 85
 deleteLearntClauseFromWatches() clause_index = 85 recalculated_index = 85
 unmarkAntecedentForVariable() clause_index = 85 recalculated_index = 85
 updateClauseIndx_score_map() clause_index = 86 recalculated_index = 86
 deleteLearntClauseFromWatches() clause_index = 86 recalculated_index = 86
 unmarkAntecedentForVariable() clause_index = 86 recalculated_index = 86
 updateClauseIndx_score_map() clause_index = 87 recalculated_index = 87
 deleteLearntClauseFromWatches() clause_index = 87 recalculated_index = 87
 unmarkAntecedentForVariable() clause_index = 87 recalculated_index = 87
 updateClauseIndx_score_map() clause_index = 88 recalculated_index = 88
 deleteLearntClauseFromWatches() clause_index = 88 recalculated_index = 88
 unmarkAntecedentForVariable() clause_index = 88 recalculated_index = 88
 updateClauseIndx_score_map() clause_index = 89 recalculated_index = 89
 deleteLearntClauseFromWatches() clause_index = 89 recalculated_index = 89
 unmarkAntecedentForVariable() clause_index = 89 recalculated_index = 89
 updateClauseIndx_score_map() clause_index = 90 recalculated_index = 90
 deleteLearntClauseFromWatches() clause_index = 90 recalculated_index = 90
 unmarkAntecedentForVariable() clause_index = 90 recalculated_index = 90
 updateClauseIndx_score_map() clause_index = 91 recalculated_index = 91
 deleteLearntClauseFromWatches() clause_index = 91 recalculated_index = 91
 unmarkAntecedentForVariable() clause_index = 91 recalculated_index = 91
 updateClauseIndx_score_map() clause_index = 92 recalculated_index = 92
 deleteLearntClauseFromWatches() clause_index = 92 recalculated_index = 92
 unmarkAntecedentForVariable() clause_index = 92 recalculated_index = 92
 updateClauseIndx_score_map() clause_index = 93 recalculated_index = 93
 deleteLearntClauseFromWatches() clause_index = 93 recalculated_index = 93
 unmarkAntecedentForVariable() clause_index = 93 recalculated_index = 93
 updateClauseIndx_score_map() clause_index = 94 recalculated_index = 94
 deleteLearntClauseFromWatches() clause_index = 94 recalculated_index = 94
 unmarkAntecedentForVariable() clause_index = 94 recalculated_index = 94
 updateClauseIndx_score_map() clause_index = 95 recalculated_index = 95
 deleteLearntClauseFromWatches() clause_index = 95 recalculated_index = 95
 unmarkAntecedentForVariable() clause_index = 95 recalculated_index = 95
 updateClauseIndx_score_map() clause_index = 96 recalculated_index = 96
 deleteLearntClauseFromWatches() clause_index = 96 recalculated_index = 96
 unmarkAntecedentForVariable() clause_index = 96 recalculated_index = 96
 updateClauseIndx_score_map() clause_index = 97 recalculated_index = 97
 deleteLearntClauseFromWatches() clause_index = 97 recalculated_index = 97
 unmarkAntecedentForVariable() clause_index = 97 recalculated_index = 97
 updateClauseIndx_score_map() clause_index = 98 recalculated_index = 98
 deleteLearntClauseFromWatches() clause_index = 98 recalculated_index = 98
 unmarkAntecedentForVariable() clause_index = 98 recalculated_index = 98
 updateClauseIndx_score_map() clause_index = 99 recalculated_index = 99
 deleteLearntClauseFromWatches() clause_index = 99 recalculated_index = 99
 unmarkAntecedentForVariable() clause_index = 99 recalculated_index = 99
 updateClauseIndx_score_map() clause_index = 100 recalculated_index = 100
 deleteLearntClauseFromWatches() clause_index = 100 recalculated_index = 100
 unmarkAntecedentForVariable() clause_index = 100 recalculated_index = 100
 updateClauseIndx_score_map() clause_index = 101 recalculated_index = 101
 deleteLearntClauseFromWatches() clause_index = 101 recalculated_index = 101
 unmarkAntecedentForVariable() clause_index = 101 recalculated_index = 101
 updateClauseIndx_score_map() clause_index = 102 recalculated_index = 102
 deleteLearntClauseFromWatches() clause_index = 102 recalculated_index = 102
 unmarkAntecedentForVariable() clause_index = 102 recalculated_index = 102
 updateClauseIndx_score_map() clause_index = 103 recalculated_index = 103
 deleteLearntClauseFromWatches() clause_index = 103 recalculated_index = 103
 unmarkAntecedentForVariable() clause_index = 103 recalculated_index = 103
 updateClauseIndx_score_map() clause_index = 104 recalculated_index = 104
 deleteLearntClauseFromWatches() clause_index = 104 recalculated_index = 104
 unmarkAntecedentForVariable() clause_index = 104 recalculated_index = 104
 updateClauseIndx_score_map() clause_index = 105 recalculated_index = 105
 deleteLearntClauseFromWatches() clause_index = 105 recalculated_index = 105
 unmarkAntecedentForVariable() clause_index = 105 recalculated_index = 105
 updateClauseIndx_score_map() clause_index = 106 recalculated_index = 106
 deleteLearntClauseFromWatches() clause_index = 106 recalculated_index = 106
 unmarkAntecedentForVariable() clause_index = 106 recalculated_index = 106
 updateClauseIndx_score_map() clause_index = 107 recalculated_index = 107
 deleteLearntClauseFromWatches() clause_index = 107 recalculated_index = 107
 unmarkAntecedentForVariable() clause_index = 107 recalculated_index = 107
 updateClauseIndx_score_map() clause_index = 108 recalculated_index = 108
 deleteLearntClauseFromWatches() clause_index = 108 recalculated_index = 108
 unmarkAntecedentForVariable() clause_index = 108 recalculated_index = 108
 updateClauseIndx_score_map() clause_index = 109 recalculated_index = 109
 deleteLearntClauseFromWatches() clause_index = 109 recalculated_index = 109
 unmarkAntecedentForVariable() clause_index = 109 recalculated_index = 109
 updateClauseIndx_score_map() clause_index = 110 recalculated_index = 110
 deleteLearntClauseFromWatches() clause_index = 110 recalculated_index = 110
 unmarkAntecedentForVariable() clause_index = 110 recalculated_index = 110
 updateClauseIndx_score_map() clause_index = 111 recalculated_index = 111
 deleteLearntClauseFromWatches() clause_index = 111 recalculated_index = 111
 unmarkAntecedentForVariable() clause_index = 111 recalculated_index = 111
 updateClauseIndx_score_map() clause_index = 112 recalculated_index = 112
 deleteLearntClauseFromWatches() clause_index = 112 recalculated_index = 112
 unmarkAntecedentForVariable() clause_index = 112 recalculated_index = 112
 updateClauseIndx_score_map() clause_index = 113 recalculated_index = 113
 deleteLearntClauseFromWatches() clause_index = 113 recalculated_index = 113
 unmarkAntecedentForVariable() clause_index = 113 recalculated_index = 113
 updateClauseIndx_score_map() clause_index = 114 recalculated_index = 114
 deleteLearntClauseFromWatches() clause_index = 114 recalculated_index = 114
 unmarkAntecedentForVariable() clause_index = 114 recalculated_index = 114
 updateClauseIndx_score_map() clause_index = 115 recalculated_index = 115
 deleteLearntClauseFromWatches() clause_index = 115 recalculated_index = 115
 unmarkAntecedentForVariable() clause_index = 115 recalculated_index = 115
 updateClauseIndx_score_map() clause_index = 116 recalculated_index = 116
 deleteLearntClauseFromWatches() clause_index = 116 recalculated_index = 116
 unmarkAntecedentForVariable() clause_index = 116 recalculated_index = 116
 updateClauseIndx_score_map() clause_index = 117 recalculated_index = 117
 deleteLearntClauseFromWatches() clause_index = 117 recalculated_index = 117
 unmarkAntecedentForVariable() clause_index = 117 recalculated_index = 117
 updateClauseIndx_score_map() clause_index = 118 recalculated_index = 118
 deleteLearntClauseFromWatches() clause_index = 118 recalculated_index = 118
 unmarkAntecedentForVariable() clause_index = 118 recalculated_index = 118
 updateClauseIndx_score_map() clause_index = 119 recalculated_index = 119
 deleteLearntClauseFromWatches() clause_index = 119 recalculated_index = 119
 unmarkAntecedentForVariable() clause_index = 119 recalculated_index = 119
 updateClauseIndx_score_map() clause_index = 120 recalculated_index = 120
 deleteLearntClauseFromWatches() clause_index = 120 recalculated_index = 120
 unmarkAntecedentForVariable() clause_index = 120 recalculated_index = 120
 updateClauseIndx_score_map() clause_index = 121 recalculated_index = 121
 deleteLearntClauseFromWatches() clause_index = 121 recalculated_index = 121
 unmarkAntecedentForVariable() clause_index = 121 recalculated_index = 121
 updateClauseIndx_score_map() clause_index = 122 recalculated_index = 122
 deleteLearntClauseFromWatches() clause_index = 122 recalculated_index = 122
 unmarkAntecedentForVariable() clause_index = 122 recalculated_index = 122
 updateClauseIndx_score_map() clause_index = 123 recalculated_index = 123
 deleteLearntClauseFromWatches() clause_index = 123 recalculated_index = 123
 unmarkAntecedentForVariable() clause_index = 123 recalculated_index = 123
 updateClauseIndx_score_map() clause_index = 124 recalculated_index = 124
 deleteLearntClauseFromWatches() clause_index = 124 recalculated_index = 124
 unmarkAntecedentForVariable() clause_index = 124 recalculated_index = 124
 updateClauseIndx_score_map() clause_index = 125 recalculated_index = 125
 deleteLearntClauseFromWatches() clause_index = 125 recalculated_index = 125
 unmarkAntecedentForVariable() clause_index = 125 recalculated_index = 125
 updateClauseIndx_score_map() clause_index = 126 recalculated_index = 126
 deleteLearntClauseFromWatches() clause_index = 126 recalculated_index = 126
 unmarkAntecedentForVariable() clause_index = 126 recalculated_index = 126
 updateClauseIndx_score_map() clause_index = 127 recalculated_index = 127
 deleteLearntClauseFromWatches() clause_index = 127 recalculated_index = 127
 unmarkAntecedentForVariable() clause_index = 127 recalculated_index = 127
 updateClauseIndx_score_map() clause_index = 128 recalculated_index = 128
 deleteLearntClauseFromWatches() clause_index = 128 recalculated_index = 128
 unmarkAntecedentForVariable() clause_index = 128 recalculated_index = 128
 updateClauseIndx_score_map() clause_index = 129 recalculated_index = 129
 deleteLearntClauseFromWatches() clause_index = 129 recalculated_index = 129
 unmarkAntecedentForVariable() clause_index = 129 recalculated_index = 129
 updateClauseIndx_score_map() clause_index = 130 recalculated_index = 130
 deleteLearntClauseFromWatches() clause_index = 130 recalculated_index = 130
 unmarkAntecedentForVariable() clause_index = 130 recalculated_index = 130
 updateClauseIndx_score_map() clause_index = 131 recalculated_index = 131
 deleteLearntClauseFromWatches() clause_index = 131 recalculated_index = 131
 unmarkAntecedentForVariable() clause_index = 131 recalculated_index = 131
 updateClauseIndx_score_map() clause_index = 132 recalculated_index = 132
 deleteLearntClauseFromWatches() clause_index = 132 recalculated_index = 132
 unmarkAntecedentForVariable() clause_index = 132 recalculated_index = 132
 updateClauseIndx_score_map() clause_index = 133 recalculated_index = 133
 deleteLearntClauseFromWatches() clause_index = 133 recalculated_index = 133
 unmarkAntecedentForVariable() clause_index = 133 recalculated_index = 133
 updateClauseIndx_score_map() clause_index = 134 recalculated_index = 134
 deleteLearntClauseFromWatches() clause_index = 134 recalculated_index = 134
 unmarkAntecedentForVariable() clause_index = 134 recalculated_index = 134
 updateClauseIndx_score_map() clause_index = 135 recalculated_index = 135
 deleteLearntClauseFromWatches() clause_index = 135 recalculated_index = 135
 unmarkAntecedentForVariable() clause_index = 135 recalculated_index = 135
 updateClauseIndx_score_map() clause_index = 136 recalculated_index = 136
 deleteLearntClauseFromWatches() clause_index = 136 recalculated_index = 136
 unmarkAntecedentForVariable() clause_index = 136 recalculated_index = 136
 updateClauseIndx_score_map() clause_index = 137 recalculated_index = 137
 deleteLearntClauseFromWatches() clause_index = 137 recalculated_index = 137
 unmarkAntecedentForVariable() clause_index = 137 recalculated_index = 137
 updateClauseIndx_score_map() clause_index = 138 recalculated_index = 138
 deleteLearntClauseFromWatches() clause_index = 138 recalculated_index = 138
 unmarkAntecedentForVariable() clause_index = 138 recalculated_index = 138
 updateClauseIndx_score_map() clause_index = 139 recalculated_index = 139
 deleteLearntClauseFromWatches() clause_index = 139 recalculated_index = 139
 unmarkAntecedentForVariable() clause_index = 139 recalculated_index = 139
 updateClauseIndx_score_map() clause_index = 140 recalculated_index = 140
 deleteLearntClauseFromWatches() clause_index = 140 recalculated_index = 140
 unmarkAntecedentForVariable() clause_index = 140 recalculated_index = 140
 updateClauseIndx_score_map() clause_index = 141 recalculated_index = 141
 deleteLearntClauseFromWatches() clause_index = 141 recalculated_index = 141
 unmarkAntecedentForVariable() clause_index = 141 recalculated_index = 141
 updateClauseIndx_score_map() clause_index = 142 recalculated_index = 142
 deleteLearntClauseFromWatches() clause_index = 142 recalculated_index = 142
 unmarkAntecedentForVariable() clause_index = 142 recalculated_index = 142
 updateClauseIndx_score_map() clause_index = 143 recalculated_index = 143
 deleteLearntClauseFromWatches() clause_index = 143 recalculated_index = 143
 unmarkAntecedentForVariable() clause_index = 143 recalculated_index = 143
 updateClauseIndx_score_map() clause_index = 144 recalculated_index = 144
 deleteLearntClauseFromWatches() clause_index = 144 recalculated_index = 144
 unmarkAntecedentForVariable() clause_index = 144 recalculated_index = 144
 updateClauseIndx_score_map() clause_index = 145 recalculated_index = 145
 deleteLearntClauseFromWatches() clause_index = 145 recalculated_index = 145
 unmarkAntecedentForVariable() clause_index = 145 recalculated_index = 145
 updateClauseIndx_score_map() clause_index = 146 recalculated_index = 146
 deleteLearntClauseFromWatches() clause_index = 146 recalculated_index = 146
 unmarkAntecedentForVariable() clause_index = 146 recalculated_index = 146
 updateClauseIndx_score_map() clause_index = 147 recalculated_index = 147
 deleteLearntClauseFromWatches() clause_index = 147 recalculated_index = 147
 unmarkAntecedentForVariable() clause_index = 147 recalculated_index = 147
 updateClauseIndx_score_map() clause_index = 148 recalculated_index = 148
 deleteLearntClauseFromWatches() clause_index = 148 recalculated_index = 148
 unmarkAntecedentForVariable() clause_index = 148 recalculated_index = 148
 updateClauseIndx_score_map() clause_index = 149 recalculated_index = 149
 deleteLearntClauseFromWatches() clause_index = 149 recalculated_index = 149
 unmarkAntecedentForVariable() clause_index = 149 recalculated_index = 149
 updateClauseIndx_score_map() clause_index = 150 recalculated_index = 150
 deleteLearntClauseFromWatches() clause_index = 150 recalculated_index = 150
 unmarkAntecedentForVariable() clause_index = 150 recalculated_index = 150
 updateClauseIndx_score_map() clause_index = 151 recalculated_index = 151
 deleteLearntClauseFromWatches() clause_index = 151 recalculated_index = 151
 unmarkAntecedentForVariable() clause_index = 151 recalculated_index = 151
 updateClauseIndx_score_map() clause_index = 152 recalculated_index = 152
 deleteLearntClauseFromWatches() clause_index = 152 recalculated_index = 152
 unmarkAntecedentForVariable() clause_index = 152 recalculated_index = 152
 updateClauseIndx_score_map() clause_index = 153 recalculated_index = 153
 deleteLearntClauseFromWatches() clause_index = 153 recalculated_index = 153
 unmarkAntecedentForVariable() clause_index = 153 recalculated_index = 153
 updateClauseIndx_score_map() clause_index = 154 recalculated_index = 154
 deleteLearntClauseFromWatches() clause_index = 154 recalculated_index = 154
 unmarkAntecedentForVariable() clause_index = 154 recalculated_index = 154
 updateClauseIndx_score_map() clause_index = 155 recalculated_index = 155
 deleteLearntClauseFromWatches() clause_index = 155 recalculated_index = 155
 unmarkAntecedentForVariable() clause_index = 155 recalculated_index = 155
 updateClauseIndx_score_map() clause_index = 156 recalculated_index = 156
 deleteLearntClauseFromWatches() clause_index = 156 recalculated_index = 156
 unmarkAntecedentForVariable() clause_index = 156 recalculated_index = 156
 updateClauseIndx_score_map() clause_index = 157 recalculated_index = 157
 deleteLearntClauseFromWatches() clause_index = 157 recalculated_index = 157
 unmarkAntecedentForVariable() clause_index = 157 recalculated_index = 157
 updateClauseIndx_score_map() clause_index = 158 recalculated_index = 158
 deleteLearntClauseFromWatches() clause_index = 158 recalculated_index = 158
 unmarkAntecedentForVariable() clause_index = 158 recalculated_index = 158
 updateClauseIndx_score_map() clause_index = 159 recalculated_index = 159
 deleteLearntClauseFromWatches() clause_index = 159 recalculated_index = 159
 unmarkAntecedentForVariable() clause_index = 159 recalculated_index = 159
 updateClauseIndx_score_map() clause_index = 160 recalculated_index = 160
 deleteLearntClauseFromWatches() clause_index = 160 recalculated_index = 160
 unmarkAntecedentForVariable() clause_index = 160 recalculated_index = 160
 updateClauseIndx_score_map() clause_index = 161 recalculated_index = 161
 deleteLearntClauseFromWatches() clause_index = 161 recalculated_index = 161
 unmarkAntecedentForVariable() clause_index = 161 recalculated_index = 161
 updateClauseIndx_score_map() clause_index = 162 recalculated_index = 162
 deleteLearntClauseFromWatches() clause_index = 162 recalculated_index = 162
 unmarkAntecedentForVariable() clause_index = 162 recalculated_index = 162
 updateClauseIndx_score_map() clause_index = 163 recalculated_index = 163
 deleteLearntClauseFromWatches() clause_index = 163 recalculated_index = 163
 unmarkAntecedentForVariable() clause_index = 163 recalculated_index = 163
 updateClauseIndx_score_map() clause_index = 164 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 164 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 164 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 165 recalculated_index = 164
 deleteLearntClauseFromWatches() clause_index = 165 recalculated_index = 164
 unmarkAntecedentForVariable() clause_index = 165 recalculated_index = 164
 updateClauseIndx_score_map() clause_index = 166 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 166 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 166 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 167 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 167 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 167 recalculated_index = -1
 updateClauseIndx_score_map() clause_index = 168 recalculated_index = -1
 deleteLearntClauseFromWatches() clause_index = 168 recalculated_index = -1
 unmarkAntecedentForVariable() clause_index = 168 recalculated_index = -1
errasing from cnf of size = 169
 clauses_to_delete[i] = 164clauses_to_delete[i]-i = 164
errasing from cnf of size = 168
 clauses_to_delete[i] = 166clauses_to_delete[i]-i = 165
errasing from cnf of size = 167
 clauses_to_delete[i] = 167clauses_to_delete[i]-i = 165
errasing from cnf of size = 166
 clauses_to_delete[i] = 168clauses_to_delete[i]-i = 165
 get_dynamic_restart_backtracking_level() 
backtracking to level: 4
backtrack
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
54 
0 
56 
0 
-58 
0 
60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
0 
93 
0 
0 
0 
0 
0 
0 
0 
92 @ 4
dynamic restart over
antecedents and cnf state after dynamic restart
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  54;	rev_ant[ 54 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  18;	rev_ant[ 18 ] 	= 	{20, 73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  164;	rev_ant[ 164 ] 	= 	{59, 92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 54 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (59,92,)
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
BCP
qhead = 14 trail-size = 15
propagating 92
next_not_false
(7 -92 97 ) now watched by 7
next_not_false
propagating: 
Clause Index = 47 is antecedent for literal 92
41 @ 4
antecedent[41] = 47
other_watch literal is41
new implication <- 41
 updateLBDscore() clause = 00E5F4A0
propagating 41
BCP is over
decide
reset_iterators - where = 20
m_Score2Vars_it->first = 20
-80 @ 5
BCP
qhead = 16 trail-size = 17
propagating -80
next_not_false
propagating: 
Clause Index = 23 is antecedent for literal -80
14 @ 5
antecedent[14] = 23
other_watch literal is14
clause 23is already antecedent of var 14
new implication <- 14
 updateLBDscore() clause = 00E5EF28
propagating 14
next_not_false
clause is sat
BCP is over
decide
67 @ 6
BCP
qhead = 18 trail-size = 19
propagating 67
BCP is over
decide
95 @ 7
BCP
qhead = 19 trail-size = 20
propagating 95
next_not_false
propagating: 
Clause Index = 35 is antecedent for literal 95
55 @ 7
antecedent[55] = 35
other_watch literal is55
clause 35is already antecedent of var 55
new implication <- 55
 updateLBDscore() clause = 00E5EF60
propagating 55
next_not_false
propagating: 
Clause Index = 52 is antecedent for literal 55
48 @ 7
antecedent[48] = 52
other_watch literal is48
clause 52is already antecedent of var 48
new implication <- 48
 updateLBDscore() clause = 00E5F008
propagating 48
BCP is over
decide
-36 @ 8
BCP
qhead = 22 trail-size = 23
propagating -36
next_not_false
propagating: 
Clause Index = 10 is antecedent for literal -36
97 @ 8
antecedent[97] = 10
other_watch literal is97
clause 10is already antecedent of var 97
new implication <- 97
 updateLBDscore() clause = 00E5F4A0
propagating 97
next_not_false
clause is sat
BCP is over
decide
84 @ 9
BCP
qhead = 24 trail-size = 25
propagating 84
BCP is over
decide
-74 @ 10
BCP
qhead = 25 trail-size = 26
propagating -74
BCP is over
decide
-42 @ 11
BCP
qhead = 26 trail-size = 27
propagating -42
BCP is over
decide
-46 @ 12
BCP
qhead = 27 trail-size = 28
propagating -46
next_not_false
propagating: 
Clause Index = 79 is antecedent for literal -46
-64 @ 12
antecedent[64] = 79
other_watch literal is-64
clause 79is already antecedent of var 64
new implication <- -64
 updateLBDscore() clause = 00E5F008
propagating -64
BCP is over
decide
20 @ 13
BCP
qhead = 29 trail-size = 30
propagating 20
next_not_false
propagating: 
Clause Index = 37 is antecedent for literal 20
32 @ 13
antecedent[32] = 37
other_watch literal is32
clause 37is already antecedent of var 32
new implication <- 32
 updateLBDscore() clause = 00E5F158
propagating 32
next_not_false
clause is sat
BCP is over
decide
59 @ 14
BCP
qhead = 31 trail-size = 32
propagating 59
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 16 is antecedent for literal 59
-40 @ 14
antecedent[40] = 16
other_watch literal is-40
clause 16is already antecedent of var 40
new implication <- -40
 updateLBDscore() clause = 00E5F158
propagating -40
next_not_false
clause is sat
BCP is over
decide
-49 @ 15
BCP
qhead = 33 trail-size = 34
propagating -49
next_not_false
propagating: 
Clause Index = 11 is antecedent for literal -49
28 @ 15
antecedent[28] = 11
other_watch literal is28
clause 11is already antecedent of var 28
new implication <- 28
 updateLBDscore() clause = 00E5F158
propagating 28
next_not_false
propagating: 
Clause Index = 12 is antecedent for literal 28
51 @ 15
antecedent[51] = 12
other_watch literal is51
clause 12is already antecedent of var 51
new implication <- 51
 updateLBDscore() clause = 00E5EF60
propagating 51
next_not_false
propagating: 
Clause Index = 59 is antecedent for literal 51
45 @ 15
antecedent[45] = 59
other_watch literal is45
clause 59is already antecedent of var 45
new implication <- 45
 updateLBDscore() clause = 00E5F318
next_not_false
clause is sat
propagating 45
BCP is over
decide
-7 @ 16
BCP
qhead = 37 trail-size = 38
propagating -7
next_not_false
clause is sat
BCP is over
decide
-5 @ 17
BCP
qhead = 38 trail-size = 39
propagating -5
BCP is over
decide
-23 @ 18
BCP
qhead = 39 trail-size = 40
propagating -23
next_not_false
propagating: 
Clause Index = 152 is antecedent for literal -23
2 @ 18
antecedent[2] = 152
other_watch literal is2
clause 152is already antecedent of var 2
new implication <- 2
 updateLBDscore() clause = 00E5EF60
next_not_false
propagating: 
Clause Index = 144 is antecedent for literal -23
-38 @ 18
antecedent[38] = 144
other_watch literal is-38
clause 144is already antecedent of var 38
new implication <- -38
 updateLBDscore() clause = 00E5F008
propagating 2
propagating -38
next_not_false
propagating: 
Clause Index = 57 is antecedent for literal -38
72 @ 18
antecedent[72] = 57
other_watch literal is72
clause 57is already antecedent of var 72
new implication <- 72
 updateLBDscore() clause = 00E5F318
propagating 72
BCP is over
decide
-85 @ 19
BCP
qhead = 43 trail-size = 44
propagating -85
next_not_false
clause is sat
BCP is over
decide
-75 @ 20
BCP
qhead = 44 trail-size = 45
propagating -75
BCP is over
decide
-31 @ 21
BCP
qhead = 45 trail-size = 46
propagating -31
next_not_false
clause is sat
BCP is over
decide
-77 @ 22
BCP
qhead = 46 trail-size = 47
propagating -77
next_not_false
clause is sat
BCP is over
decide
-13 @ 23
BCP
qhead = 47 trail-size = 48
propagating -13
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 54 is antecedent for literal -13
-21 @ 23
antecedent[21] = 54
other_watch literal is-21
clause 54is already antecedent of var 21
new implication <- -21
 updateLBDscore() clause = 00E5F2A8
next_not_false
clause is sat
propagating -21
next_not_false
clause is sat
BCP is over
decide
-50 @ 24
BCP
qhead = 49 trail-size = 50
propagating -50
BCP is over
decide
-3 @ 25
BCP
qhead = 50 trail-size = 51
propagating -3
next_not_false
(3 76 -88 ) now watched by 76
BCP is over
decide
57 @ 26
BCP
qhead = 51 trail-size = 52
propagating 57
next_not_false
propagating: 
Clause Index = 19 is antecedent for literal 57
-73 @ 26
antecedent[73] = 19
other_watch literal is-73
clause 19is already antecedent of var 73
new implication <- -73
 updateLBDscore() clause = 00E5F4A0
next_not_false
(-20 -57 73 ) is conflicting
State: -1 
2 
-3 
4 
-5 
0 
-7 
-8 
0 
0 
0 
0 
-13 
14 
0 
0 
0 
18 
0 
20 
-21 
0 
-23 
0 
0 
-26 
0 
28 
0 
0 
-31 
32 
33 
0 
0 
-36 
0 
-38 
0 
-40 
41 
-42 
0 
0 
45 
-46 
0 
48 
-49 
-50 
51 
-52 
0 
54 
55 
56 
57 
-58 
59 
60 
0 
0 
0 
-64 
0 
0 
67 
0 
0 
0 
0 
72 
-73 
-74 
-75 
0 
-77 
0 
0 
-80 
0 
82 
0 
84 
-85 
0 
0 
0 
0 
90 
0 
92 
93 
0 
95 
0 
97 
0 
0 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  54;	rev_ant[ 54 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  47;	rev_ant[ 47 ] 	= 	{18, 92, 41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  17;	rev_ant[ 17 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  19;	rev_ant[ 19 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  164;	rev_ant[ 164 ] 	= 	{59, 92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,41,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 54 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (59,92,)
u = -73
v = 73
antecedent num = 19
clause 19 = (50 -57 -73 )
deletion times = 13
last deleted indices: {164;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
Learned clause #166. (-20 50 -57 )
 learnt clauses:  60 Backtracking to level 24
backtrack
State: -1 
2 
0 
4 
-5 
0 
-7 
-8 
0 
0 
0 
0 
-13 
14 
0 
0 
0 
18 
0 
20 
-21 
0 
-23 
0 
0 
-26 
0 
28 
0 
0 
-31 
32 
33 
0 
0 
-36 
0 
-38 
0 
-40 
41 
-42 
0 
0 
45 
-46 
0 
48 
-49 
-50 
51 
-52 
0 
54 
55 
56 
0 
-58 
59 
60 
0 
0 
0 
-64 
0 
0 
67 
0 
0 
0 
0 
72 
0 
-74 
-75 
0 
-77 
0 
0 
-80 
0 
82 
0 
84 
-85 
0 
0 
0 
0 
90 
0 
92 
93 
0 
95 
0 
97 
0 
0 
0 
-57 @ 24
BCP
qhead = 50 trail-size = 51
propagating -57
next_not_false
(57 67 -69 ) now watched by 67
next_not_false
clause is sat
BCP is over
decide
reset_iterators - where = 5
m_Score2Vars_it->first = 5
-3 @ 25
BCP
qhead = 51 trail-size = 52
propagating -3
BCP is over
decide
76 @ 26
BCP
qhead = 52 trail-size = 53
propagating 76
next_not_false
propagating: 
Clause Index = 117 is antecedent for literal 76
73 @ 26
antecedent[73] = 117
other_watch literal is73
new implication <- 73
 updateLBDscore() clause = 00E53960
next_not_false
clause is sat
propagating 73
next_not_false
clause is sat
BCP is over
decide
-99 @ 27
BCP
qhead = 54 trail-size = 55
propagating -99
next_not_false
clause is sat
next_not_false
propagating: 
Clause Index = 5 is antecedent for literal -99
83 @ 27
antecedent[83] = 5
other_watch literal is83
clause 5is already antecedent of var 83
new implication <- 83
 updateLBDscore() clause = 00E539D0
propagating 83
next_not_false
propagating: 
Clause Index = 8 is antecedent for literal 83
-70 @ 27
antecedent[70] = 8
other_watch literal is-70
clause 8is already antecedent of var 70
new implication <- -70
 updateLBDscore() clause = 00E539D0
next_not_false
(-56 70 -83 ) is conflicting
State: -1 
2 
-3 
4 
-5 
0 
-7 
-8 
0 
0 
0 
0 
-13 
14 
0 
0 
0 
18 
0 
20 
-21 
0 
-23 
0 
0 
-26 
0 
28 
0 
0 
-31 
32 
33 
0 
0 
-36 
0 
-38 
0 
-40 
41 
-42 
0 
0 
45 
-46 
0 
48 
-49 
-50 
51 
-52 
0 
54 
55 
56 
-57 
-58 
59 
60 
0 
0 
0 
-64 
0 
0 
67 
0 
0 
-70 
0 
72 
73 
-74 
-75 
76 
-77 
0 
0 
-80 
0 
82 
83 
84 
-85 
0 
0 
0 
0 
90 
0 
92 
93 
0 
95 
0 
97 
0 
-99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
165) (-20 50 -57 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  54;	rev_ant[ 54 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  47;	rev_ant[ 47 ] 	= 	{18, 92, 41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  165;	rev_ant[ 165 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  117;	rev_ant[ 117 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[83] =  5;	rev_ant[ 5 ] 	= 	{83, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  164;	rev_ant[ 164 ] 	= 	{59, 92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,41,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 54 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 117 is antesedent for : (73,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (59,92,)
clause 165 is antesedent for : (57,)
u = -70
v = 70
antecedent num = 8
clause 8 = (-33 -70 -83 )
deletion times = 13
last deleted indices: {164;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
165) (-20 50 -57 )
Learned clause #167. (-56 -33 -83 )
 learnt clauses:  61 Backtracking to level 4
backtrack
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
54 
0 
56 
0 
-58 
0 
60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
0 
0 
0 
0 
0 
0 
0 
90 
0 
92 
93 
0 
0 
0 
0 
0 
0 
0 
-83 @ 4
BCP
qhead = 16 trail-size = 17
propagating -83
next_not_false
propagating: 
Clause Index = 6 is antecedent for literal -83
-99 @ 4
antecedent[99] = 6
other_watch literal is-99
clause 6is already antecedent of var 99
new implication <- -99
 updateLBDscore() clause = 00E54370
next_not_false
(-56 83 99 ) is conflicting
State: -1 
0 
0 
4 
0 
0 
0 
-8 
0 
0 
0 
0 
0 
0 
0 
0 
0 
18 
0 
0 
0 
0 
0 
0 
0 
-26 
0 
0 
0 
0 
0 
0 
33 
0 
0 
0 
0 
0 
0 
0 
41 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
-52 
0 
54 
0 
56 
0 
-58 
0 
60 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
82 
-83 
0 
0 
0 
0 
0 
0 
90 
0 
92 
93 
0 
0 
0 
0 
0 
-99 
0 
conflict
BCP is over
analyze
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
165) (-20 50 -57 )
166) (-56 -33 -83 )
Antecedents: 
ant[2] =  152;	rev_ant[ 152 ] 	= 	{2, }
ant[5] =  142;	rev_ant[ 142 ] 	= 	{5, }
ant[9] =  113;	rev_ant[ 113 ] 	= 	{9, }
ant[13] =  55;	rev_ant[ 55 ] 	= 	{13, }
ant[14] =  23;	rev_ant[ 23 ] 	= 	{14, }
ant[17] =  46;	rev_ant[ 46 ] 	= 	{17, 18, }
ant[20] =  9;	rev_ant[ 9 ] 	= 	{20, }
ant[21] =  54;	rev_ant[ 54 ] 	= 	{21, }
ant[22] =  31;	rev_ant[ 31 ] 	= 	{22, }
ant[28] =  11;	rev_ant[ 11 ] 	= 	{28, }
ant[32] =  37;	rev_ant[ 37 ] 	= 	{32, }
ant[33] =  2;	rev_ant[ 2 ] 	= 	{4, 1, 33, }
ant[34] =  28;	rev_ant[ 28 ] 	= 	{34, }
ant[35] =  109;	rev_ant[ 109 ] 	= 	{35, }
ant[36] =  21;	rev_ant[ 21 ] 	= 	{36, 1, 4, }
ant[38] =  144;	rev_ant[ 144 ] 	= 	{38, }
ant[40] =  16;	rev_ant[ 16 ] 	= 	{40, }
ant[41] =  47;	rev_ant[ 47 ] 	= 	{18, 92, 41, }
ant[45] =  59;	rev_ant[ 59 ] 	= 	{45, }
ant[47] =  42;	rev_ant[ 42 ] 	= 	{47, }
ant[48] =  52;	rev_ant[ 52 ] 	= 	{48, 67, }
ant[49] =  14;	rev_ant[ 14 ] 	= 	{49, }
ant[50] =  20;	rev_ant[ 20 ] 	= 	{50, }
ant[51] =  12;	rev_ant[ 12 ] 	= 	{51, }
ant[52] =  160;	rev_ant[ 160 ] 	= 	{52, }
ant[54] =  4;	rev_ant[ 4 ] 	= 	{54, }
ant[55] =  35;	rev_ant[ 35 ] 	= 	{95, 55, }
ant[56] =  3;	rev_ant[ 3 ] 	= 	{56, 1, 33, }
ant[57] =  165;	rev_ant[ 165 ] 	= 	{57, }
ant[58] =  162;	rev_ant[ 162 ] 	= 	{58, 58, }
ant[60] =  30;	rev_ant[ 30 ] 	= 	{90, 60, 26, }
ant[64] =  79;	rev_ant[ 79 ] 	= 	{64, }
ant[67] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[69] =  48;	rev_ant[ 48 ] 	= 	{69, }
ant[70] =  8;	rev_ant[ 8 ] 	= 	{70, }
ant[71] =  148;	rev_ant[ 148 ] 	= 	{71, }
ant[72] =  57;	rev_ant[ 57 ] 	= 	{72, }
ant[73] =  117;	rev_ant[ 117 ] 	= 	{73, }
ant[76] =  39;	rev_ant[ 39 ] 	= 	{76, 93, }
ant[83] =  166;	rev_ant[ 166 ] 	= 	{83, }
ant[84] =  153;	rev_ant[ 153 ] 	= 	{84, }
ant[88] =  98;	rev_ant[ 98 ] 	= 	{88, }
ant[89] =  111;	rev_ant[ 111 ] 	= 	{89, }
ant[90] =  161;	rev_ant[ 161 ] 	= 	{90, 60, 48, 4, }
ant[91] =  108;	rev_ant[ 108 ] 	= 	{91, }
ant[92] =  164;	rev_ant[ 164 ] 	= 	{59, 92, }
ant[93] =  163;	rev_ant[ 163 ] 	= 	{93, 67, }
ant[94] =  43;	rev_ant[ 43 ] 	= 	{94, }
ant[95] =  32;	rev_ant[ 32 ] 	= 	{22, 95, }
ant[97] =  10;	rev_ant[ 10 ] 	= 	{97, 36, }
ant[99] =  6;	rev_ant[ 6 ] 	= 	{99, 83, }
clause 0 is antesedent for : (4,97,)
clause 1 is antesedent for : (8,4,97,)
clause 2 is antesedent for : (4,1,33,)
clause 3 is antesedent for : (56,1,33,)
clause 4 is antesedent for : (54,)
clause 5 is antesedent for : (83,)
clause 6 is antesedent for : (99,83,)
clause 7 is antesedent for : (70,)
clause 8 is antesedent for : (70,)
clause 9 is antesedent for : (20,)
clause 10 is antesedent for : (97,36,)
clause 11 is antesedent for : (28,)
clause 12 is antesedent for : (51,)
clause 13 is antesedent for : (51,)
clause 14 is antesedent for : (49,)
clause 15 is antesedent for : (1,40,)
clause 16 is antesedent for : (40,)
clause 17 is antesedent for : (57,)
clause 18 is antesedent for : (20,73,)
clause 19 is antesedent for : (73,)
clause 20 is antesedent for : (50,)
clause 21 is antesedent for : (36,1,4,)
clause 22 is antesedent for : (54,)
clause 23 is antesedent for : (14,)
clause 24 is antesedent for : (14,)
clause 25 is antesedent for : (80,8,)
clause 26 is antesedent for : (52,13,)
clause 27 is antesedent for : (13,)
clause 28 is antesedent for : (34,)
clause 29 is antesedent for : (34,)
clause 30 is antesedent for : (90,60,26,)
clause 31 is antesedent for : (22,)
clause 32 is antesedent for : (22,95,)
clause 33 is antesedent for : (99,)
clause 34 is antesedent for : (99,)
clause 35 is antesedent for : (95,55,)
clause 36 is antesedent for : (20,)
clause 37 is antesedent for : (32,)
clause 38 is antesedent for : (32,)
clause 39 is antesedent for : (76,93,)
clause 40 is antesedent for : (55,76,)
clause 41 is antesedent for : (47,)
clause 42 is antesedent for : (47,)
clause 43 is antesedent for : (94,)
clause 44 is antesedent for : (41,92,33,)
clause 45 is antesedent for : (17,)
clause 46 is antesedent for : (17,18,)
clause 47 is antesedent for : (18,92,41,)
clause 48 is antesedent for : (69,)
clause 49 is antesedent for : (69,)
clause 50 is antesedent for : (69,)
clause 51 is antesedent for : (55,)
clause 52 is antesedent for : (48,67,)
clause 53 is antesedent for : (21,8,)
clause 54 is antesedent for : (21,)
clause 55 is antesedent for : (13,)
clause 57 is antesedent for : (72,)
clause 59 is antesedent for : (45,)
clause 79 is antesedent for : (64,)
clause 93 is antesedent for : (51,)
clause 98 is antesedent for : (88,)
clause 101 is antesedent for : (92,)
clause 108 is antesedent for : (91,)
clause 109 is antesedent for : (35,)
clause 111 is antesedent for : (89,)
clause 113 is antesedent for : (9,)
clause 117 is antesedent for : (73,)
clause 142 is antesedent for : (5,)
clause 144 is antesedent for : (38,)
clause 148 is antesedent for : (71,)
clause 152 is antesedent for : (2,)
clause 153 is antesedent for : (84,)
clause 160 is antesedent for : (52,)
clause 161 is antesedent for : (90,60,48,4,)
clause 162 is antesedent for : (58,58,)
clause 163 is antesedent for : (93,67,)
clause 164 is antesedent for : (59,92,)
clause 165 is antesedent for : (57,)
clause 166 is antesedent for : (83,)
u = -99
v = 99
antecedent num = 6
clause 6 = (-56 83 -99 )
deletion times = 13
last deleted indices: {164;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
165) (-20 50 -57 )
166) (-56 -33 -83 )
u = -83
v = 83
antecedent num = 166
clause 166 = (-56 -33 -83 )
deletion times = 13
last deleted indices: {164;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
165) (-20 50 -57 )
166) (-56 -33 -83 )
u = 56
v = 56
antecedent num = 3
clause 3 = (1 -33 56 )
deletion times = 13
last deleted indices: {164;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
165) (-20 50 -57 )
166) (-56 -33 -83 )
u = 33
v = 33
antecedent num = 2
clause 2 = (1 -4 33 )
deletion times = 13
last deleted indices: {164;166;167;168;}
cnf state right before exception
CNF State: 
0) (4 8 97 )
1) (4 8 -97 )
2) (1 -4 33 )
3) (1 -33 56 )
4) (-33 54 -56 )
5) (-56 83 99 )
6) (-56 83 -99 )
7) (-56 70 -83 )
8) (-33 -70 -83 )
9) (-1 20 36 )
10) (26 36 97 )
11) (28 49 -97 )
12) (-28 49 51 )
13) (-28 -51 59 )
14) (36 -49 59 )
15) (-1 40 -59 )
16) (26 -40 -59 )
17) (-26 50 57 )
18) (-20 -57 73 )
19) (50 -57 -73 )
20) (-26 36 -50 )
21) (-1 -4 -36 )
22) (54 80 82 )
23) (14 -54 80 )
24) (-14 -54 82 )
25) (-8 -80 82 )
26) (13 52 90 )
27) (-13 52 90 )
28) (34 -52 -82 )
29) (-34 -52 -82 )
30) (26 60 -90 )
31) (22 -26 60 )
32) (-22 60 95 )
33) (-60 95 99 )
34) (-60 95 -99 )
35) (55 -90 -95 )
36) (20 58 93 )
37) (-20 32 58 )
38) (-32 58 93 )
39) (-58 76 93 )
40) (-55 -58 -76 )
41) (18 47 94 )
42) (-47 -93 94 )
43) (18 -93 -94 )
44) (33 41 92 )
45) (17 -33 92 )
46) (-17 -18 92 )
47) (-18 41 -92 )
48) (-41 67 69 )
49) (57 67 -69 )
50) (-41 67 -69 )
51) (48 55 -67 )
52) (48 -55 -67 )
53) (-8 21 -48 )
54) (13 -21 -48 )
55) (-13 -21 -48 )
56) (45 -72 -86 )
57) (38 -67 72 )
58) (-36 -50 -74 )
59) (26 45 -51 )
60) (5 -42 -88 )
61) (22 -47 100 )
62) (35 72 98 )
63) (-46 89 -95 )
64) (-46 53 -89 )
65) (13 40 -46 )
66) (-40 -46 62 )
67) (-46 -53 -89 )
68) (-53 -81 82 )
69) (30 56 65 )
70) (11 -37 66 )
71) (10 12 58 )
72) (-10 12 20 )
73) (31 -72 -85 )
74) (50 -66 87 )
75) (-2 -30 47 )
76) (24 27 88 )
77) (31 34 37 )
78) (-39 71 -98 )
79) (46 -64 -84 )
80) (25 27 85 )
81) (-25 27 85 )
82) (-14 28 -35 )
83) (14 30 -70 )
84) (-15 -19 -63 )
85) (-16 65 -86 )
86) (-16 65 -73 )
87) (-24 61 -79 )
88) (-24 -64 -79 )
89) (-9 19 98 )
90) (-19 62 -94 )
91) (-9 -19 -62 )
92) (71 77 84 )
93) (51 77 -84 )
94) (3 -77 79 )
95) (-62 -77 79 )
96) (-3 -63 -77 )
97) (15 -61 -85 )
98) (3 76 -88 )
99) (-2 -3 25 )
100) (17 -29 69 )
101) (7 -92 97 )
102) (16 66 -88 )
103) (-7 -34 -87 )
104) (10 -85 -87 )
105) (42 87 100 )
106) (3 -10 -78 )
107) (6 29 31 )
108) (5 76 91 )
109) (14 -35 -80 )
110) (9 -11 64 )
111) (35 38 89 )
112) (-11 -68 -98 )
113) (7 9 -80 )
114) (57 86 96 )
115) (-49 -71 96 )
116) (-15 29 -96 )
117) (21 73 -76 )
118) (-12 -78 -81 )
119) (39 -45 -75 )
120) (6 43 -100 )
121) (-38 44 99 )
122) (-38 44 -75 )
123) (-42 -51 -74 )
124) (16 19 39 )
125) (15 -22 -81 )
126) (-15 -37 78 )
127) (-6 -32 -75 )
128) (44 -60 91 )
129) (53 67 88 )
130) (-39 42 86 )
131) (-7 74 -91 )
132) (2 -59 68 )
133) (-44 78 -100 )
134) (-7 -42 -66 )
135) (-49 75 -91 )
136) (11 -23 -68 )
137) (-23 -27 -74 )
138) (-59 68 81 )
139) (33 -42 -66 )
140) (23 -27 63 )
141) (-61 70 75 )
142) (-5 -17 42 )
143) (-6 -25 -49 )
144) (23 -38 74 )
145) (32 -74 -96 )
146) (-45 63 84 )
147) (-5 -23 64 )
148) (46 -71 97 )
149) (-45 61 -71 )
150) (-5 -7 43 )
151) (-5 24 74 )
152) (2 23 74 )
153) (84 85 )
154) (-29 75 81 )
155) (-31 -43 -44 )
156) (37 -65 )
157) (-12 -25 -31 )
158) (2 -43 74 )
159) (-30 37 -61 )
160) (-82 -52 )
161) (52 90 )
162) (-55 93 -58 )
163) (58 93 )
164) (-1 26 -59 )
165) (-20 50 -57 )
166) (-56 -33 -83 )
u = -1
v = 1
antecedent num = -1
